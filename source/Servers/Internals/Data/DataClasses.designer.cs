#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18033
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EQEmulator.Servers.Internals.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="EQEmulator")]
	internal partial class EmuDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertLoginAccount(LoginAccount instance);
    partial void UpdateLoginAccount(LoginAccount instance);
    partial void DeleteLoginAccount(LoginAccount instance);
    partial void InsertWorldServer(WorldServer instance);
    partial void UpdateWorldServer(WorldServer instance);
    partial void DeleteWorldServer(WorldServer instance);
    partial void InsertAccount(Account instance);
    partial void UpdateAccount(Account instance);
    partial void DeleteAccount(Account instance);
    partial void InsertNameFilter(NameFilter instance);
    partial void UpdateNameFilter(NameFilter instance);
    partial void DeleteNameFilter(NameFilter instance);
    partial void InsertCharacterBind(CharacterBind instance);
    partial void UpdateCharacterBind(CharacterBind instance);
    partial void DeleteCharacterBind(CharacterBind instance);
    partial void InsertZone(Zone instance);
    partial void UpdateZone(Zone instance);
    partial void DeleteZone(Zone instance);
    partial void InsertZonePoint(ZonePoint instance);
    partial void UpdateZonePoint(ZonePoint instance);
    partial void DeleteZonePoint(ZonePoint instance);
    partial void InsertSpawn(Spawn instance);
    partial void UpdateSpawn(Spawn instance);
    partial void DeleteSpawn(Spawn instance);
    partial void InsertSpawnGroup(SpawnGroup instance);
    partial void UpdateSpawnGroup(SpawnGroup instance);
    partial void DeleteSpawnGroup(SpawnGroup instance);
    partial void InsertSpawnGroupEntry(SpawnGroupEntry instance);
    partial void UpdateSpawnGroupEntry(SpawnGroupEntry instance);
    partial void DeleteSpawnGroupEntry(SpawnGroupEntry instance);
    partial void InsertNpc(Npc instance);
    partial void UpdateNpc(Npc instance);
    partial void DeleteNpc(Npc instance);
    partial void InsertCharacter(Character instance);
    partial void UpdateCharacter(Character instance);
    partial void DeleteCharacter(Character instance);
    partial void InsertGrid(Grid instance);
    partial void UpdateGrid(Grid instance);
    partial void DeleteGrid(Grid instance);
    partial void InsertGridEntry(GridEntry instance);
    partial void UpdateGridEntry(GridEntry instance);
    partial void DeleteGridEntry(GridEntry instance);
    partial void InsertDoor(Door instance);
    partial void UpdateDoor(Door instance);
    partial void DeleteDoor(Door instance);
    partial void InsertStartZone(StartZone instance);
    partial void UpdateStartZone(StartZone instance);
    partial void DeleteStartZone(StartZone instance);
    partial void InsertItem(Item instance);
    partial void UpdateItem(Item instance);
    partial void DeleteItem(Item instance);
    partial void InsertInventoryItem(InventoryItem instance);
    partial void UpdateInventoryItem(InventoryItem instance);
    partial void DeleteInventoryItem(InventoryItem instance);
    partial void InsertStartingItem(StartingItem instance);
    partial void UpdateStartingItem(StartingItem instance);
    partial void DeleteStartingItem(StartingItem instance);
    partial void InsertLoot(Loot instance);
    partial void UpdateLoot(Loot instance);
    partial void DeleteLoot(Loot instance);
    partial void InsertLootDrop(LootDrop instance);
    partial void UpdateLootDrop(LootDrop instance);
    partial void DeleteLootDrop(LootDrop instance);
    partial void InsertLootEntry(LootEntry instance);
    partial void UpdateLootEntry(LootEntry instance);
    partial void DeleteLootEntry(LootEntry instance);
    partial void InsertBook(Book instance);
    partial void UpdateBook(Book instance);
    partial void DeleteBook(Book instance);
    partial void InsertSkillCap(SkillCap instance);
    partial void UpdateSkillCap(SkillCap instance);
    partial void DeleteSkillCap(SkillCap instance);
    partial void InsertSpell(Spell instance);
    partial void UpdateSpell(Spell instance);
    partial void DeleteSpell(Spell instance);
    partial void InsertMemorizedSpell(MemorizedSpell instance);
    partial void UpdateMemorizedSpell(MemorizedSpell instance);
    partial void DeleteMemorizedSpell(MemorizedSpell instance);
    partial void InsertScribedSpell(ScribedSpell instance);
    partial void UpdateScribedSpell(ScribedSpell instance);
    partial void DeleteScribedSpell(ScribedSpell instance);
    #endregion
		
		public EmuDataContext() : 
				base(global::EQEmulator.Servers.Properties.Settings.Default.EQEmulatorConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public EmuDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EmuDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EmuDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EmuDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		internal System.Data.Linq.Table<LoginAccount> LoginAccounts
		{
			get
			{
				return this.GetTable<LoginAccount>();
			}
		}
		
		public System.Data.Linq.Table<WorldServer> WorldServers
		{
			get
			{
				return this.GetTable<WorldServer>();
			}
		}
		
		internal System.Data.Linq.Table<Account> Accounts
		{
			get
			{
				return this.GetTable<Account>();
			}
		}
		
		public System.Data.Linq.Table<NameFilter> NameFilters
		{
			get
			{
				return this.GetTable<NameFilter>();
			}
		}
		
		internal System.Data.Linq.Table<CharacterBind> CharacterBinds
		{
			get
			{
				return this.GetTable<CharacterBind>();
			}
		}
		
		internal System.Data.Linq.Table<Zone> Zones
		{
			get
			{
				return this.GetTable<Zone>();
			}
		}
		
		internal System.Data.Linq.Table<ZonePoint> ZonePoints
		{
			get
			{
				return this.GetTable<ZonePoint>();
			}
		}
		
		internal System.Data.Linq.Table<Spawn> Spawns
		{
			get
			{
				return this.GetTable<Spawn>();
			}
		}
		
		internal System.Data.Linq.Table<SpawnGroup> SpawnGroups
		{
			get
			{
				return this.GetTable<SpawnGroup>();
			}
		}
		
		internal System.Data.Linq.Table<SpawnGroupEntry> SpawnGroupEntries
		{
			get
			{
				return this.GetTable<SpawnGroupEntry>();
			}
		}
		
		internal System.Data.Linq.Table<Npc> Npcs
		{
			get
			{
				return this.GetTable<Npc>();
			}
		}
		
		internal System.Data.Linq.Table<Character> Characters
		{
			get
			{
				return this.GetTable<Character>();
			}
		}
		
		public System.Data.Linq.Table<Grid> Grids
		{
			get
			{
				return this.GetTable<Grid>();
			}
		}
		
		public System.Data.Linq.Table<GridEntry> GridEntries
		{
			get
			{
				return this.GetTable<GridEntry>();
			}
		}
		
		internal System.Data.Linq.Table<Door> Doors
		{
			get
			{
				return this.GetTable<Door>();
			}
		}
		
		internal System.Data.Linq.Table<StartZone> StartZones
		{
			get
			{
				return this.GetTable<StartZone>();
			}
		}
		
		internal System.Data.Linq.Table<Item> Items
		{
			get
			{
				return this.GetTable<Item>();
			}
		}
		
		internal System.Data.Linq.Table<InventoryItem> InventoryItems
		{
			get
			{
				return this.GetTable<InventoryItem>();
			}
		}
		
		internal System.Data.Linq.Table<StartingItem> StartingItems
		{
			get
			{
				return this.GetTable<StartingItem>();
			}
		}
		
		internal System.Data.Linq.Table<Loot> Loots
		{
			get
			{
				return this.GetTable<Loot>();
			}
		}
		
		internal System.Data.Linq.Table<LootDrop> LootDrops
		{
			get
			{
				return this.GetTable<LootDrop>();
			}
		}
		
		internal System.Data.Linq.Table<LootEntry> LootEntries
		{
			get
			{
				return this.GetTable<LootEntry>();
			}
		}
		
		public System.Data.Linq.Table<Book> Books
		{
			get
			{
				return this.GetTable<Book>();
			}
		}
		
		internal System.Data.Linq.Table<SkillCap> SkillCaps
		{
			get
			{
				return this.GetTable<SkillCap>();
			}
		}
		
		internal System.Data.Linq.Table<ServerConfig> ServerConfigs
		{
			get
			{
				return this.GetTable<ServerConfig>();
			}
		}
		
		internal System.Data.Linq.Table<Spell> Spells
		{
			get
			{
				return this.GetTable<Spell>();
			}
		}
		
		public System.Data.Linq.Table<MemorizedSpell> MemorizedSpells
		{
			get
			{
				return this.GetTable<MemorizedSpell>();
			}
		}
		
		public System.Data.Linq.Table<ScribedSpell> ScribedSpells
		{
			get
			{
				return this.GetTable<ScribedSpell>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LoginAccount")]
	internal partial class LoginAccount : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LoginAccountID;
		
		private string _Name;
		
		private string _Password;
		
		private string _IPAddress;
		
		private System.DateTime _LastLoginDate;
		
		private System.DateTime _CreationDate;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLoginAccountIDChanging(int value);
    partial void OnLoginAccountIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnIPAddressChanging(string value);
    partial void OnIPAddressChanged();
    partial void OnLastLoginDateChanging(System.DateTime value);
    partial void OnLastLoginDateChanged();
    partial void OnCreationDateChanging(System.DateTime value);
    partial void OnCreationDateChanged();
    #endregion
		
		public LoginAccount()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoginAccountID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LoginAccountID
		{
			get
			{
				return this._LoginAccountID;
			}
			set
			{
				if ((this._LoginAccountID != value))
				{
					this.OnLoginAccountIDChanging(value);
					this.SendPropertyChanging();
					this._LoginAccountID = value;
					this.SendPropertyChanged("LoginAccountID");
					this.OnLoginAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPAddress", DbType="VarChar(20)")]
		public string IPAddress
		{
			get
			{
				return this._IPAddress;
			}
			set
			{
				if ((this._IPAddress != value))
				{
					this.OnIPAddressChanging(value);
					this.SendPropertyChanging();
					this._IPAddress = value;
					this.SendPropertyChanged("IPAddress");
					this.OnIPAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLoginDate", DbType="DateTime NOT NULL")]
		public System.DateTime LastLoginDate
		{
			get
			{
				return this._LastLoginDate;
			}
			set
			{
				if ((this._LastLoginDate != value))
				{
					this.OnLastLoginDateChanging(value);
					this.SendPropertyChanging();
					this._LastLoginDate = value;
					this.SendPropertyChanged("LastLoginDate");
					this.OnLastLoginDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreationDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreationDate
		{
			get
			{
				return this._CreationDate;
			}
			set
			{
				if ((this._CreationDate != value))
				{
					this.OnCreationDateChanging(value);
					this.SendPropertyChanging();
					this._CreationDate = value;
					this.SendPropertyChanged("CreationDate");
					this.OnCreationDateChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.WorldServer")]
	public partial class WorldServer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _WorldConfigID;
		
		private string _LongName;
		
		private string _ShortName;
		
		private short _MaxClientsAllowed;
		
		private byte _Status;
		
		private byte _ServerType;
		
		private string _IPAddress;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnWorldConfigIDChanging(int value);
    partial void OnWorldConfigIDChanged();
    partial void OnLongNameChanging(string value);
    partial void OnLongNameChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnMaxClientsAllowedChanging(short value);
    partial void OnMaxClientsAllowedChanged();
    partial void OnStatusChanging(byte value);
    partial void OnStatusChanged();
    partial void OnServerTypeChanging(byte value);
    partial void OnServerTypeChanged();
    partial void OnIPAddressChanging(string value);
    partial void OnIPAddressChanged();
    #endregion
		
		public WorldServer()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorldConfigID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int WorldConfigID
		{
			get
			{
				return this._WorldConfigID;
			}
			set
			{
				if ((this._WorldConfigID != value))
				{
					this.OnWorldConfigIDChanging(value);
					this.SendPropertyChanging();
					this._WorldConfigID = value;
					this.SendPropertyChanged("WorldConfigID");
					this.OnWorldConfigIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LongName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string LongName
		{
			get
			{
				return this._LongName;
			}
			set
			{
				if ((this._LongName != value))
				{
					this.OnLongNameChanging(value);
					this.SendPropertyChanging();
					this._LongName = value;
					this.SendPropertyChanged("LongName");
					this.OnLongNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(32) NOT NULL", CanBeNull=false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxClientsAllowed", DbType="SmallInt NOT NULL")]
		public short MaxClientsAllowed
		{
			get
			{
				return this._MaxClientsAllowed;
			}
			set
			{
				if ((this._MaxClientsAllowed != value))
				{
					this.OnMaxClientsAllowedChanging(value);
					this.SendPropertyChanging();
					this._MaxClientsAllowed = value;
					this.SendPropertyChanged("MaxClientsAllowed");
					this.OnMaxClientsAllowedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="TinyInt NOT NULL")]
		public byte Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ServerType", DbType="TinyInt NOT NULL")]
		public byte ServerType
		{
			get
			{
				return this._ServerType;
			}
			set
			{
				if ((this._ServerType != value))
				{
					this.OnServerTypeChanging(value);
					this.SendPropertyChanging();
					this._ServerType = value;
					this.SendPropertyChanged("ServerType");
					this.OnServerTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPAddress", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string IPAddress
		{
			get
			{
				return this._IPAddress;
			}
			set
			{
				if ((this._IPAddress != value))
				{
					this.OnIPAddressChanging(value);
					this.SendPropertyChanging();
					this._IPAddress = value;
					this.SendPropertyChanged("IPAddress");
					this.OnIPAddressChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Account")]
	internal partial class Account : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _AccountID;
		
		private string _Name;
		
		private string _CharName;
		
		private string _Password;
		
		private short _Status;
		
		private System.Nullable<int> _LSAccountID;
		
		private bool _GMSpeed;
		
		private bool _Revoked;
		
		private string _IPAddress;
		
		private bool _HideMe;
		
		private EntitySet<Character> _Characters;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnAccountIDChanging(int value);
    partial void OnAccountIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnCharNameChanging(string value);
    partial void OnCharNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnStatusChanging(short value);
    partial void OnStatusChanged();
    partial void OnLSAccountIDChanging(System.Nullable<int> value);
    partial void OnLSAccountIDChanged();
    partial void OnGMSpeedChanging(bool value);
    partial void OnGMSpeedChanged();
    partial void OnRevokedChanging(bool value);
    partial void OnRevokedChanged();
    partial void OnIPAddressChanging(string value);
    partial void OnIPAddressChanged();
    partial void OnHideMeChanging(bool value);
    partial void OnHideMeChanged();
    #endregion
		
		public Account()
		{
			this._Characters = new EntitySet<Character>(new Action<Character>(this.attach_Characters), new Action<Character>(this.detach_Characters));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(30)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CharName", DbType="VarChar(64)")]
		public string CharName
		{
			get
			{
				return this._CharName;
			}
			set
			{
				if ((this._CharName != value))
				{
					this.OnCharNameChanging(value);
					this.SendPropertyChanging();
					this._CharName = value;
					this.SendPropertyChanged("CharName");
					this.OnCharNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(50)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="SmallInt NOT NULL")]
		public short Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LSAccountID", DbType="Int")]
		public System.Nullable<int> LSAccountID
		{
			get
			{
				return this._LSAccountID;
			}
			set
			{
				if ((this._LSAccountID != value))
				{
					this.OnLSAccountIDChanging(value);
					this.SendPropertyChanging();
					this._LSAccountID = value;
					this.SendPropertyChanged("LSAccountID");
					this.OnLSAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GMSpeed", DbType="Bit NOT NULL")]
		public bool GMSpeed
		{
			get
			{
				return this._GMSpeed;
			}
			set
			{
				if ((this._GMSpeed != value))
				{
					this.OnGMSpeedChanging(value);
					this.SendPropertyChanging();
					this._GMSpeed = value;
					this.SendPropertyChanged("GMSpeed");
					this.OnGMSpeedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Revoked", DbType="Bit NOT NULL")]
		public bool Revoked
		{
			get
			{
				return this._Revoked;
			}
			set
			{
				if ((this._Revoked != value))
				{
					this.OnRevokedChanging(value);
					this.SendPropertyChanging();
					this._Revoked = value;
					this.SendPropertyChanged("Revoked");
					this.OnRevokedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IPAddress", DbType="VarChar(20)")]
		public string IPAddress
		{
			get
			{
				return this._IPAddress;
			}
			set
			{
				if ((this._IPAddress != value))
				{
					this.OnIPAddressChanging(value);
					this.SendPropertyChanging();
					this._IPAddress = value;
					this.SendPropertyChanged("IPAddress");
					this.OnIPAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HideMe", DbType="Bit NOT NULL")]
		public bool HideMe
		{
			get
			{
				return this._HideMe;
			}
			set
			{
				if ((this._HideMe != value))
				{
					this.OnHideMeChanging(value);
					this.SendPropertyChanging();
					this._HideMe = value;
					this.SendPropertyChanged("HideMe");
					this.OnHideMeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Character", Storage="_Characters", ThisKey="AccountID", OtherKey="AccountID")]
		public EntitySet<Character> Characters
		{
			get
			{
				return this._Characters;
			}
			set
			{
				this._Characters.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Characters(Character entity)
		{
			this.SendPropertyChanging();
			entity.Account = this;
		}
		
		private void detach_Characters(Character entity)
		{
			this.SendPropertyChanging();
			entity.Account = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NameFilter")]
	public partial class NameFilter : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NameFilterID;
		
		private string _Filter;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNameFilterIDChanging(int value);
    partial void OnNameFilterIDChanged();
    partial void OnFilterChanging(string value);
    partial void OnFilterChanged();
    #endregion
		
		public NameFilter()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameFilterID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int NameFilterID
		{
			get
			{
				return this._NameFilterID;
			}
			set
			{
				if ((this._NameFilterID != value))
				{
					this.OnNameFilterIDChanging(value);
					this.SendPropertyChanging();
					this._NameFilterID = value;
					this.SendPropertyChanged("NameFilterID");
					this.OnNameFilterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Filter", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Filter
		{
			get
			{
				return this._Filter;
			}
			set
			{
				if ((this._Filter != value))
				{
					this.OnFilterChanging(value);
					this.SendPropertyChanging();
					this._Filter = value;
					this.SendPropertyChanged("Filter");
					this.OnFilterChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CharacterBind")]
	internal partial class CharacterBind : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CharacterBindID;
		
		private int _CharacterID;
		
		private ushort _ZoneID;
		
		private double _X;
		
		private double _Y;
		
		private double _Z;
		
		private double _Heading;
		
		private EntityRef<Zone> _Zone;
		
		private EntityRef<Character> _Character;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCharacterBindIDChanging(int value);
    partial void OnCharacterBindIDChanged();
    partial void OnCharacterIDChanging(int value);
    partial void OnCharacterIDChanged();
    partial void OnZoneIDChanging(ushort value);
    partial void OnZoneIDChanged();
    partial void OnXChanging(double value);
    partial void OnXChanged();
    partial void OnYChanging(double value);
    partial void OnYChanged();
    partial void OnZChanging(double value);
    partial void OnZChanged();
    partial void OnHeadingChanging(double value);
    partial void OnHeadingChanged();
    #endregion
		
		public CharacterBind()
		{
			this._Zone = default(EntityRef<Zone>);
			this._Character = default(EntityRef<Character>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CharacterBindID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CharacterBindID
		{
			get
			{
				return this._CharacterBindID;
			}
			set
			{
				if ((this._CharacterBindID != value))
				{
					this.OnCharacterBindIDChanging(value);
					this.SendPropertyChanging();
					this._CharacterBindID = value;
					this.SendPropertyChanged("CharacterBindID");
					this.OnCharacterBindIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CharacterID", DbType="Int NOT NULL")]
		public int CharacterID
		{
			get
			{
				return this._CharacterID;
			}
			set
			{
				if ((this._CharacterID != value))
				{
					if (this._Character.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCharacterIDChanging(value);
					this.SendPropertyChanging();
					this._CharacterID = value;
					this.SendPropertyChanged("CharacterID");
					this.OnCharacterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZoneID", DbType="SmallInt NOT NULL")]
		public ushort ZoneID
		{
			get
			{
				return this._ZoneID;
			}
			set
			{
				if ((this._ZoneID != value))
				{
					if (this._Zone.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnZoneIDChanging(value);
					this.SendPropertyChanging();
					this._ZoneID = value;
					this.SendPropertyChanged("ZoneID");
					this.OnZoneIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_X", DbType="Float NOT NULL")]
		public double X
		{
			get
			{
				return this._X;
			}
			set
			{
				if ((this._X != value))
				{
					this.OnXChanging(value);
					this.SendPropertyChanging();
					this._X = value;
					this.SendPropertyChanged("X");
					this.OnXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Y", DbType="Float NOT NULL")]
		public double Y
		{
			get
			{
				return this._Y;
			}
			set
			{
				if ((this._Y != value))
				{
					this.OnYChanging(value);
					this.SendPropertyChanging();
					this._Y = value;
					this.SendPropertyChanged("Y");
					this.OnYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Z", DbType="Float NOT NULL")]
		public double Z
		{
			get
			{
				return this._Z;
			}
			set
			{
				if ((this._Z != value))
				{
					this.OnZChanging(value);
					this.SendPropertyChanging();
					this._Z = value;
					this.SendPropertyChanged("Z");
					this.OnZChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Heading", DbType="Float NOT NULL")]
		public double Heading
		{
			get
			{
				return this._Heading;
			}
			set
			{
				if ((this._Heading != value))
				{
					this.OnHeadingChanging(value);
					this.SendPropertyChanging();
					this._Heading = value;
					this.SendPropertyChanged("Heading");
					this.OnHeadingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Zone_CharacterBind", Storage="_Zone", ThisKey="ZoneID", OtherKey="ZoneID", IsForeignKey=true)]
		public Zone Zone
		{
			get
			{
				return this._Zone.Entity;
			}
			set
			{
				Zone previousValue = this._Zone.Entity;
				if (((previousValue != value) 
							|| (this._Zone.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Zone.Entity = null;
						previousValue.CharacterBinds.Remove(this);
					}
					this._Zone.Entity = value;
					if ((value != null))
					{
						value.CharacterBinds.Add(this);
						this._ZoneID = value.ZoneID;
					}
					else
					{
						this._ZoneID = default(ushort);
					}
					this.SendPropertyChanged("Zone");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Character_CharacterBind", Storage="_Character", ThisKey="CharacterID", OtherKey="CharacterID", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Character Character
		{
			get
			{
				return this._Character.Entity;
			}
			set
			{
				Character previousValue = this._Character.Entity;
				if (((previousValue != value) 
							|| (this._Character.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Character.Entity = null;
						previousValue.CharacterBinds.Remove(this);
					}
					this._Character.Entity = value;
					if ((value != null))
					{
						value.CharacterBinds.Add(this);
						this._CharacterID = value.CharacterID;
					}
					else
					{
						this._CharacterID = default(int);
					}
					this.SendPropertyChanged("Character");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Zone")]
	internal partial class Zone : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private ushort _ZoneID;
		
		private string _ShortName;
		
		private string _LongName;
		
		private float _SafeX;
		
		private float _SafeY;
		
		private float _SafeZ;
		
		private byte _MinLevel;
		
		private byte _MinStatus;
		
		private System.Nullable<short> _MaxClients;
		
		private System.Nullable<byte> _Weather;
		
		private float _UnderWorld;
		
		private float _MinClip;
		
		private float _MaxClip;
		
		private float _FogMinClip;
		
		private float _FogMaxClip;
		
		private byte _FogBlue;
		
		private byte _FogRed;
		
		private byte _FogGreen;
		
		private byte _Sky;
		
		private byte _ZType;
		
		private float _XPMultiplier;
		
		private double _WalkSpeed;
		
		private byte _TimeType;
		
		private byte _FogRed1;
		
		private byte _FogGreen1;
		
		private byte _FogBlue1;
		
		private float _FogMinClip1;
		
		private float _FogMaxClip1;
		
		private byte _FogRed2;
		
		private byte _FogGreen2;
		
		private byte _FogBlue2;
		
		private float _FogMinClip2;
		
		private float _FogMaxClip2;
		
		private byte _FogRed3;
		
		private byte _FogGreen3;
		
		private byte _FogBlue3;
		
		private float _FogMinClip3;
		
		private float _FogMaxClip3;
		
		private byte _FogRed4;
		
		private byte _FogGreen4;
		
		private byte _FogBlue4;
		
		private float _FogMinClip4;
		
		private float _FogMaxClip4;
		
		private System.Nullable<int> _FlagIDNeeded;
		
		private bool _CanBind;
		
		private bool _CanCombat;
		
		private bool _CanLevitate;
		
		private bool _CanCastOutdoorSpells;
		
		private bool _CanBindOthers;
		
		private EntitySet<CharacterBind> _CharacterBinds;
		
		private EntitySet<ZonePoint> _ZonePoints;
		
		private EntitySet<Spawn> _Spawns;
		
		private EntitySet<Character> _Characters;
		
		private EntitySet<Door> _Doors;
		
		private EntitySet<StartZone> _StartZones;
		
		private EntitySet<StartZone> _StartZones1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnZoneIDChanging(ushort value);
    partial void OnZoneIDChanged();
    partial void OnShortNameChanging(string value);
    partial void OnShortNameChanged();
    partial void OnLongNameChanging(string value);
    partial void OnLongNameChanged();
    partial void OnSafeXChanging(float value);
    partial void OnSafeXChanged();
    partial void OnSafeYChanging(float value);
    partial void OnSafeYChanged();
    partial void OnSafeZChanging(float value);
    partial void OnSafeZChanged();
    partial void OnMinLevelChanging(byte value);
    partial void OnMinLevelChanged();
    partial void OnMinStatusChanging(byte value);
    partial void OnMinStatusChanged();
    partial void OnMaxClientsChanging(System.Nullable<short> value);
    partial void OnMaxClientsChanged();
    partial void OnWeatherChanging(System.Nullable<byte> value);
    partial void OnWeatherChanged();
    partial void OnUnderWorldChanging(float value);
    partial void OnUnderWorldChanged();
    partial void OnMinClipChanging(float value);
    partial void OnMinClipChanged();
    partial void OnMaxClipChanging(float value);
    partial void OnMaxClipChanged();
    partial void OnFogMinClipChanging(float value);
    partial void OnFogMinClipChanged();
    partial void OnFogMaxClipChanging(float value);
    partial void OnFogMaxClipChanged();
    partial void OnFogBlueChanging(byte value);
    partial void OnFogBlueChanged();
    partial void OnFogRedChanging(byte value);
    partial void OnFogRedChanged();
    partial void OnFogGreenChanging(byte value);
    partial void OnFogGreenChanged();
    partial void OnSkyChanging(byte value);
    partial void OnSkyChanged();
    partial void OnZTypeChanging(byte value);
    partial void OnZTypeChanged();
    partial void OnXPMultiplierChanging(float value);
    partial void OnXPMultiplierChanged();
    partial void OnWalkSpeedChanging(double value);
    partial void OnWalkSpeedChanged();
    partial void OnTimeTypeChanging(byte value);
    partial void OnTimeTypeChanged();
    partial void OnFogRed1Changing(byte value);
    partial void OnFogRed1Changed();
    partial void OnFogGreen1Changing(byte value);
    partial void OnFogGreen1Changed();
    partial void OnFogBlue1Changing(byte value);
    partial void OnFogBlue1Changed();
    partial void OnFogMinClip1Changing(float value);
    partial void OnFogMinClip1Changed();
    partial void OnFogMaxClip1Changing(float value);
    partial void OnFogMaxClip1Changed();
    partial void OnFogRed2Changing(byte value);
    partial void OnFogRed2Changed();
    partial void OnFogGreen2Changing(byte value);
    partial void OnFogGreen2Changed();
    partial void OnFogBlue2Changing(byte value);
    partial void OnFogBlue2Changed();
    partial void OnFogMinClip2Changing(float value);
    partial void OnFogMinClip2Changed();
    partial void OnFogMaxClip2Changing(float value);
    partial void OnFogMaxClip2Changed();
    partial void OnFogRed3Changing(byte value);
    partial void OnFogRed3Changed();
    partial void OnFogGreen3Changing(byte value);
    partial void OnFogGreen3Changed();
    partial void OnFogBlue3Changing(byte value);
    partial void OnFogBlue3Changed();
    partial void OnFogMinClip3Changing(float value);
    partial void OnFogMinClip3Changed();
    partial void OnFogMaxClip3Changing(float value);
    partial void OnFogMaxClip3Changed();
    partial void OnFogRed4Changing(byte value);
    partial void OnFogRed4Changed();
    partial void OnFogGreen4Changing(byte value);
    partial void OnFogGreen4Changed();
    partial void OnFogBlue4Changing(byte value);
    partial void OnFogBlue4Changed();
    partial void OnFogMinClip4Changing(float value);
    partial void OnFogMinClip4Changed();
    partial void OnFogMaxClip4Changing(float value);
    partial void OnFogMaxClip4Changed();
    partial void OnFlagIDNeededChanging(System.Nullable<int> value);
    partial void OnFlagIDNeededChanged();
    partial void OnCanBindChanging(bool value);
    partial void OnCanBindChanged();
    partial void OnCanCombatChanging(bool value);
    partial void OnCanCombatChanged();
    partial void OnCanLevitateChanging(bool value);
    partial void OnCanLevitateChanged();
    partial void OnCanCastOutdoorSpellsChanging(bool value);
    partial void OnCanCastOutdoorSpellsChanged();
    partial void OnCanBindOthersChanging(bool value);
    partial void OnCanBindOthersChanged();
    #endregion
		
		public Zone()
		{
			this._CharacterBinds = new EntitySet<CharacterBind>(new Action<CharacterBind>(this.attach_CharacterBinds), new Action<CharacterBind>(this.detach_CharacterBinds));
			this._ZonePoints = new EntitySet<ZonePoint>(new Action<ZonePoint>(this.attach_ZonePoints), new Action<ZonePoint>(this.detach_ZonePoints));
			this._Spawns = new EntitySet<Spawn>(new Action<Spawn>(this.attach_Spawns), new Action<Spawn>(this.detach_Spawns));
			this._Characters = new EntitySet<Character>(new Action<Character>(this.attach_Characters), new Action<Character>(this.detach_Characters));
			this._Doors = new EntitySet<Door>(new Action<Door>(this.attach_Doors), new Action<Door>(this.detach_Doors));
			this._StartZones = new EntitySet<StartZone>(new Action<StartZone>(this.attach_StartZones), new Action<StartZone>(this.detach_StartZones));
			this._StartZones1 = new EntitySet<StartZone>(new Action<StartZone>(this.attach_StartZones1), new Action<StartZone>(this.detach_StartZones1));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZoneID", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public ushort ZoneID
		{
			get
			{
				return this._ZoneID;
			}
			set
			{
				if ((this._ZoneID != value))
				{
					this.OnZoneIDChanging(value);
					this.SendPropertyChanging();
					this._ZoneID = value;
					this.SendPropertyChanged("ZoneID");
					this.OnZoneIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(16) NOT NULL", CanBeNull=false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this.OnShortNameChanging(value);
					this.SendPropertyChanging();
					this._ShortName = value;
					this.SendPropertyChanged("ShortName");
					this.OnShortNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LongName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string LongName
		{
			get
			{
				return this._LongName;
			}
			set
			{
				if ((this._LongName != value))
				{
					this.OnLongNameChanging(value);
					this.SendPropertyChanging();
					this._LongName = value;
					this.SendPropertyChanged("LongName");
					this.OnLongNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafeX", DbType="Float NOT NULL")]
		public float SafeX
		{
			get
			{
				return this._SafeX;
			}
			set
			{
				if ((this._SafeX != value))
				{
					this.OnSafeXChanging(value);
					this.SendPropertyChanging();
					this._SafeX = value;
					this.SendPropertyChanged("SafeX");
					this.OnSafeXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafeY", DbType="Float NOT NULL")]
		public float SafeY
		{
			get
			{
				return this._SafeY;
			}
			set
			{
				if ((this._SafeY != value))
				{
					this.OnSafeYChanging(value);
					this.SendPropertyChanging();
					this._SafeY = value;
					this.SendPropertyChanged("SafeY");
					this.OnSafeYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SafeZ", DbType="Float NOT NULL")]
		public float SafeZ
		{
			get
			{
				return this._SafeZ;
			}
			set
			{
				if ((this._SafeZ != value))
				{
					this.OnSafeZChanging(value);
					this.SendPropertyChanging();
					this._SafeZ = value;
					this.SendPropertyChanged("SafeZ");
					this.OnSafeZChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinLevel", DbType="TinyInt NOT NULL")]
		public byte MinLevel
		{
			get
			{
				return this._MinLevel;
			}
			set
			{
				if ((this._MinLevel != value))
				{
					this.OnMinLevelChanging(value);
					this.SendPropertyChanging();
					this._MinLevel = value;
					this.SendPropertyChanged("MinLevel");
					this.OnMinLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinStatus", DbType="TinyInt NOT NULL")]
		public byte MinStatus
		{
			get
			{
				return this._MinStatus;
			}
			set
			{
				if ((this._MinStatus != value))
				{
					this.OnMinStatusChanging(value);
					this.SendPropertyChanging();
					this._MinStatus = value;
					this.SendPropertyChanged("MinStatus");
					this.OnMinStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxClients", DbType="SmallInt")]
		public System.Nullable<short> MaxClients
		{
			get
			{
				return this._MaxClients;
			}
			set
			{
				if ((this._MaxClients != value))
				{
					this.OnMaxClientsChanging(value);
					this.SendPropertyChanging();
					this._MaxClients = value;
					this.SendPropertyChanged("MaxClients");
					this.OnMaxClientsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Weather", DbType="TinyInt")]
		public System.Nullable<byte> Weather
		{
			get
			{
				return this._Weather;
			}
			set
			{
				if ((this._Weather != value))
				{
					this.OnWeatherChanging(value);
					this.SendPropertyChanging();
					this._Weather = value;
					this.SendPropertyChanged("Weather");
					this.OnWeatherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnderWorld", DbType="Float NOT NULL")]
		public float UnderWorld
		{
			get
			{
				return this._UnderWorld;
			}
			set
			{
				if ((this._UnderWorld != value))
				{
					this.OnUnderWorldChanging(value);
					this.SendPropertyChanging();
					this._UnderWorld = value;
					this.SendPropertyChanged("UnderWorld");
					this.OnUnderWorldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinClip", DbType="Float NOT NULL")]
		public float MinClip
		{
			get
			{
				return this._MinClip;
			}
			set
			{
				if ((this._MinClip != value))
				{
					this.OnMinClipChanging(value);
					this.SendPropertyChanging();
					this._MinClip = value;
					this.SendPropertyChanged("MinClip");
					this.OnMinClipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxClip", DbType="Float NOT NULL")]
		public float MaxClip
		{
			get
			{
				return this._MaxClip;
			}
			set
			{
				if ((this._MaxClip != value))
				{
					this.OnMaxClipChanging(value);
					this.SendPropertyChanging();
					this._MaxClip = value;
					this.SendPropertyChanged("MaxClip");
					this.OnMaxClipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FogMinClip", DbType="Float NOT NULL")]
		public float FogMinClip
		{
			get
			{
				return this._FogMinClip;
			}
			set
			{
				if ((this._FogMinClip != value))
				{
					this.OnFogMinClipChanging(value);
					this.SendPropertyChanging();
					this._FogMinClip = value;
					this.SendPropertyChanged("FogMinClip");
					this.OnFogMinClipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FogMaxClip", DbType="Float NOT NULL")]
		public float FogMaxClip
		{
			get
			{
				return this._FogMaxClip;
			}
			set
			{
				if ((this._FogMaxClip != value))
				{
					this.OnFogMaxClipChanging(value);
					this.SendPropertyChanging();
					this._FogMaxClip = value;
					this.SendPropertyChanged("FogMaxClip");
					this.OnFogMaxClipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FogBlue", DbType="TinyInt NOT NULL")]
		public byte FogBlue
		{
			get
			{
				return this._FogBlue;
			}
			set
			{
				if ((this._FogBlue != value))
				{
					this.OnFogBlueChanging(value);
					this.SendPropertyChanging();
					this._FogBlue = value;
					this.SendPropertyChanged("FogBlue");
					this.OnFogBlueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FogRed", DbType="TinyInt NOT NULL")]
		public byte FogRed
		{
			get
			{
				return this._FogRed;
			}
			set
			{
				if ((this._FogRed != value))
				{
					this.OnFogRedChanging(value);
					this.SendPropertyChanging();
					this._FogRed = value;
					this.SendPropertyChanged("FogRed");
					this.OnFogRedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FogGreen", DbType="TinyInt NOT NULL")]
		public byte FogGreen
		{
			get
			{
				return this._FogGreen;
			}
			set
			{
				if ((this._FogGreen != value))
				{
					this.OnFogGreenChanging(value);
					this.SendPropertyChanging();
					this._FogGreen = value;
					this.SendPropertyChanged("FogGreen");
					this.OnFogGreenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sky", DbType="TinyInt NOT NULL")]
		public byte Sky
		{
			get
			{
				return this._Sky;
			}
			set
			{
				if ((this._Sky != value))
				{
					this.OnSkyChanging(value);
					this.SendPropertyChanging();
					this._Sky = value;
					this.SendPropertyChanged("Sky");
					this.OnSkyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZType", DbType="TinyInt NOT NULL")]
		public byte ZType
		{
			get
			{
				return this._ZType;
			}
			set
			{
				if ((this._ZType != value))
				{
					this.OnZTypeChanging(value);
					this.SendPropertyChanging();
					this._ZType = value;
					this.SendPropertyChanged("ZType");
					this.OnZTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XPMultiplier", DbType="Float NOT NULL")]
		public float XPMultiplier
		{
			get
			{
				return this._XPMultiplier;
			}
			set
			{
				if ((this._XPMultiplier != value))
				{
					this.OnXPMultiplierChanging(value);
					this.SendPropertyChanging();
					this._XPMultiplier = value;
					this.SendPropertyChanged("XPMultiplier");
					this.OnXPMultiplierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WalkSpeed", DbType="Float NOT NULL")]
		public double WalkSpeed
		{
			get
			{
				return this._WalkSpeed;
			}
			set
			{
				if ((this._WalkSpeed != value))
				{
					this.OnWalkSpeedChanging(value);
					this.SendPropertyChanging();
					this._WalkSpeed = value;
					this.SendPropertyChanged("WalkSpeed");
					this.OnWalkSpeedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeType", DbType="TinyInt NOT NULL")]
		public byte TimeType
		{
			get
			{
				return this._TimeType;
			}
			set
			{
				if ((this._TimeType != value))
				{
					this.OnTimeTypeChanging(value);
					this.SendPropertyChanging();
					this._TimeType = value;
					this.SendPropertyChanged("TimeType");
					this.OnTimeTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FogRed1", DbType="TinyInt NOT NULL")]
		public byte FogRed1
		{
			get
			{
				return this._FogRed1;
			}
			set
			{
				if ((this._FogRed1 != value))
				{
					this.OnFogRed1Changing(value);
					this.SendPropertyChanging();
					this._FogRed1 = value;
					this.SendPropertyChanged("FogRed1");
					this.OnFogRed1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FogGreen1", DbType="TinyInt NOT NULL")]
		public byte FogGreen1
		{
			get
			{
				return this._FogGreen1;
			}
			set
			{
				if ((this._FogGreen1 != value))
				{
					this.OnFogGreen1Changing(value);
					this.SendPropertyChanging();
					this._FogGreen1 = value;
					this.SendPropertyChanged("FogGreen1");
					this.OnFogGreen1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FogBlue1", DbType="TinyInt NOT NULL")]
		public byte FogBlue1
		{
			get
			{
				return this._FogBlue1;
			}
			set
			{
				if ((this._FogBlue1 != value))
				{
					this.OnFogBlue1Changing(value);
					this.SendPropertyChanging();
					this._FogBlue1 = value;
					this.SendPropertyChanged("FogBlue1");
					this.OnFogBlue1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FogMinClip1", DbType="Float NOT NULL")]
		public float FogMinClip1
		{
			get
			{
				return this._FogMinClip1;
			}
			set
			{
				if ((this._FogMinClip1 != value))
				{
					this.OnFogMinClip1Changing(value);
					this.SendPropertyChanging();
					this._FogMinClip1 = value;
					this.SendPropertyChanged("FogMinClip1");
					this.OnFogMinClip1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FogMaxClip1", DbType="Float NOT NULL")]
		public float FogMaxClip1
		{
			get
			{
				return this._FogMaxClip1;
			}
			set
			{
				if ((this._FogMaxClip1 != value))
				{
					this.OnFogMaxClip1Changing(value);
					this.SendPropertyChanging();
					this._FogMaxClip1 = value;
					this.SendPropertyChanged("FogMaxClip1");
					this.OnFogMaxClip1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FogRed2", DbType="TinyInt NOT NULL")]
		public byte FogRed2
		{
			get
			{
				return this._FogRed2;
			}
			set
			{
				if ((this._FogRed2 != value))
				{
					this.OnFogRed2Changing(value);
					this.SendPropertyChanging();
					this._FogRed2 = value;
					this.SendPropertyChanged("FogRed2");
					this.OnFogRed2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FogGreen2", DbType="TinyInt NOT NULL")]
		public byte FogGreen2
		{
			get
			{
				return this._FogGreen2;
			}
			set
			{
				if ((this._FogGreen2 != value))
				{
					this.OnFogGreen2Changing(value);
					this.SendPropertyChanging();
					this._FogGreen2 = value;
					this.SendPropertyChanged("FogGreen2");
					this.OnFogGreen2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FogBlue2", DbType="TinyInt NOT NULL")]
		public byte FogBlue2
		{
			get
			{
				return this._FogBlue2;
			}
			set
			{
				if ((this._FogBlue2 != value))
				{
					this.OnFogBlue2Changing(value);
					this.SendPropertyChanging();
					this._FogBlue2 = value;
					this.SendPropertyChanged("FogBlue2");
					this.OnFogBlue2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FogMinClip2", DbType="Float NOT NULL")]
		public float FogMinClip2
		{
			get
			{
				return this._FogMinClip2;
			}
			set
			{
				if ((this._FogMinClip2 != value))
				{
					this.OnFogMinClip2Changing(value);
					this.SendPropertyChanging();
					this._FogMinClip2 = value;
					this.SendPropertyChanged("FogMinClip2");
					this.OnFogMinClip2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FogMaxClip2", DbType="Float NOT NULL")]
		public float FogMaxClip2
		{
			get
			{
				return this._FogMaxClip2;
			}
			set
			{
				if ((this._FogMaxClip2 != value))
				{
					this.OnFogMaxClip2Changing(value);
					this.SendPropertyChanging();
					this._FogMaxClip2 = value;
					this.SendPropertyChanged("FogMaxClip2");
					this.OnFogMaxClip2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FogRed3", DbType="TinyInt NOT NULL")]
		public byte FogRed3
		{
			get
			{
				return this._FogRed3;
			}
			set
			{
				if ((this._FogRed3 != value))
				{
					this.OnFogRed3Changing(value);
					this.SendPropertyChanging();
					this._FogRed3 = value;
					this.SendPropertyChanged("FogRed3");
					this.OnFogRed3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FogGreen3", DbType="TinyInt NOT NULL")]
		public byte FogGreen3
		{
			get
			{
				return this._FogGreen3;
			}
			set
			{
				if ((this._FogGreen3 != value))
				{
					this.OnFogGreen3Changing(value);
					this.SendPropertyChanging();
					this._FogGreen3 = value;
					this.SendPropertyChanged("FogGreen3");
					this.OnFogGreen3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FogBlue3", DbType="TinyInt NOT NULL")]
		public byte FogBlue3
		{
			get
			{
				return this._FogBlue3;
			}
			set
			{
				if ((this._FogBlue3 != value))
				{
					this.OnFogBlue3Changing(value);
					this.SendPropertyChanging();
					this._FogBlue3 = value;
					this.SendPropertyChanged("FogBlue3");
					this.OnFogBlue3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FogMinClip3", DbType="Float NOT NULL")]
		public float FogMinClip3
		{
			get
			{
				return this._FogMinClip3;
			}
			set
			{
				if ((this._FogMinClip3 != value))
				{
					this.OnFogMinClip3Changing(value);
					this.SendPropertyChanging();
					this._FogMinClip3 = value;
					this.SendPropertyChanged("FogMinClip3");
					this.OnFogMinClip3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FogMaxClip3", DbType="Float NOT NULL")]
		public float FogMaxClip3
		{
			get
			{
				return this._FogMaxClip3;
			}
			set
			{
				if ((this._FogMaxClip3 != value))
				{
					this.OnFogMaxClip3Changing(value);
					this.SendPropertyChanging();
					this._FogMaxClip3 = value;
					this.SendPropertyChanged("FogMaxClip3");
					this.OnFogMaxClip3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FogRed4", DbType="TinyInt NOT NULL")]
		public byte FogRed4
		{
			get
			{
				return this._FogRed4;
			}
			set
			{
				if ((this._FogRed4 != value))
				{
					this.OnFogRed4Changing(value);
					this.SendPropertyChanging();
					this._FogRed4 = value;
					this.SendPropertyChanged("FogRed4");
					this.OnFogRed4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FogGreen4", DbType="TinyInt NOT NULL")]
		public byte FogGreen4
		{
			get
			{
				return this._FogGreen4;
			}
			set
			{
				if ((this._FogGreen4 != value))
				{
					this.OnFogGreen4Changing(value);
					this.SendPropertyChanging();
					this._FogGreen4 = value;
					this.SendPropertyChanged("FogGreen4");
					this.OnFogGreen4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FogBlue4", DbType="TinyInt NOT NULL")]
		public byte FogBlue4
		{
			get
			{
				return this._FogBlue4;
			}
			set
			{
				if ((this._FogBlue4 != value))
				{
					this.OnFogBlue4Changing(value);
					this.SendPropertyChanging();
					this._FogBlue4 = value;
					this.SendPropertyChanged("FogBlue4");
					this.OnFogBlue4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FogMinClip4", DbType="Float NOT NULL")]
		public float FogMinClip4
		{
			get
			{
				return this._FogMinClip4;
			}
			set
			{
				if ((this._FogMinClip4 != value))
				{
					this.OnFogMinClip4Changing(value);
					this.SendPropertyChanging();
					this._FogMinClip4 = value;
					this.SendPropertyChanged("FogMinClip4");
					this.OnFogMinClip4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FogMaxClip4", DbType="Float NOT NULL")]
		public float FogMaxClip4
		{
			get
			{
				return this._FogMaxClip4;
			}
			set
			{
				if ((this._FogMaxClip4 != value))
				{
					this.OnFogMaxClip4Changing(value);
					this.SendPropertyChanging();
					this._FogMaxClip4 = value;
					this.SendPropertyChanged("FogMaxClip4");
					this.OnFogMaxClip4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FlagIDNeeded", DbType="Int")]
		public System.Nullable<int> FlagIDNeeded
		{
			get
			{
				return this._FlagIDNeeded;
			}
			set
			{
				if ((this._FlagIDNeeded != value))
				{
					this.OnFlagIDNeededChanging(value);
					this.SendPropertyChanging();
					this._FlagIDNeeded = value;
					this.SendPropertyChanged("FlagIDNeeded");
					this.OnFlagIDNeededChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanBind", DbType="Bit NOT NULL")]
		public bool CanBind
		{
			get
			{
				return this._CanBind;
			}
			set
			{
				if ((this._CanBind != value))
				{
					this.OnCanBindChanging(value);
					this.SendPropertyChanging();
					this._CanBind = value;
					this.SendPropertyChanged("CanBind");
					this.OnCanBindChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanCombat", DbType="Bit NOT NULL")]
		public bool CanCombat
		{
			get
			{
				return this._CanCombat;
			}
			set
			{
				if ((this._CanCombat != value))
				{
					this.OnCanCombatChanging(value);
					this.SendPropertyChanging();
					this._CanCombat = value;
					this.SendPropertyChanged("CanCombat");
					this.OnCanCombatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanLevitate", DbType="Bit NOT NULL")]
		public bool CanLevitate
		{
			get
			{
				return this._CanLevitate;
			}
			set
			{
				if ((this._CanLevitate != value))
				{
					this.OnCanLevitateChanging(value);
					this.SendPropertyChanging();
					this._CanLevitate = value;
					this.SendPropertyChanged("CanLevitate");
					this.OnCanLevitateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanCastOutdoorSpells", DbType="Bit NOT NULL")]
		public bool CanCastOutdoorSpells
		{
			get
			{
				return this._CanCastOutdoorSpells;
			}
			set
			{
				if ((this._CanCastOutdoorSpells != value))
				{
					this.OnCanCastOutdoorSpellsChanging(value);
					this.SendPropertyChanging();
					this._CanCastOutdoorSpells = value;
					this.SendPropertyChanged("CanCastOutdoorSpells");
					this.OnCanCastOutdoorSpellsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanBindOthers", DbType="Bit NOT NULL")]
		public bool CanBindOthers
		{
			get
			{
				return this._CanBindOthers;
			}
			set
			{
				if ((this._CanBindOthers != value))
				{
					this.OnCanBindOthersChanging(value);
					this.SendPropertyChanging();
					this._CanBindOthers = value;
					this.SendPropertyChanged("CanBindOthers");
					this.OnCanBindOthersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Zone_CharacterBind", Storage="_CharacterBinds", ThisKey="ZoneID", OtherKey="ZoneID")]
		public EntitySet<CharacterBind> CharacterBinds
		{
			get
			{
				return this._CharacterBinds;
			}
			set
			{
				this._CharacterBinds.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Zone_ZonePoint", Storage="_ZonePoints", ThisKey="ZoneID", OtherKey="ZoneID")]
		public EntitySet<ZonePoint> ZonePoints
		{
			get
			{
				return this._ZonePoints;
			}
			set
			{
				this._ZonePoints.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Zone_Spawn", Storage="_Spawns", ThisKey="ZoneID", OtherKey="ZoneID")]
		public EntitySet<Spawn> Spawns
		{
			get
			{
				return this._Spawns;
			}
			set
			{
				this._Spawns.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Zone_Character", Storage="_Characters", ThisKey="ZoneID", OtherKey="ZoneID")]
		public EntitySet<Character> Characters
		{
			get
			{
				return this._Characters;
			}
			set
			{
				this._Characters.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Zone_Door", Storage="_Doors", ThisKey="ZoneID", OtherKey="ZoneID")]
		public EntitySet<Door> Doors
		{
			get
			{
				return this._Doors;
			}
			set
			{
				this._Doors.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Zone_StartZone", Storage="_StartZones", ThisKey="ZoneID", OtherKey="ZoneID")]
		public EntitySet<StartZone> StartZones
		{
			get
			{
				return this._StartZones;
			}
			set
			{
				this._StartZones.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Zone_StartZone1", Storage="_StartZones1", ThisKey="ZoneID", OtherKey="BindZoneID")]
		public EntitySet<StartZone> StartZones1
		{
			get
			{
				return this._StartZones1;
			}
			set
			{
				this._StartZones1.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CharacterBinds(CharacterBind entity)
		{
			this.SendPropertyChanging();
			entity.Zone = this;
		}
		
		private void detach_CharacterBinds(CharacterBind entity)
		{
			this.SendPropertyChanging();
			entity.Zone = null;
		}
		
		private void attach_ZonePoints(ZonePoint entity)
		{
			this.SendPropertyChanging();
			entity.Zone = this;
		}
		
		private void detach_ZonePoints(ZonePoint entity)
		{
			this.SendPropertyChanging();
			entity.Zone = null;
		}
		
		private void attach_Spawns(Spawn entity)
		{
			this.SendPropertyChanging();
			entity.Zone = this;
		}
		
		private void detach_Spawns(Spawn entity)
		{
			this.SendPropertyChanging();
			entity.Zone = null;
		}
		
		private void attach_Characters(Character entity)
		{
			this.SendPropertyChanging();
			entity.Zone = this;
		}
		
		private void detach_Characters(Character entity)
		{
			this.SendPropertyChanging();
			entity.Zone = null;
		}
		
		private void attach_Doors(Door entity)
		{
			this.SendPropertyChanging();
			entity.Zone = this;
		}
		
		private void detach_Doors(Door entity)
		{
			this.SendPropertyChanging();
			entity.Zone = null;
		}
		
		private void attach_StartZones(StartZone entity)
		{
			this.SendPropertyChanging();
			entity.Zone = this;
		}
		
		private void detach_StartZones(StartZone entity)
		{
			this.SendPropertyChanging();
			entity.Zone = null;
		}
		
		private void attach_StartZones1(StartZone entity)
		{
			this.SendPropertyChanging();
			entity.BindZone = this;
		}
		
		private void detach_StartZones1(StartZone entity)
		{
			this.SendPropertyChanging();
			entity.BindZone = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ZonePoint")]
	internal partial class ZonePoint : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ZonePointID;
		
		private ushort _ZoneID;
		
		private short _Number;
		
		private float _X;
		
		private float _Y;
		
		private float _Z;
		
		private float _Heading;
		
		private float _TargetX;
		
		private float _TargetY;
		
		private float _TargetZ;
		
		private float _TargetHeading;
		
		private System.Nullable<short> _ZoneInstance;
		
		private ushort _TargetZoneID;
		
		private EntityRef<Zone> _Zone;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnZonePointIDChanging(int value);
    partial void OnZonePointIDChanged();
    partial void OnZoneIDChanging(ushort value);
    partial void OnZoneIDChanged();
    partial void OnNumberChanging(short value);
    partial void OnNumberChanged();
    partial void OnXChanging(float value);
    partial void OnXChanged();
    partial void OnYChanging(float value);
    partial void OnYChanged();
    partial void OnZChanging(float value);
    partial void OnZChanged();
    partial void OnHeadingChanging(float value);
    partial void OnHeadingChanged();
    partial void OnTargetXChanging(float value);
    partial void OnTargetXChanged();
    partial void OnTargetYChanging(float value);
    partial void OnTargetYChanged();
    partial void OnTargetZChanging(float value);
    partial void OnTargetZChanged();
    partial void OnTargetHeadingChanging(float value);
    partial void OnTargetHeadingChanged();
    partial void OnZoneInstanceChanging(System.Nullable<short> value);
    partial void OnZoneInstanceChanged();
    partial void OnTargetZoneIDChanging(ushort value);
    partial void OnTargetZoneIDChanged();
    #endregion
		
		public ZonePoint()
		{
			this._Zone = default(EntityRef<Zone>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZonePointID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ZonePointID
		{
			get
			{
				return this._ZonePointID;
			}
			set
			{
				if ((this._ZonePointID != value))
				{
					this.OnZonePointIDChanging(value);
					this.SendPropertyChanging();
					this._ZonePointID = value;
					this.SendPropertyChanged("ZonePointID");
					this.OnZonePointIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZoneID", DbType="SmallInt NOT NULL")]
		public ushort ZoneID
		{
			get
			{
				return this._ZoneID;
			}
			set
			{
				if ((this._ZoneID != value))
				{
					if (this._Zone.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnZoneIDChanging(value);
					this.SendPropertyChanging();
					this._ZoneID = value;
					this.SendPropertyChanged("ZoneID");
					this.OnZoneIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Number", DbType="SmallInt NOT NULL")]
		public short Number
		{
			get
			{
				return this._Number;
			}
			set
			{
				if ((this._Number != value))
				{
					this.OnNumberChanging(value);
					this.SendPropertyChanging();
					this._Number = value;
					this.SendPropertyChanged("Number");
					this.OnNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_X", DbType="Float NOT NULL")]
		public float X
		{
			get
			{
				return this._X;
			}
			set
			{
				if ((this._X != value))
				{
					this.OnXChanging(value);
					this.SendPropertyChanging();
					this._X = value;
					this.SendPropertyChanged("X");
					this.OnXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Y", DbType="Float NOT NULL")]
		public float Y
		{
			get
			{
				return this._Y;
			}
			set
			{
				if ((this._Y != value))
				{
					this.OnYChanging(value);
					this.SendPropertyChanging();
					this._Y = value;
					this.SendPropertyChanged("Y");
					this.OnYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Z", DbType="Float NOT NULL")]
		public float Z
		{
			get
			{
				return this._Z;
			}
			set
			{
				if ((this._Z != value))
				{
					this.OnZChanging(value);
					this.SendPropertyChanging();
					this._Z = value;
					this.SendPropertyChanged("Z");
					this.OnZChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Heading", DbType="Float NOT NULL")]
		public float Heading
		{
			get
			{
				return this._Heading;
			}
			set
			{
				if ((this._Heading != value))
				{
					this.OnHeadingChanging(value);
					this.SendPropertyChanging();
					this._Heading = value;
					this.SendPropertyChanged("Heading");
					this.OnHeadingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetX", DbType="Float NOT NULL")]
		public float TargetX
		{
			get
			{
				return this._TargetX;
			}
			set
			{
				if ((this._TargetX != value))
				{
					this.OnTargetXChanging(value);
					this.SendPropertyChanging();
					this._TargetX = value;
					this.SendPropertyChanged("TargetX");
					this.OnTargetXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetY", DbType="Float NOT NULL")]
		public float TargetY
		{
			get
			{
				return this._TargetY;
			}
			set
			{
				if ((this._TargetY != value))
				{
					this.OnTargetYChanging(value);
					this.SendPropertyChanging();
					this._TargetY = value;
					this.SendPropertyChanged("TargetY");
					this.OnTargetYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetZ", DbType="Float NOT NULL")]
		public float TargetZ
		{
			get
			{
				return this._TargetZ;
			}
			set
			{
				if ((this._TargetZ != value))
				{
					this.OnTargetZChanging(value);
					this.SendPropertyChanging();
					this._TargetZ = value;
					this.SendPropertyChanged("TargetZ");
					this.OnTargetZChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetHeading", DbType="Float NOT NULL")]
		public float TargetHeading
		{
			get
			{
				return this._TargetHeading;
			}
			set
			{
				if ((this._TargetHeading != value))
				{
					this.OnTargetHeadingChanging(value);
					this.SendPropertyChanging();
					this._TargetHeading = value;
					this.SendPropertyChanged("TargetHeading");
					this.OnTargetHeadingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZoneInstance", DbType="SmallInt")]
		public System.Nullable<short> ZoneInstance
		{
			get
			{
				return this._ZoneInstance;
			}
			set
			{
				if ((this._ZoneInstance != value))
				{
					this.OnZoneInstanceChanging(value);
					this.SendPropertyChanging();
					this._ZoneInstance = value;
					this.SendPropertyChanged("ZoneInstance");
					this.OnZoneInstanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetZoneID", DbType="SmallInt NOT NULL")]
		public ushort TargetZoneID
		{
			get
			{
				return this._TargetZoneID;
			}
			set
			{
				if ((this._TargetZoneID != value))
				{
					this.OnTargetZoneIDChanging(value);
					this.SendPropertyChanging();
					this._TargetZoneID = value;
					this.SendPropertyChanged("TargetZoneID");
					this.OnTargetZoneIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Zone_ZonePoint", Storage="_Zone", ThisKey="ZoneID", OtherKey="ZoneID", IsForeignKey=true)]
		public Zone Zone
		{
			get
			{
				return this._Zone.Entity;
			}
			set
			{
				Zone previousValue = this._Zone.Entity;
				if (((previousValue != value) 
							|| (this._Zone.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Zone.Entity = null;
						previousValue.ZonePoints.Remove(this);
					}
					this._Zone.Entity = value;
					if ((value != null))
					{
						value.ZonePoints.Add(this);
						this._ZoneID = value.ZoneID;
					}
					else
					{
						this._ZoneID = default(ushort);
					}
					this.SendPropertyChanged("Zone");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Spawn")]
	internal partial class Spawn : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SpawnID;
		
		private int _SpawnGroupID;
		
		private ushort _ZoneID;
		
		private float _X;
		
		private float _Y;
		
		private float _Z;
		
		private float _Heading;
		
		private int _RespawnTime;
		
		private short _Variance;
		
		private int _PathGrid;
		
		private int _TimeLeft;
		
		private int _Condition;
		
		private int _ConditionValue;
		
		private EntityRef<Zone> _Zone;
		
		private EntityRef<SpawnGroup> _SpawnGroup;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSpawnIDChanging(int value);
    partial void OnSpawnIDChanged();
    partial void OnSpawnGroupIDChanging(int value);
    partial void OnSpawnGroupIDChanged();
    partial void OnZoneIDChanging(ushort value);
    partial void OnZoneIDChanged();
    partial void OnXChanging(float value);
    partial void OnXChanged();
    partial void OnYChanging(float value);
    partial void OnYChanged();
    partial void OnZChanging(float value);
    partial void OnZChanged();
    partial void OnHeadingChanging(float value);
    partial void OnHeadingChanged();
    partial void OnRespawnTimeChanging(int value);
    partial void OnRespawnTimeChanged();
    partial void OnVarianceChanging(short value);
    partial void OnVarianceChanged();
    partial void OnPathGridChanging(int value);
    partial void OnPathGridChanged();
    partial void OnTimeLeftChanging(int value);
    partial void OnTimeLeftChanged();
    partial void OnConditionChanging(int value);
    partial void OnConditionChanged();
    partial void OnConditionValueChanging(int value);
    partial void OnConditionValueChanged();
    #endregion
		
		public Spawn()
		{
			this._Zone = default(EntityRef<Zone>);
			this._SpawnGroup = default(EntityRef<SpawnGroup>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpawnID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SpawnID
		{
			get
			{
				return this._SpawnID;
			}
			set
			{
				if ((this._SpawnID != value))
				{
					this.OnSpawnIDChanging(value);
					this.SendPropertyChanging();
					this._SpawnID = value;
					this.SendPropertyChanged("SpawnID");
					this.OnSpawnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpawnGroupID", DbType="Int NOT NULL")]
		public int SpawnGroupID
		{
			get
			{
				return this._SpawnGroupID;
			}
			set
			{
				if ((this._SpawnGroupID != value))
				{
					if (this._SpawnGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSpawnGroupIDChanging(value);
					this.SendPropertyChanging();
					this._SpawnGroupID = value;
					this.SendPropertyChanged("SpawnGroupID");
					this.OnSpawnGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZoneID", DbType="SmallInt NOT NULL")]
		public ushort ZoneID
		{
			get
			{
				return this._ZoneID;
			}
			set
			{
				if ((this._ZoneID != value))
				{
					if (this._Zone.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnZoneIDChanging(value);
					this.SendPropertyChanging();
					this._ZoneID = value;
					this.SendPropertyChanged("ZoneID");
					this.OnZoneIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_X", DbType="Float NOT NULL")]
		public float X
		{
			get
			{
				return this._X;
			}
			set
			{
				if ((this._X != value))
				{
					this.OnXChanging(value);
					this.SendPropertyChanging();
					this._X = value;
					this.SendPropertyChanged("X");
					this.OnXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Y", DbType="Float NOT NULL")]
		public float Y
		{
			get
			{
				return this._Y;
			}
			set
			{
				if ((this._Y != value))
				{
					this.OnYChanging(value);
					this.SendPropertyChanging();
					this._Y = value;
					this.SendPropertyChanged("Y");
					this.OnYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Z", DbType="Float NOT NULL")]
		public float Z
		{
			get
			{
				return this._Z;
			}
			set
			{
				if ((this._Z != value))
				{
					this.OnZChanging(value);
					this.SendPropertyChanging();
					this._Z = value;
					this.SendPropertyChanged("Z");
					this.OnZChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Heading", DbType="Float NOT NULL")]
		public float Heading
		{
			get
			{
				return this._Heading;
			}
			set
			{
				if ((this._Heading != value))
				{
					this.OnHeadingChanging(value);
					this.SendPropertyChanging();
					this._Heading = value;
					this.SendPropertyChanged("Heading");
					this.OnHeadingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RespawnTime", DbType="Int NOT NULL")]
		public int RespawnTime
		{
			get
			{
				return this._RespawnTime;
			}
			set
			{
				if ((this._RespawnTime != value))
				{
					this.OnRespawnTimeChanging(value);
					this.SendPropertyChanging();
					this._RespawnTime = value;
					this.SendPropertyChanged("RespawnTime");
					this.OnRespawnTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Variance", DbType="SmallInt NOT NULL")]
		public short Variance
		{
			get
			{
				return this._Variance;
			}
			set
			{
				if ((this._Variance != value))
				{
					this.OnVarianceChanging(value);
					this.SendPropertyChanging();
					this._Variance = value;
					this.SendPropertyChanged("Variance");
					this.OnVarianceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PathGrid", DbType="Int NOT NULL")]
		public int PathGrid
		{
			get
			{
				return this._PathGrid;
			}
			set
			{
				if ((this._PathGrid != value))
				{
					this.OnPathGridChanging(value);
					this.SendPropertyChanging();
					this._PathGrid = value;
					this.SendPropertyChanged("PathGrid");
					this.OnPathGridChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeLeft", DbType="Int NOT NULL")]
		public int TimeLeft
		{
			get
			{
				return this._TimeLeft;
			}
			set
			{
				if ((this._TimeLeft != value))
				{
					this.OnTimeLeftChanging(value);
					this.SendPropertyChanging();
					this._TimeLeft = value;
					this.SendPropertyChanged("TimeLeft");
					this.OnTimeLeftChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Condition", DbType="Int NOT NULL")]
		public int Condition
		{
			get
			{
				return this._Condition;
			}
			set
			{
				if ((this._Condition != value))
				{
					this.OnConditionChanging(value);
					this.SendPropertyChanging();
					this._Condition = value;
					this.SendPropertyChanged("Condition");
					this.OnConditionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ConditionValue", DbType="Int NOT NULL")]
		public int ConditionValue
		{
			get
			{
				return this._ConditionValue;
			}
			set
			{
				if ((this._ConditionValue != value))
				{
					this.OnConditionValueChanging(value);
					this.SendPropertyChanging();
					this._ConditionValue = value;
					this.SendPropertyChanged("ConditionValue");
					this.OnConditionValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Zone_Spawn", Storage="_Zone", ThisKey="ZoneID", OtherKey="ZoneID", IsForeignKey=true)]
		public Zone Zone
		{
			get
			{
				return this._Zone.Entity;
			}
			set
			{
				Zone previousValue = this._Zone.Entity;
				if (((previousValue != value) 
							|| (this._Zone.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Zone.Entity = null;
						previousValue.Spawns.Remove(this);
					}
					this._Zone.Entity = value;
					if ((value != null))
					{
						value.Spawns.Add(this);
						this._ZoneID = value.ZoneID;
					}
					else
					{
						this._ZoneID = default(ushort);
					}
					this.SendPropertyChanged("Zone");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SpawnGroup_Spawn", Storage="_SpawnGroup", ThisKey="SpawnGroupID", OtherKey="SpawnGroupID", IsForeignKey=true)]
		public SpawnGroup SpawnGroup
		{
			get
			{
				return this._SpawnGroup.Entity;
			}
			set
			{
				SpawnGroup previousValue = this._SpawnGroup.Entity;
				if (((previousValue != value) 
							|| (this._SpawnGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SpawnGroup.Entity = null;
						previousValue.Spawns.Remove(this);
					}
					this._SpawnGroup.Entity = value;
					if ((value != null))
					{
						value.Spawns.Add(this);
						this._SpawnGroupID = value.SpawnGroupID;
					}
					else
					{
						this._SpawnGroupID = default(int);
					}
					this.SendPropertyChanged("SpawnGroup");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SpawnGroup")]
	internal partial class SpawnGroup : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SpawnGroupID;
		
		private string _GroupName;
		
		private byte _SpawnLimit;
		
		private EntitySet<Spawn> _Spawns;
		
		private EntitySet<SpawnGroupEntry> _SpawnGroupEntries;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSpawnGroupIDChanging(int value);
    partial void OnSpawnGroupIDChanged();
    partial void OnGroupNameChanging(string value);
    partial void OnGroupNameChanged();
    partial void OnSpawnLimitChanging(byte value);
    partial void OnSpawnLimitChanged();
    #endregion
		
		public SpawnGroup()
		{
			this._Spawns = new EntitySet<Spawn>(new Action<Spawn>(this.attach_Spawns), new Action<Spawn>(this.detach_Spawns));
			this._SpawnGroupEntries = new EntitySet<SpawnGroupEntry>(new Action<SpawnGroupEntry>(this.attach_SpawnGroupEntries), new Action<SpawnGroupEntry>(this.detach_SpawnGroupEntries));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpawnGroupID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SpawnGroupID
		{
			get
			{
				return this._SpawnGroupID;
			}
			set
			{
				if ((this._SpawnGroupID != value))
				{
					this.OnSpawnGroupIDChanging(value);
					this.SendPropertyChanging();
					this._SpawnGroupID = value;
					this.SendPropertyChanged("SpawnGroupID");
					this.OnSpawnGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string GroupName
		{
			get
			{
				return this._GroupName;
			}
			set
			{
				if ((this._GroupName != value))
				{
					this.OnGroupNameChanging(value);
					this.SendPropertyChanging();
					this._GroupName = value;
					this.SendPropertyChanged("GroupName");
					this.OnGroupNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpawnLimit", DbType="TinyInt NOT NULL")]
		public byte SpawnLimit
		{
			get
			{
				return this._SpawnLimit;
			}
			set
			{
				if ((this._SpawnLimit != value))
				{
					this.OnSpawnLimitChanging(value);
					this.SendPropertyChanging();
					this._SpawnLimit = value;
					this.SendPropertyChanged("SpawnLimit");
					this.OnSpawnLimitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SpawnGroup_Spawn", Storage="_Spawns", ThisKey="SpawnGroupID", OtherKey="SpawnGroupID")]
		public EntitySet<Spawn> Spawns
		{
			get
			{
				return this._Spawns;
			}
			set
			{
				this._Spawns.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SpawnGroup_SpawnGroupEntry", Storage="_SpawnGroupEntries", ThisKey="SpawnGroupID", OtherKey="SpawnGroupID")]
		public EntitySet<SpawnGroupEntry> SpawnGroupEntries
		{
			get
			{
				return this._SpawnGroupEntries;
			}
			set
			{
				this._SpawnGroupEntries.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Spawns(Spawn entity)
		{
			this.SendPropertyChanging();
			entity.SpawnGroup = this;
		}
		
		private void detach_Spawns(Spawn entity)
		{
			this.SendPropertyChanging();
			entity.SpawnGroup = null;
		}
		
		private void attach_SpawnGroupEntries(SpawnGroupEntry entity)
		{
			this.SendPropertyChanging();
			entity.SpawnGroup = this;
		}
		
		private void detach_SpawnGroupEntries(SpawnGroupEntry entity)
		{
			this.SendPropertyChanging();
			entity.SpawnGroup = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SpawnGroupEntry")]
	internal partial class SpawnGroupEntry : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SpawnGroupID;
		
		private int _NpcID;
		
		private short _Chance;
		
		private EntityRef<SpawnGroup> _SpawnGroup;
		
		private EntityRef<Npc> _Npc;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSpawnGroupIDChanging(int value);
    partial void OnSpawnGroupIDChanged();
    partial void OnNpcIDChanging(int value);
    partial void OnNpcIDChanged();
    partial void OnChanceChanging(short value);
    partial void OnChanceChanged();
    #endregion
		
		public SpawnGroupEntry()
		{
			this._SpawnGroup = default(EntityRef<SpawnGroup>);
			this._Npc = default(EntityRef<Npc>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpawnGroupID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int SpawnGroupID
		{
			get
			{
				return this._SpawnGroupID;
			}
			set
			{
				if ((this._SpawnGroupID != value))
				{
					if (this._SpawnGroup.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSpawnGroupIDChanging(value);
					this.SendPropertyChanging();
					this._SpawnGroupID = value;
					this.SendPropertyChanged("SpawnGroupID");
					this.OnSpawnGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NpcID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int NpcID
		{
			get
			{
				return this._NpcID;
			}
			set
			{
				if ((this._NpcID != value))
				{
					if (this._Npc.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNpcIDChanging(value);
					this.SendPropertyChanging();
					this._NpcID = value;
					this.SendPropertyChanged("NpcID");
					this.OnNpcIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Chance", DbType="SmallInt NOT NULL")]
		public short Chance
		{
			get
			{
				return this._Chance;
			}
			set
			{
				if ((this._Chance != value))
				{
					this.OnChanceChanging(value);
					this.SendPropertyChanging();
					this._Chance = value;
					this.SendPropertyChanged("Chance");
					this.OnChanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SpawnGroup_SpawnGroupEntry", Storage="_SpawnGroup", ThisKey="SpawnGroupID", OtherKey="SpawnGroupID", IsForeignKey=true)]
		public SpawnGroup SpawnGroup
		{
			get
			{
				return this._SpawnGroup.Entity;
			}
			set
			{
				SpawnGroup previousValue = this._SpawnGroup.Entity;
				if (((previousValue != value) 
							|| (this._SpawnGroup.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SpawnGroup.Entity = null;
						previousValue.SpawnGroupEntries.Remove(this);
					}
					this._SpawnGroup.Entity = value;
					if ((value != null))
					{
						value.SpawnGroupEntries.Add(this);
						this._SpawnGroupID = value.SpawnGroupID;
					}
					else
					{
						this._SpawnGroupID = default(int);
					}
					this.SendPropertyChanged("SpawnGroup");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Npc_SpawnGroupEntry", Storage="_Npc", ThisKey="NpcID", OtherKey="NpcID", IsForeignKey=true)]
		public Npc Npc
		{
			get
			{
				return this._Npc.Entity;
			}
			set
			{
				Npc previousValue = this._Npc.Entity;
				if (((previousValue != value) 
							|| (this._Npc.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Npc.Entity = null;
						previousValue.SpawnGroupEntries.Remove(this);
					}
					this._Npc.Entity = value;
					if ((value != null))
					{
						value.SpawnGroupEntries.Add(this);
						this._NpcID = value.NpcID;
					}
					else
					{
						this._NpcID = default(int);
					}
					this.SendPropertyChanged("Npc");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Npc")]
	internal partial class Npc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NpcID;
		
		private string _Name;
		
		private string _SurName;
		
		private byte _NpcLevel;
		
		private short _Race;
		
		private byte _NpcClass;
		
		private System.Nullable<byte> _BodyType;
		
		private int _Hp;
		
		private byte _Gender;
		
		private byte _Texture;
		
		private byte _HelmTexture;
		
		private float _Size;
		
		private int _HpRegenRate;
		
		private int _ManaRegenRate;
		
		private System.Nullable<int> _LootId;
		
		private int _MerchantId;
		
		private int _NpcSpellsId;
		
		private int _NpcFactionId;
		
		private int _MinDamage;
		
		private int _MaxDamage;
		
		private string _NpcSpecialAttacks;
		
		private int _AggroRadius;
		
		private int _Face;
		
		private int _HairStyleLuclin;
		
		private int _HairColorLuclin;
		
		private int _EyeColorLuclin;
		
		private int _EyeColor2Luclin;
		
		private int _BeardColorLuclin;
		
		private int _BeardLuclin;
		
		private int _MeleeTexture1;
		
		private int _MeleeTexture2;
		
		private float _RunSpeed;
		
		private short _MR;
		
		private short _CR;
		
		private short _DR;
		
		private short _FR;
		
		private short _PR;
		
		private bool _SeeInvis;
		
		private bool _SeeInvisUndead;
		
		private bool _SeeHide;
		
		private bool _SeeImprovedHide;
		
		private bool _QGlobal;
		
		private int _AC;
		
		private bool _NpcAggro;
		
		private byte _SpawnLimit;
		
		private float _AttackSpeed;
		
		private bool _Findable;
		
		private bool _Trackable;
		
		private short _STR;
		
		private short _STA;
		
		private short _DEX;
		
		private short _AGI;
		
		private short _INT;
		
		private short _WIS;
		
		private short _CHA;
		
		private bool _IsBot;
		
		private short _Attack;
		
		private int _Accuracy;
		
		private EntitySet<SpawnGroupEntry> _SpawnGroupEntries;
		
		private EntityRef<Loot> _Loot;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNpcIDChanging(int value);
    partial void OnNpcIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSurNameChanging(string value);
    partial void OnSurNameChanged();
    partial void OnNpcLevelChanging(byte value);
    partial void OnNpcLevelChanged();
    partial void OnRaceChanging(short value);
    partial void OnRaceChanged();
    partial void OnNpcClassChanging(byte value);
    partial void OnNpcClassChanged();
    partial void OnBodyTypeChanging(System.Nullable<byte> value);
    partial void OnBodyTypeChanged();
    partial void OnHpChanging(int value);
    partial void OnHpChanged();
    partial void OnGenderChanging(byte value);
    partial void OnGenderChanged();
    partial void OnTextureChanging(byte value);
    partial void OnTextureChanged();
    partial void OnHelmTextureChanging(byte value);
    partial void OnHelmTextureChanged();
    partial void OnSizeChanging(float value);
    partial void OnSizeChanged();
    partial void OnHpRegenRateChanging(int value);
    partial void OnHpRegenRateChanged();
    partial void OnManaRegenRateChanging(int value);
    partial void OnManaRegenRateChanged();
    partial void OnLootIdChanging(System.Nullable<int> value);
    partial void OnLootIdChanged();
    partial void OnMerchantIdChanging(int value);
    partial void OnMerchantIdChanged();
    partial void OnNpcSpellsIdChanging(int value);
    partial void OnNpcSpellsIdChanged();
    partial void OnNpcFactionIdChanging(int value);
    partial void OnNpcFactionIdChanged();
    partial void OnMinDamageChanging(int value);
    partial void OnMinDamageChanged();
    partial void OnMaxDamageChanging(int value);
    partial void OnMaxDamageChanged();
    partial void OnNpcSpecialAttacksChanging(string value);
    partial void OnNpcSpecialAttacksChanged();
    partial void OnAggroRadiusChanging(int value);
    partial void OnAggroRadiusChanged();
    partial void OnFaceChanging(int value);
    partial void OnFaceChanged();
    partial void OnHairStyleLuclinChanging(int value);
    partial void OnHairStyleLuclinChanged();
    partial void OnHairColorLuclinChanging(int value);
    partial void OnHairColorLuclinChanged();
    partial void OnEyeColorLuclinChanging(int value);
    partial void OnEyeColorLuclinChanged();
    partial void OnEyeColor2LuclinChanging(int value);
    partial void OnEyeColor2LuclinChanged();
    partial void OnBeardColorLuclinChanging(int value);
    partial void OnBeardColorLuclinChanged();
    partial void OnBeardLuclinChanging(int value);
    partial void OnBeardLuclinChanged();
    partial void OnMeleeTexture1Changing(int value);
    partial void OnMeleeTexture1Changed();
    partial void OnMeleeTexture2Changing(int value);
    partial void OnMeleeTexture2Changed();
    partial void OnRunSpeedChanging(float value);
    partial void OnRunSpeedChanged();
    partial void OnMRChanging(short value);
    partial void OnMRChanged();
    partial void OnCRChanging(short value);
    partial void OnCRChanged();
    partial void OnDRChanging(short value);
    partial void OnDRChanged();
    partial void OnFRChanging(short value);
    partial void OnFRChanged();
    partial void OnPRChanging(short value);
    partial void OnPRChanged();
    partial void OnSeeInvisChanging(bool value);
    partial void OnSeeInvisChanged();
    partial void OnSeeInvisUndeadChanging(bool value);
    partial void OnSeeInvisUndeadChanged();
    partial void OnSeeHideChanging(bool value);
    partial void OnSeeHideChanged();
    partial void OnSeeImprovedHideChanging(bool value);
    partial void OnSeeImprovedHideChanged();
    partial void OnQGlobalChanging(bool value);
    partial void OnQGlobalChanged();
    partial void OnACChanging(int value);
    partial void OnACChanged();
    partial void OnNpcAggroChanging(bool value);
    partial void OnNpcAggroChanged();
    partial void OnSpawnLimitChanging(byte value);
    partial void OnSpawnLimitChanged();
    partial void OnAttackSpeedChanging(float value);
    partial void OnAttackSpeedChanged();
    partial void OnFindableChanging(bool value);
    partial void OnFindableChanged();
    partial void OnTrackableChanging(bool value);
    partial void OnTrackableChanged();
    partial void OnSTRChanging(short value);
    partial void OnSTRChanged();
    partial void OnSTAChanging(short value);
    partial void OnSTAChanged();
    partial void OnDEXChanging(short value);
    partial void OnDEXChanged();
    partial void OnAGIChanging(short value);
    partial void OnAGIChanged();
    partial void OnINTChanging(short value);
    partial void OnINTChanged();
    partial void OnWISChanging(short value);
    partial void OnWISChanged();
    partial void OnCHAChanging(short value);
    partial void OnCHAChanged();
    partial void OnIsBotChanging(bool value);
    partial void OnIsBotChanged();
    partial void OnAttackChanging(short value);
    partial void OnAttackChanged();
    partial void OnAccuracyChanging(int value);
    partial void OnAccuracyChanged();
    #endregion
		
		public Npc()
		{
			this._SpawnGroupEntries = new EntitySet<SpawnGroupEntry>(new Action<SpawnGroupEntry>(this.attach_SpawnGroupEntries), new Action<SpawnGroupEntry>(this.detach_SpawnGroupEntries));
			this._Loot = default(EntityRef<Loot>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NpcID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int NpcID
		{
			get
			{
				return this._NpcID;
			}
			set
			{
				if ((this._NpcID != value))
				{
					this.OnNpcIDChanging(value);
					this.SendPropertyChanging();
					this._NpcID = value;
					this.SendPropertyChanged("NpcID");
					this.OnNpcIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SurName", DbType="VarChar(100)")]
		public string SurName
		{
			get
			{
				return this._SurName;
			}
			set
			{
				if ((this._SurName != value))
				{
					this.OnSurNameChanging(value);
					this.SendPropertyChanging();
					this._SurName = value;
					this.SendPropertyChanged("SurName");
					this.OnSurNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NpcLevel", DbType="TinyInt NOT NULL")]
		public byte NpcLevel
		{
			get
			{
				return this._NpcLevel;
			}
			set
			{
				if ((this._NpcLevel != value))
				{
					this.OnNpcLevelChanging(value);
					this.SendPropertyChanging();
					this._NpcLevel = value;
					this.SendPropertyChanged("NpcLevel");
					this.OnNpcLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Race", DbType="SmallInt NOT NULL")]
		public short Race
		{
			get
			{
				return this._Race;
			}
			set
			{
				if ((this._Race != value))
				{
					this.OnRaceChanging(value);
					this.SendPropertyChanging();
					this._Race = value;
					this.SendPropertyChanged("Race");
					this.OnRaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NpcClass", DbType="TinyInt NOT NULL")]
		public byte NpcClass
		{
			get
			{
				return this._NpcClass;
			}
			set
			{
				if ((this._NpcClass != value))
				{
					this.OnNpcClassChanging(value);
					this.SendPropertyChanging();
					this._NpcClass = value;
					this.SendPropertyChanged("NpcClass");
					this.OnNpcClassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BodyType", DbType="TinyInt")]
		public System.Nullable<byte> BodyType
		{
			get
			{
				return this._BodyType;
			}
			set
			{
				if ((this._BodyType != value))
				{
					this.OnBodyTypeChanging(value);
					this.SendPropertyChanging();
					this._BodyType = value;
					this.SendPropertyChanged("BodyType");
					this.OnBodyTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hp", DbType="Int NOT NULL")]
		public int Hp
		{
			get
			{
				return this._Hp;
			}
			set
			{
				if ((this._Hp != value))
				{
					this.OnHpChanging(value);
					this.SendPropertyChanging();
					this._Hp = value;
					this.SendPropertyChanged("Hp");
					this.OnHpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="TinyInt NOT NULL")]
		public byte Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Texture", DbType="TinyInt NOT NULL")]
		public byte Texture
		{
			get
			{
				return this._Texture;
			}
			set
			{
				if ((this._Texture != value))
				{
					this.OnTextureChanging(value);
					this.SendPropertyChanging();
					this._Texture = value;
					this.SendPropertyChanged("Texture");
					this.OnTextureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HelmTexture", DbType="TinyInt NOT NULL")]
		public byte HelmTexture
		{
			get
			{
				return this._HelmTexture;
			}
			set
			{
				if ((this._HelmTexture != value))
				{
					this.OnHelmTextureChanging(value);
					this.SendPropertyChanging();
					this._HelmTexture = value;
					this.SendPropertyChanged("HelmTexture");
					this.OnHelmTextureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Size", DbType="Float NOT NULL")]
		public float Size
		{
			get
			{
				return this._Size;
			}
			set
			{
				if ((this._Size != value))
				{
					this.OnSizeChanging(value);
					this.SendPropertyChanging();
					this._Size = value;
					this.SendPropertyChanged("Size");
					this.OnSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HpRegenRate", DbType="Int NOT NULL")]
		public int HpRegenRate
		{
			get
			{
				return this._HpRegenRate;
			}
			set
			{
				if ((this._HpRegenRate != value))
				{
					this.OnHpRegenRateChanging(value);
					this.SendPropertyChanging();
					this._HpRegenRate = value;
					this.SendPropertyChanged("HpRegenRate");
					this.OnHpRegenRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManaRegenRate", DbType="Int NOT NULL")]
		public int ManaRegenRate
		{
			get
			{
				return this._ManaRegenRate;
			}
			set
			{
				if ((this._ManaRegenRate != value))
				{
					this.OnManaRegenRateChanging(value);
					this.SendPropertyChanging();
					this._ManaRegenRate = value;
					this.SendPropertyChanged("ManaRegenRate");
					this.OnManaRegenRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LootId", DbType="Int NOT NULL")]
		public System.Nullable<int> LootId
		{
			get
			{
				return this._LootId;
			}
			set
			{
				if ((this._LootId != value))
				{
					if (this._Loot.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLootIdChanging(value);
					this.SendPropertyChanging();
					this._LootId = value;
					this.SendPropertyChanged("LootId");
					this.OnLootIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MerchantId", DbType="Int NOT NULL")]
		public int MerchantId
		{
			get
			{
				return this._MerchantId;
			}
			set
			{
				if ((this._MerchantId != value))
				{
					this.OnMerchantIdChanging(value);
					this.SendPropertyChanging();
					this._MerchantId = value;
					this.SendPropertyChanged("MerchantId");
					this.OnMerchantIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NpcSpellsId", DbType="Int NOT NULL")]
		public int NpcSpellsId
		{
			get
			{
				return this._NpcSpellsId;
			}
			set
			{
				if ((this._NpcSpellsId != value))
				{
					this.OnNpcSpellsIdChanging(value);
					this.SendPropertyChanging();
					this._NpcSpellsId = value;
					this.SendPropertyChanged("NpcSpellsId");
					this.OnNpcSpellsIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NpcFactionId", DbType="Int NOT NULL")]
		public int NpcFactionId
		{
			get
			{
				return this._NpcFactionId;
			}
			set
			{
				if ((this._NpcFactionId != value))
				{
					this.OnNpcFactionIdChanging(value);
					this.SendPropertyChanging();
					this._NpcFactionId = value;
					this.SendPropertyChanged("NpcFactionId");
					this.OnNpcFactionIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinDamage", DbType="Int NOT NULL")]
		public int MinDamage
		{
			get
			{
				return this._MinDamage;
			}
			set
			{
				if ((this._MinDamage != value))
				{
					this.OnMinDamageChanging(value);
					this.SendPropertyChanging();
					this._MinDamage = value;
					this.SendPropertyChanged("MinDamage");
					this.OnMinDamageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxDamage", DbType="Int NOT NULL")]
		public int MaxDamage
		{
			get
			{
				return this._MaxDamage;
			}
			set
			{
				if ((this._MaxDamage != value))
				{
					this.OnMaxDamageChanging(value);
					this.SendPropertyChanging();
					this._MaxDamage = value;
					this.SendPropertyChanged("MaxDamage");
					this.OnMaxDamageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NpcSpecialAttacks", DbType="VarChar(36)")]
		public string NpcSpecialAttacks
		{
			get
			{
				return this._NpcSpecialAttacks;
			}
			set
			{
				if ((this._NpcSpecialAttacks != value))
				{
					this.OnNpcSpecialAttacksChanging(value);
					this.SendPropertyChanging();
					this._NpcSpecialAttacks = value;
					this.SendPropertyChanged("NpcSpecialAttacks");
					this.OnNpcSpecialAttacksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AggroRadius", DbType="Int NOT NULL")]
		public int AggroRadius
		{
			get
			{
				return this._AggroRadius;
			}
			set
			{
				if ((this._AggroRadius != value))
				{
					this.OnAggroRadiusChanging(value);
					this.SendPropertyChanging();
					this._AggroRadius = value;
					this.SendPropertyChanged("AggroRadius");
					this.OnAggroRadiusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Face", DbType="Int NOT NULL")]
		public int Face
		{
			get
			{
				return this._Face;
			}
			set
			{
				if ((this._Face != value))
				{
					this.OnFaceChanging(value);
					this.SendPropertyChanging();
					this._Face = value;
					this.SendPropertyChanged("Face");
					this.OnFaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HairStyleLuclin", DbType="Int NOT NULL")]
		public int HairStyleLuclin
		{
			get
			{
				return this._HairStyleLuclin;
			}
			set
			{
				if ((this._HairStyleLuclin != value))
				{
					this.OnHairStyleLuclinChanging(value);
					this.SendPropertyChanging();
					this._HairStyleLuclin = value;
					this.SendPropertyChanged("HairStyleLuclin");
					this.OnHairStyleLuclinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HairColorLuclin", DbType="Int NOT NULL")]
		public int HairColorLuclin
		{
			get
			{
				return this._HairColorLuclin;
			}
			set
			{
				if ((this._HairColorLuclin != value))
				{
					this.OnHairColorLuclinChanging(value);
					this.SendPropertyChanging();
					this._HairColorLuclin = value;
					this.SendPropertyChanged("HairColorLuclin");
					this.OnHairColorLuclinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EyeColorLuclin", DbType="Int NOT NULL")]
		public int EyeColorLuclin
		{
			get
			{
				return this._EyeColorLuclin;
			}
			set
			{
				if ((this._EyeColorLuclin != value))
				{
					this.OnEyeColorLuclinChanging(value);
					this.SendPropertyChanging();
					this._EyeColorLuclin = value;
					this.SendPropertyChanged("EyeColorLuclin");
					this.OnEyeColorLuclinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EyeColor2Luclin", DbType="Int NOT NULL")]
		public int EyeColor2Luclin
		{
			get
			{
				return this._EyeColor2Luclin;
			}
			set
			{
				if ((this._EyeColor2Luclin != value))
				{
					this.OnEyeColor2LuclinChanging(value);
					this.SendPropertyChanging();
					this._EyeColor2Luclin = value;
					this.SendPropertyChanged("EyeColor2Luclin");
					this.OnEyeColor2LuclinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeardColorLuclin", DbType="Int NOT NULL")]
		public int BeardColorLuclin
		{
			get
			{
				return this._BeardColorLuclin;
			}
			set
			{
				if ((this._BeardColorLuclin != value))
				{
					this.OnBeardColorLuclinChanging(value);
					this.SendPropertyChanging();
					this._BeardColorLuclin = value;
					this.SendPropertyChanged("BeardColorLuclin");
					this.OnBeardColorLuclinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeardLuclin", DbType="Int NOT NULL")]
		public int BeardLuclin
		{
			get
			{
				return this._BeardLuclin;
			}
			set
			{
				if ((this._BeardLuclin != value))
				{
					this.OnBeardLuclinChanging(value);
					this.SendPropertyChanging();
					this._BeardLuclin = value;
					this.SendPropertyChanged("BeardLuclin");
					this.OnBeardLuclinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeleeTexture1", DbType="Int NOT NULL")]
		public int MeleeTexture1
		{
			get
			{
				return this._MeleeTexture1;
			}
			set
			{
				if ((this._MeleeTexture1 != value))
				{
					this.OnMeleeTexture1Changing(value);
					this.SendPropertyChanging();
					this._MeleeTexture1 = value;
					this.SendPropertyChanged("MeleeTexture1");
					this.OnMeleeTexture1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MeleeTexture2", DbType="Int NOT NULL")]
		public int MeleeTexture2
		{
			get
			{
				return this._MeleeTexture2;
			}
			set
			{
				if ((this._MeleeTexture2 != value))
				{
					this.OnMeleeTexture2Changing(value);
					this.SendPropertyChanging();
					this._MeleeTexture2 = value;
					this.SendPropertyChanged("MeleeTexture2");
					this.OnMeleeTexture2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RunSpeed", DbType="Float NOT NULL")]
		public float RunSpeed
		{
			get
			{
				return this._RunSpeed;
			}
			set
			{
				if ((this._RunSpeed != value))
				{
					this.OnRunSpeedChanging(value);
					this.SendPropertyChanging();
					this._RunSpeed = value;
					this.SendPropertyChanged("RunSpeed");
					this.OnRunSpeedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MR", DbType="SmallInt NOT NULL")]
		public short MR
		{
			get
			{
				return this._MR;
			}
			set
			{
				if ((this._MR != value))
				{
					this.OnMRChanging(value);
					this.SendPropertyChanging();
					this._MR = value;
					this.SendPropertyChanged("MR");
					this.OnMRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CR", DbType="SmallInt NOT NULL")]
		public short CR
		{
			get
			{
				return this._CR;
			}
			set
			{
				if ((this._CR != value))
				{
					this.OnCRChanging(value);
					this.SendPropertyChanging();
					this._CR = value;
					this.SendPropertyChanged("CR");
					this.OnCRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DR", DbType="SmallInt NOT NULL")]
		public short DR
		{
			get
			{
				return this._DR;
			}
			set
			{
				if ((this._DR != value))
				{
					this.OnDRChanging(value);
					this.SendPropertyChanging();
					this._DR = value;
					this.SendPropertyChanged("DR");
					this.OnDRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FR", DbType="SmallInt NOT NULL")]
		public short FR
		{
			get
			{
				return this._FR;
			}
			set
			{
				if ((this._FR != value))
				{
					this.OnFRChanging(value);
					this.SendPropertyChanging();
					this._FR = value;
					this.SendPropertyChanged("FR");
					this.OnFRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PR", DbType="SmallInt NOT NULL")]
		public short PR
		{
			get
			{
				return this._PR;
			}
			set
			{
				if ((this._PR != value))
				{
					this.OnPRChanging(value);
					this.SendPropertyChanging();
					this._PR = value;
					this.SendPropertyChanged("PR");
					this.OnPRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeeInvis", DbType="Bit NOT NULL")]
		public bool SeeInvis
		{
			get
			{
				return this._SeeInvis;
			}
			set
			{
				if ((this._SeeInvis != value))
				{
					this.OnSeeInvisChanging(value);
					this.SendPropertyChanging();
					this._SeeInvis = value;
					this.SendPropertyChanged("SeeInvis");
					this.OnSeeInvisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeeInvisUndead", DbType="Bit NOT NULL")]
		public bool SeeInvisUndead
		{
			get
			{
				return this._SeeInvisUndead;
			}
			set
			{
				if ((this._SeeInvisUndead != value))
				{
					this.OnSeeInvisUndeadChanging(value);
					this.SendPropertyChanging();
					this._SeeInvisUndead = value;
					this.SendPropertyChanged("SeeInvisUndead");
					this.OnSeeInvisUndeadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeeHide", DbType="Bit NOT NULL")]
		public bool SeeHide
		{
			get
			{
				return this._SeeHide;
			}
			set
			{
				if ((this._SeeHide != value))
				{
					this.OnSeeHideChanging(value);
					this.SendPropertyChanging();
					this._SeeHide = value;
					this.SendPropertyChanged("SeeHide");
					this.OnSeeHideChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SeeImprovedHide", DbType="Bit NOT NULL")]
		public bool SeeImprovedHide
		{
			get
			{
				return this._SeeImprovedHide;
			}
			set
			{
				if ((this._SeeImprovedHide != value))
				{
					this.OnSeeImprovedHideChanging(value);
					this.SendPropertyChanging();
					this._SeeImprovedHide = value;
					this.SendPropertyChanged("SeeImprovedHide");
					this.OnSeeImprovedHideChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QGlobal", DbType="Bit NOT NULL")]
		public bool QGlobal
		{
			get
			{
				return this._QGlobal;
			}
			set
			{
				if ((this._QGlobal != value))
				{
					this.OnQGlobalChanging(value);
					this.SendPropertyChanging();
					this._QGlobal = value;
					this.SendPropertyChanged("QGlobal");
					this.OnQGlobalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AC", DbType="Int NOT NULL")]
		public int AC
		{
			get
			{
				return this._AC;
			}
			set
			{
				if ((this._AC != value))
				{
					this.OnACChanging(value);
					this.SendPropertyChanging();
					this._AC = value;
					this.SendPropertyChanged("AC");
					this.OnACChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NpcAggro", DbType="Bit NOT NULL")]
		public bool NpcAggro
		{
			get
			{
				return this._NpcAggro;
			}
			set
			{
				if ((this._NpcAggro != value))
				{
					this.OnNpcAggroChanging(value);
					this.SendPropertyChanging();
					this._NpcAggro = value;
					this.SendPropertyChanged("NpcAggro");
					this.OnNpcAggroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpawnLimit", DbType="TinyInt NOT NULL")]
		public byte SpawnLimit
		{
			get
			{
				return this._SpawnLimit;
			}
			set
			{
				if ((this._SpawnLimit != value))
				{
					this.OnSpawnLimitChanging(value);
					this.SendPropertyChanging();
					this._SpawnLimit = value;
					this.SendPropertyChanged("SpawnLimit");
					this.OnSpawnLimitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttackSpeed", DbType="Float NOT NULL")]
		public float AttackSpeed
		{
			get
			{
				return this._AttackSpeed;
			}
			set
			{
				if ((this._AttackSpeed != value))
				{
					this.OnAttackSpeedChanging(value);
					this.SendPropertyChanging();
					this._AttackSpeed = value;
					this.SendPropertyChanged("AttackSpeed");
					this.OnAttackSpeedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Findable", DbType="Bit NOT NULL")]
		public bool Findable
		{
			get
			{
				return this._Findable;
			}
			set
			{
				if ((this._Findable != value))
				{
					this.OnFindableChanging(value);
					this.SendPropertyChanging();
					this._Findable = value;
					this.SendPropertyChanged("Findable");
					this.OnFindableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Trackable", DbType="Bit NOT NULL")]
		public bool Trackable
		{
			get
			{
				return this._Trackable;
			}
			set
			{
				if ((this._Trackable != value))
				{
					this.OnTrackableChanging(value);
					this.SendPropertyChanging();
					this._Trackable = value;
					this.SendPropertyChanged("Trackable");
					this.OnTrackableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STR", DbType="SmallInt NOT NULL")]
		public short STR
		{
			get
			{
				return this._STR;
			}
			set
			{
				if ((this._STR != value))
				{
					this.OnSTRChanging(value);
					this.SendPropertyChanging();
					this._STR = value;
					this.SendPropertyChanged("STR");
					this.OnSTRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STA", DbType="SmallInt NOT NULL")]
		public short STA
		{
			get
			{
				return this._STA;
			}
			set
			{
				if ((this._STA != value))
				{
					this.OnSTAChanging(value);
					this.SendPropertyChanging();
					this._STA = value;
					this.SendPropertyChanged("STA");
					this.OnSTAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DEX", DbType="SmallInt NOT NULL")]
		public short DEX
		{
			get
			{
				return this._DEX;
			}
			set
			{
				if ((this._DEX != value))
				{
					this.OnDEXChanging(value);
					this.SendPropertyChanging();
					this._DEX = value;
					this.SendPropertyChanged("DEX");
					this.OnDEXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AGI", DbType="SmallInt NOT NULL")]
		public short AGI
		{
			get
			{
				return this._AGI;
			}
			set
			{
				if ((this._AGI != value))
				{
					this.OnAGIChanging(value);
					this.SendPropertyChanging();
					this._AGI = value;
					this.SendPropertyChanged("AGI");
					this.OnAGIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INT", DbType="SmallInt NOT NULL")]
		public short INT
		{
			get
			{
				return this._INT;
			}
			set
			{
				if ((this._INT != value))
				{
					this.OnINTChanging(value);
					this.SendPropertyChanging();
					this._INT = value;
					this.SendPropertyChanged("INT");
					this.OnINTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WIS", DbType="SmallInt NOT NULL")]
		public short WIS
		{
			get
			{
				return this._WIS;
			}
			set
			{
				if ((this._WIS != value))
				{
					this.OnWISChanging(value);
					this.SendPropertyChanging();
					this._WIS = value;
					this.SendPropertyChanged("WIS");
					this.OnWISChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CHA", DbType="SmallInt NOT NULL")]
		public short CHA
		{
			get
			{
				return this._CHA;
			}
			set
			{
				if ((this._CHA != value))
				{
					this.OnCHAChanging(value);
					this.SendPropertyChanging();
					this._CHA = value;
					this.SendPropertyChanged("CHA");
					this.OnCHAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsBot", DbType="Bit NOT NULL")]
		public bool IsBot
		{
			get
			{
				return this._IsBot;
			}
			set
			{
				if ((this._IsBot != value))
				{
					this.OnIsBotChanging(value);
					this.SendPropertyChanging();
					this._IsBot = value;
					this.SendPropertyChanged("IsBot");
					this.OnIsBotChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Attack", DbType="SmallInt NOT NULL")]
		public short Attack
		{
			get
			{
				return this._Attack;
			}
			set
			{
				if ((this._Attack != value))
				{
					this.OnAttackChanging(value);
					this.SendPropertyChanging();
					this._Attack = value;
					this.SendPropertyChanged("Attack");
					this.OnAttackChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Accuracy", DbType="Int NOT NULL")]
		public int Accuracy
		{
			get
			{
				return this._Accuracy;
			}
			set
			{
				if ((this._Accuracy != value))
				{
					this.OnAccuracyChanging(value);
					this.SendPropertyChanging();
					this._Accuracy = value;
					this.SendPropertyChanged("Accuracy");
					this.OnAccuracyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Npc_SpawnGroupEntry", Storage="_SpawnGroupEntries", ThisKey="NpcID", OtherKey="NpcID")]
		public EntitySet<SpawnGroupEntry> SpawnGroupEntries
		{
			get
			{
				return this._SpawnGroupEntries;
			}
			set
			{
				this._SpawnGroupEntries.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Loot_Npc", Storage="_Loot", ThisKey="LootId", OtherKey="LootID", IsForeignKey=true)]
		public Loot Loot
		{
			get
			{
				return this._Loot.Entity;
			}
			set
			{
				Loot previousValue = this._Loot.Entity;
				if (((previousValue != value) 
							|| (this._Loot.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Loot.Entity = null;
						previousValue.Npcs.Remove(this);
					}
					this._Loot.Entity = value;
					if ((value != null))
					{
						value.Npcs.Add(this);
						this._LootId = value.LootID;
					}
					else
					{
						this._LootId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Loot");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SpawnGroupEntries(SpawnGroupEntry entity)
		{
			this.SendPropertyChanging();
			entity.Npc = this;
		}
		
		private void detach_SpawnGroupEntries(SpawnGroupEntry entity)
		{
			this.SendPropertyChanging();
			entity.Npc = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Character")]
	internal partial class Character : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _CharacterID;
		
		private int _AccountID;
		
		private string _Name;
		
		private string _Surname;
		
		private System.Nullable<byte> _Class;
		
		private System.Nullable<short> _Race;
		
		private System.Nullable<byte> _Gender;
		
		private byte _CharLevel;
		
		private uint _XP;
		
		private System.Nullable<short> _STR;
		
		private System.Nullable<short> _STA;
		
		private System.Nullable<short> _AGI;
		
		private System.Nullable<short> _DEX;
		
		private System.Nullable<short> _WIS;
		
		private System.Nullable<short> _INT;
		
		private System.Nullable<short> _CHA;
		
		private System.Nullable<int> _Deity;
		
		private System.Nullable<byte> _Face;
		
		private System.Nullable<byte> _EyeColor1;
		
		private System.Nullable<byte> _EyeColor2;
		
		private System.Nullable<byte> _HairStyle;
		
		private System.Nullable<byte> _HairColor;
		
		private System.Nullable<byte> _Beard;
		
		private System.Nullable<byte> _BeardColor;
		
		private System.Nullable<uint> _PracticePoints;
		
		private System.Nullable<int> _HP;
		
		private System.Nullable<int> _Mana;
		
		private System.Nullable<int> _Endurance;
		
		private System.Nullable<int> _HungerLevel;
		
		private System.Nullable<int> _ThirstLevel;
		
		private string _Languages;
		
		private string _Skills;
		
		private string _Title;
		
		private string _Suffix;
		
		private uint _Platinum;
		
		private uint _Gold;
		
		private uint _Silver;
		
		private uint _Copper;
		
		private int _BankedPlatinum;
		
		private int _BankedGold;
		
		private int _BankedSilver;
		
		private int _BankedCopper;
		
		private float _X;
		
		private float _Y;
		
		private float _Z;
		
		private System.Nullable<float> _Heading;
		
		private string _ZoneName;
		
		private System.Nullable<ushort> _ZoneID;
		
		private byte _IsGM;
		
		private System.Nullable<int> _GroupID;
		
		private System.Nullable<System.DateTime> _LastLogOnDate;
		
		private System.DateTime _CreatedDate;
		
		private EntitySet<CharacterBind> _CharacterBinds;
		
		private EntitySet<InventoryItem> _InventoryItems;
		
		private EntitySet<MemorizedSpell> _MemorizedSpells;
		
		private EntitySet<ScribedSpell> _ScribedSpells;
		
		private EntityRef<Account> _Account;
		
		private EntityRef<Zone> _Zone;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCharacterIDChanging(int value);
    partial void OnCharacterIDChanged();
    partial void OnAccountIDChanging(int value);
    partial void OnAccountIDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnSurnameChanging(string value);
    partial void OnSurnameChanged();
    partial void OnClassChanging(System.Nullable<byte> value);
    partial void OnClassChanged();
    partial void OnRaceChanging(System.Nullable<short> value);
    partial void OnRaceChanged();
    partial void OnGenderChanging(System.Nullable<byte> value);
    partial void OnGenderChanged();
    partial void OnCharLevelChanging(byte value);
    partial void OnCharLevelChanged();
    partial void OnXPChanging(uint value);
    partial void OnXPChanged();
    partial void OnSTRChanging(System.Nullable<short> value);
    partial void OnSTRChanged();
    partial void OnSTAChanging(System.Nullable<short> value);
    partial void OnSTAChanged();
    partial void OnAGIChanging(System.Nullable<short> value);
    partial void OnAGIChanged();
    partial void OnDEXChanging(System.Nullable<short> value);
    partial void OnDEXChanged();
    partial void OnWISChanging(System.Nullable<short> value);
    partial void OnWISChanged();
    partial void OnINTChanging(System.Nullable<short> value);
    partial void OnINTChanged();
    partial void OnCHAChanging(System.Nullable<short> value);
    partial void OnCHAChanged();
    partial void OnDeityChanging(System.Nullable<int> value);
    partial void OnDeityChanged();
    partial void OnFaceChanging(System.Nullable<byte> value);
    partial void OnFaceChanged();
    partial void OnEyeColor1Changing(System.Nullable<byte> value);
    partial void OnEyeColor1Changed();
    partial void OnEyeColor2Changing(System.Nullable<byte> value);
    partial void OnEyeColor2Changed();
    partial void OnHairStyleChanging(System.Nullable<byte> value);
    partial void OnHairStyleChanged();
    partial void OnHairColorChanging(System.Nullable<byte> value);
    partial void OnHairColorChanged();
    partial void OnBeardChanging(System.Nullable<byte> value);
    partial void OnBeardChanged();
    partial void OnBeardColorChanging(System.Nullable<byte> value);
    partial void OnBeardColorChanged();
    partial void OnPracticePointsChanging(System.Nullable<uint> value);
    partial void OnPracticePointsChanged();
    partial void OnHPChanging(System.Nullable<int> value);
    partial void OnHPChanged();
    partial void OnManaChanging(System.Nullable<int> value);
    partial void OnManaChanged();
    partial void OnEnduranceChanging(System.Nullable<int> value);
    partial void OnEnduranceChanged();
    partial void OnHungerLevelChanging(System.Nullable<int> value);
    partial void OnHungerLevelChanged();
    partial void OnThirstLevelChanging(System.Nullable<int> value);
    partial void OnThirstLevelChanged();
    partial void OnLanguagesChanging(string value);
    partial void OnLanguagesChanged();
    partial void OnSkillsChanging(string value);
    partial void OnSkillsChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    partial void OnSuffixChanging(string value);
    partial void OnSuffixChanged();
    partial void OnPlatinumChanging(uint value);
    partial void OnPlatinumChanged();
    partial void OnGoldChanging(uint value);
    partial void OnGoldChanged();
    partial void OnSilverChanging(uint value);
    partial void OnSilverChanged();
    partial void OnCopperChanging(uint value);
    partial void OnCopperChanged();
    partial void OnBankedPlatinumChanging(int value);
    partial void OnBankedPlatinumChanged();
    partial void OnBankedGoldChanging(int value);
    partial void OnBankedGoldChanged();
    partial void OnBankedSilverChanging(int value);
    partial void OnBankedSilverChanged();
    partial void OnBankedCopperChanging(int value);
    partial void OnBankedCopperChanged();
    partial void OnXChanging(float value);
    partial void OnXChanged();
    partial void OnYChanging(float value);
    partial void OnYChanged();
    partial void OnZChanging(float value);
    partial void OnZChanged();
    partial void OnHeadingChanging(System.Nullable<float> value);
    partial void OnHeadingChanged();
    partial void OnZoneNameChanging(string value);
    partial void OnZoneNameChanged();
    partial void OnZoneIDChanging(System.Nullable<ushort> value);
    partial void OnZoneIDChanged();
    partial void OnGMStatusChanging(byte value);
    partial void OnGMStatusChanged();
    partial void OnGroupIDChanging(System.Nullable<int> value);
    partial void OnGroupIDChanged();
    partial void OnLastSeenDateChanging(System.Nullable<System.DateTime> value);
    partial void OnLastSeenDateChanged();
    partial void OnCreatedDateChanging(System.DateTime value);
    partial void OnCreatedDateChanged();
    #endregion
		
		public Character()
		{
			this._CharacterBinds = new EntitySet<CharacterBind>(new Action<CharacterBind>(this.attach_CharacterBinds), new Action<CharacterBind>(this.detach_CharacterBinds));
			this._InventoryItems = new EntitySet<InventoryItem>(new Action<InventoryItem>(this.attach_InventoryItems), new Action<InventoryItem>(this.detach_InventoryItems));
			this._MemorizedSpells = new EntitySet<MemorizedSpell>(new Action<MemorizedSpell>(this.attach_MemorizedSpells), new Action<MemorizedSpell>(this.detach_MemorizedSpells));
			this._ScribedSpells = new EntitySet<ScribedSpell>(new Action<ScribedSpell>(this.attach_ScribedSpells), new Action<ScribedSpell>(this.detach_ScribedSpells));
			this._Account = default(EntityRef<Account>);
			this._Zone = default(EntityRef<Zone>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CharacterID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int CharacterID
		{
			get
			{
				return this._CharacterID;
			}
			set
			{
				if ((this._CharacterID != value))
				{
					this.OnCharacterIDChanging(value);
					this.SendPropertyChanging();
					this._CharacterID = value;
					this.SendPropertyChanged("CharacterID");
					this.OnCharacterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AccountID", DbType="Int NOT NULL")]
		public int AccountID
		{
			get
			{
				return this._AccountID;
			}
			set
			{
				if ((this._AccountID != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnAccountIDChanging(value);
					this.SendPropertyChanging();
					this._AccountID = value;
					this.SendPropertyChanged("AccountID");
					this.OnAccountIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Surname", DbType="VarChar(64)")]
		public string Surname
		{
			get
			{
				return this._Surname;
			}
			set
			{
				if ((this._Surname != value))
				{
					this.OnSurnameChanging(value);
					this.SendPropertyChanging();
					this._Surname = value;
					this.SendPropertyChanged("Surname");
					this.OnSurnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Class", DbType="TinyInt")]
		public System.Nullable<byte> Class
		{
			get
			{
				return this._Class;
			}
			set
			{
				if ((this._Class != value))
				{
					this.OnClassChanging(value);
					this.SendPropertyChanging();
					this._Class = value;
					this.SendPropertyChanged("Class");
					this.OnClassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Race", DbType="SmallInt")]
		public System.Nullable<short> Race
		{
			get
			{
				return this._Race;
			}
			set
			{
				if ((this._Race != value))
				{
					this.OnRaceChanging(value);
					this.SendPropertyChanging();
					this._Race = value;
					this.SendPropertyChanged("Race");
					this.OnRaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="TinyInt")]
		public System.Nullable<byte> Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CharLevel", DbType="TinyInt NOT NULL")]
		public byte CharLevel
		{
			get
			{
				return this._CharLevel;
			}
			set
			{
				if ((this._CharLevel != value))
				{
					this.OnCharLevelChanging(value);
					this.SendPropertyChanging();
					this._CharLevel = value;
					this.SendPropertyChanged("CharLevel");
					this.OnCharLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XP", DbType="Int NOT NULL")]
		public uint XP
		{
			get
			{
				return this._XP;
			}
			set
			{
				if ((this._XP != value))
				{
					this.OnXPChanging(value);
					this.SendPropertyChanging();
					this._XP = value;
					this.SendPropertyChanged("XP");
					this.OnXPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STR", DbType="SmallInt")]
		public System.Nullable<short> STR
		{
			get
			{
				return this._STR;
			}
			set
			{
				if ((this._STR != value))
				{
					this.OnSTRChanging(value);
					this.SendPropertyChanging();
					this._STR = value;
					this.SendPropertyChanged("STR");
					this.OnSTRChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_STA", DbType="SmallInt")]
		public System.Nullable<short> STA
		{
			get
			{
				return this._STA;
			}
			set
			{
				if ((this._STA != value))
				{
					this.OnSTAChanging(value);
					this.SendPropertyChanging();
					this._STA = value;
					this.SendPropertyChanged("STA");
					this.OnSTAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AGI", DbType="SmallInt")]
		public System.Nullable<short> AGI
		{
			get
			{
				return this._AGI;
			}
			set
			{
				if ((this._AGI != value))
				{
					this.OnAGIChanging(value);
					this.SendPropertyChanging();
					this._AGI = value;
					this.SendPropertyChanged("AGI");
					this.OnAGIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DEX", DbType="SmallInt")]
		public System.Nullable<short> DEX
		{
			get
			{
				return this._DEX;
			}
			set
			{
				if ((this._DEX != value))
				{
					this.OnDEXChanging(value);
					this.SendPropertyChanging();
					this._DEX = value;
					this.SendPropertyChanged("DEX");
					this.OnDEXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WIS", DbType="SmallInt")]
		public System.Nullable<short> WIS
		{
			get
			{
				return this._WIS;
			}
			set
			{
				if ((this._WIS != value))
				{
					this.OnWISChanging(value);
					this.SendPropertyChanging();
					this._WIS = value;
					this.SendPropertyChanged("WIS");
					this.OnWISChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_INT", DbType="SmallInt")]
		public System.Nullable<short> INT
		{
			get
			{
				return this._INT;
			}
			set
			{
				if ((this._INT != value))
				{
					this.OnINTChanging(value);
					this.SendPropertyChanging();
					this._INT = value;
					this.SendPropertyChanged("INT");
					this.OnINTChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CHA", DbType="SmallInt")]
		public System.Nullable<short> CHA
		{
			get
			{
				return this._CHA;
			}
			set
			{
				if ((this._CHA != value))
				{
					this.OnCHAChanging(value);
					this.SendPropertyChanging();
					this._CHA = value;
					this.SendPropertyChanged("CHA");
					this.OnCHAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deity", DbType="Int")]
		public System.Nullable<int> Deity
		{
			get
			{
				return this._Deity;
			}
			set
			{
				if ((this._Deity != value))
				{
					this.OnDeityChanging(value);
					this.SendPropertyChanging();
					this._Deity = value;
					this.SendPropertyChanged("Deity");
					this.OnDeityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Face", DbType="TinyInt")]
		public System.Nullable<byte> Face
		{
			get
			{
				return this._Face;
			}
			set
			{
				if ((this._Face != value))
				{
					this.OnFaceChanging(value);
					this.SendPropertyChanging();
					this._Face = value;
					this.SendPropertyChanged("Face");
					this.OnFaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EyeColor1", DbType="TinyInt")]
		public System.Nullable<byte> EyeColor1
		{
			get
			{
				return this._EyeColor1;
			}
			set
			{
				if ((this._EyeColor1 != value))
				{
					this.OnEyeColor1Changing(value);
					this.SendPropertyChanging();
					this._EyeColor1 = value;
					this.SendPropertyChanged("EyeColor1");
					this.OnEyeColor1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EyeColor2", DbType="TinyInt")]
		public System.Nullable<byte> EyeColor2
		{
			get
			{
				return this._EyeColor2;
			}
			set
			{
				if ((this._EyeColor2 != value))
				{
					this.OnEyeColor2Changing(value);
					this.SendPropertyChanging();
					this._EyeColor2 = value;
					this.SendPropertyChanged("EyeColor2");
					this.OnEyeColor2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HairStyle", DbType="TinyInt")]
		public System.Nullable<byte> HairStyle
		{
			get
			{
				return this._HairStyle;
			}
			set
			{
				if ((this._HairStyle != value))
				{
					this.OnHairStyleChanging(value);
					this.SendPropertyChanging();
					this._HairStyle = value;
					this.SendPropertyChanged("HairStyle");
					this.OnHairStyleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HairColor", DbType="TinyInt")]
		public System.Nullable<byte> HairColor
		{
			get
			{
				return this._HairColor;
			}
			set
			{
				if ((this._HairColor != value))
				{
					this.OnHairColorChanging(value);
					this.SendPropertyChanging();
					this._HairColor = value;
					this.SendPropertyChanged("HairColor");
					this.OnHairColorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Beard", DbType="TinyInt")]
		public System.Nullable<byte> Beard
		{
			get
			{
				return this._Beard;
			}
			set
			{
				if ((this._Beard != value))
				{
					this.OnBeardChanging(value);
					this.SendPropertyChanging();
					this._Beard = value;
					this.SendPropertyChanged("Beard");
					this.OnBeardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeardColor", DbType="TinyInt")]
		public System.Nullable<byte> BeardColor
		{
			get
			{
				return this._BeardColor;
			}
			set
			{
				if ((this._BeardColor != value))
				{
					this.OnBeardColorChanging(value);
					this.SendPropertyChanging();
					this._BeardColor = value;
					this.SendPropertyChanged("BeardColor");
					this.OnBeardColorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PracticePoints", DbType="Int")]
		public System.Nullable<uint> PracticePoints
		{
			get
			{
				return this._PracticePoints;
			}
			set
			{
				if ((this._PracticePoints != value))
				{
					this.OnPracticePointsChanging(value);
					this.SendPropertyChanging();
					this._PracticePoints = value;
					this.SendPropertyChanged("PracticePoints");
					this.OnPracticePointsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HP", DbType="Int")]
		public System.Nullable<int> HP
		{
			get
			{
				return this._HP;
			}
			set
			{
				if ((this._HP != value))
				{
					this.OnHPChanging(value);
					this.SendPropertyChanging();
					this._HP = value;
					this.SendPropertyChanged("HP");
					this.OnHPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mana", DbType="Int")]
		public System.Nullable<int> Mana
		{
			get
			{
				return this._Mana;
			}
			set
			{
				if ((this._Mana != value))
				{
					this.OnManaChanging(value);
					this.SendPropertyChanging();
					this._Mana = value;
					this.SendPropertyChanged("Mana");
					this.OnManaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Endurance", DbType="Int")]
		public System.Nullable<int> Endurance
		{
			get
			{
				return this._Endurance;
			}
			set
			{
				if ((this._Endurance != value))
				{
					this.OnEnduranceChanging(value);
					this.SendPropertyChanging();
					this._Endurance = value;
					this.SendPropertyChanged("Endurance");
					this.OnEnduranceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HungerLevel", DbType="Int")]
		public System.Nullable<int> HungerLevel
		{
			get
			{
				return this._HungerLevel;
			}
			set
			{
				if ((this._HungerLevel != value))
				{
					this.OnHungerLevelChanging(value);
					this.SendPropertyChanging();
					this._HungerLevel = value;
					this.SendPropertyChanged("HungerLevel");
					this.OnHungerLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ThirstLevel", DbType="Int")]
		public System.Nullable<int> ThirstLevel
		{
			get
			{
				return this._ThirstLevel;
			}
			set
			{
				if ((this._ThirstLevel != value))
				{
					this.OnThirstLevelChanging(value);
					this.SendPropertyChanging();
					this._ThirstLevel = value;
					this.SendPropertyChanged("ThirstLevel");
					this.OnThirstLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Languages", DbType="Char(28)")]
		public string Languages
		{
			get
			{
				return this._Languages;
			}
			set
			{
				if ((this._Languages != value))
				{
					this.OnLanguagesChanging(value);
					this.SendPropertyChanging();
					this._Languages = value;
					this.SendPropertyChanged("Languages");
					this.OnLanguagesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Skills", DbType="Char(75)")]
		public string Skills
		{
			get
			{
				return this._Skills;
			}
			set
			{
				if ((this._Skills != value))
				{
					this.OnSkillsChanging(value);
					this.SendPropertyChanging();
					this._Skills = value;
					this.SendPropertyChanged("Skills");
					this.OnSkillsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(32)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Suffix", DbType="VarChar(32)")]
		public string Suffix
		{
			get
			{
				return this._Suffix;
			}
			set
			{
				if ((this._Suffix != value))
				{
					this.OnSuffixChanging(value);
					this.SendPropertyChanging();
					this._Suffix = value;
					this.SendPropertyChanged("Suffix");
					this.OnSuffixChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Platinum", DbType="Int NOT NULL")]
		public uint Platinum
		{
			get
			{
				return this._Platinum;
			}
			set
			{
				if ((this._Platinum != value))
				{
					this.OnPlatinumChanging(value);
					this.SendPropertyChanging();
					this._Platinum = value;
					this.SendPropertyChanged("Platinum");
					this.OnPlatinumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gold", DbType="Int NOT NULL")]
		public uint Gold
		{
			get
			{
				return this._Gold;
			}
			set
			{
				if ((this._Gold != value))
				{
					this.OnGoldChanging(value);
					this.SendPropertyChanging();
					this._Gold = value;
					this.SendPropertyChanged("Gold");
					this.OnGoldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Silver", DbType="Int NOT NULL")]
		public uint Silver
		{
			get
			{
				return this._Silver;
			}
			set
			{
				if ((this._Silver != value))
				{
					this.OnSilverChanging(value);
					this.SendPropertyChanging();
					this._Silver = value;
					this.SendPropertyChanged("Silver");
					this.OnSilverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Copper", DbType="Int NOT NULL")]
		public uint Copper
		{
			get
			{
				return this._Copper;
			}
			set
			{
				if ((this._Copper != value))
				{
					this.OnCopperChanging(value);
					this.SendPropertyChanging();
					this._Copper = value;
					this.SendPropertyChanged("Copper");
					this.OnCopperChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankedPlatinum", DbType="Int NOT NULL")]
		public int BankedPlatinum
		{
			get
			{
				return this._BankedPlatinum;
			}
			set
			{
				if ((this._BankedPlatinum != value))
				{
					this.OnBankedPlatinumChanging(value);
					this.SendPropertyChanging();
					this._BankedPlatinum = value;
					this.SendPropertyChanged("BankedPlatinum");
					this.OnBankedPlatinumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankedGold", DbType="Int NOT NULL")]
		public int BankedGold
		{
			get
			{
				return this._BankedGold;
			}
			set
			{
				if ((this._BankedGold != value))
				{
					this.OnBankedGoldChanging(value);
					this.SendPropertyChanging();
					this._BankedGold = value;
					this.SendPropertyChanged("BankedGold");
					this.OnBankedGoldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankedSilver", DbType="Int NOT NULL")]
		public int BankedSilver
		{
			get
			{
				return this._BankedSilver;
			}
			set
			{
				if ((this._BankedSilver != value))
				{
					this.OnBankedSilverChanging(value);
					this.SendPropertyChanging();
					this._BankedSilver = value;
					this.SendPropertyChanged("BankedSilver");
					this.OnBankedSilverChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BankedCopper", DbType="Int NOT NULL")]
		public int BankedCopper
		{
			get
			{
				return this._BankedCopper;
			}
			set
			{
				if ((this._BankedCopper != value))
				{
					this.OnBankedCopperChanging(value);
					this.SendPropertyChanging();
					this._BankedCopper = value;
					this.SendPropertyChanged("BankedCopper");
					this.OnBankedCopperChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_X", DbType="Float NOT NULL")]
		public float X
		{
			get
			{
				return this._X;
			}
			set
			{
				if ((this._X != value))
				{
					this.OnXChanging(value);
					this.SendPropertyChanging();
					this._X = value;
					this.SendPropertyChanged("X");
					this.OnXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Y", DbType="Float NOT NULL")]
		public float Y
		{
			get
			{
				return this._Y;
			}
			set
			{
				if ((this._Y != value))
				{
					this.OnYChanging(value);
					this.SendPropertyChanging();
					this._Y = value;
					this.SendPropertyChanged("Y");
					this.OnYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Z", DbType="Float NOT NULL")]
		public float Z
		{
			get
			{
				return this._Z;
			}
			set
			{
				if ((this._Z != value))
				{
					this.OnZChanging(value);
					this.SendPropertyChanging();
					this._Z = value;
					this.SendPropertyChanged("Z");
					this.OnZChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Heading", DbType="Float")]
		public System.Nullable<float> Heading
		{
			get
			{
				return this._Heading;
			}
			set
			{
				if ((this._Heading != value))
				{
					this.OnHeadingChanging(value);
					this.SendPropertyChanging();
					this._Heading = value;
					this.SendPropertyChanged("Heading");
					this.OnHeadingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZoneName", DbType="VarChar(40)")]
		public string ZoneName
		{
			get
			{
				return this._ZoneName;
			}
			set
			{
				if ((this._ZoneName != value))
				{
					this.OnZoneNameChanging(value);
					this.SendPropertyChanging();
					this._ZoneName = value;
					this.SendPropertyChanged("ZoneName");
					this.OnZoneNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZoneID", DbType="SmallInt")]
		public System.Nullable<ushort> ZoneID
		{
			get
			{
				return this._ZoneID;
			}
			set
			{
				if ((this._ZoneID != value))
				{
					if (this._Zone.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnZoneIDChanging(value);
					this.SendPropertyChanging();
					this._ZoneID = value;
					this.SendPropertyChanged("ZoneID");
					this.OnZoneIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsGM", DbType="TinyInt NOT NULL")]
		public byte GMStatus
		{
			get
			{
				return this._IsGM;
			}
			set
			{
				if ((this._IsGM != value))
				{
					this.OnGMStatusChanging(value);
					this.SendPropertyChanging();
					this._IsGM = value;
					this.SendPropertyChanged("GMStatus");
					this.OnGMStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupID", DbType="Int")]
		public System.Nullable<int> GroupID
		{
			get
			{
				return this._GroupID;
			}
			set
			{
				if ((this._GroupID != value))
				{
					this.OnGroupIDChanging(value);
					this.SendPropertyChanging();
					this._GroupID = value;
					this.SendPropertyChanged("GroupID");
					this.OnGroupIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLogOnDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> LastSeenDate
		{
			get
			{
				return this._LastLogOnDate;
			}
			set
			{
				if ((this._LastLogOnDate != value))
				{
					this.OnLastSeenDateChanging(value);
					this.SendPropertyChanging();
					this._LastLogOnDate = value;
					this.SendPropertyChanged("LastSeenDate");
					this.OnLastSeenDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreatedDate", DbType="DateTime NOT NULL")]
		public System.DateTime CreatedDate
		{
			get
			{
				return this._CreatedDate;
			}
			set
			{
				if ((this._CreatedDate != value))
				{
					this.OnCreatedDateChanging(value);
					this.SendPropertyChanging();
					this._CreatedDate = value;
					this.SendPropertyChanged("CreatedDate");
					this.OnCreatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Character_CharacterBind", Storage="_CharacterBinds", ThisKey="CharacterID", OtherKey="CharacterID")]
		public EntitySet<CharacterBind> CharacterBinds
		{
			get
			{
				return this._CharacterBinds;
			}
			set
			{
				this._CharacterBinds.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Character_InventoryItem", Storage="_InventoryItems", ThisKey="CharacterID", OtherKey="CharacterID")]
		public EntitySet<InventoryItem> InventoryItems
		{
			get
			{
				return this._InventoryItems;
			}
			set
			{
				this._InventoryItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Character_MemorizedSpell", Storage="_MemorizedSpells", ThisKey="CharacterID", OtherKey="CharacterID")]
		public EntitySet<MemorizedSpell> MemorizedSpells
		{
			get
			{
				return this._MemorizedSpells;
			}
			set
			{
				this._MemorizedSpells.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Character_ScribedSpell", Storage="_ScribedSpells", ThisKey="CharacterID", OtherKey="CharacterID")]
		public EntitySet<ScribedSpell> ScribedSpells
		{
			get
			{
				return this._ScribedSpells;
			}
			set
			{
				this._ScribedSpells.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Character", Storage="_Account", ThisKey="AccountID", OtherKey="AccountID", IsForeignKey=true)]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.Characters.Remove(this);
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.Characters.Add(this);
						this._AccountID = value.AccountID;
					}
					else
					{
						this._AccountID = default(int);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Zone_Character", Storage="_Zone", ThisKey="ZoneID", OtherKey="ZoneID", IsForeignKey=true)]
		public Zone Zone
		{
			get
			{
				return this._Zone.Entity;
			}
			set
			{
				Zone previousValue = this._Zone.Entity;
				if (((previousValue != value) 
							|| (this._Zone.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Zone.Entity = null;
						previousValue.Characters.Remove(this);
					}
					this._Zone.Entity = value;
					if ((value != null))
					{
						value.Characters.Add(this);
						this._ZoneID = value.ZoneID;
					}
					else
					{
						this._ZoneID = default(Nullable<ushort>);
					}
					this.SendPropertyChanged("Zone");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CharacterBinds(CharacterBind entity)
		{
			this.SendPropertyChanging();
			entity.Character = this;
		}
		
		private void detach_CharacterBinds(CharacterBind entity)
		{
			this.SendPropertyChanging();
			entity.Character = null;
		}
		
		private void attach_InventoryItems(InventoryItem entity)
		{
			this.SendPropertyChanging();
			entity.Character = this;
		}
		
		private void detach_InventoryItems(InventoryItem entity)
		{
			this.SendPropertyChanging();
			entity.Character = null;
		}
		
		private void attach_MemorizedSpells(MemorizedSpell entity)
		{
			this.SendPropertyChanging();
			entity.Character = this;
		}
		
		private void detach_MemorizedSpells(MemorizedSpell entity)
		{
			this.SendPropertyChanging();
			entity.Character = null;
		}
		
		private void attach_ScribedSpells(ScribedSpell entity)
		{
			this.SendPropertyChanging();
			entity.Character = this;
		}
		
		private void detach_ScribedSpells(ScribedSpell entity)
		{
			this.SendPropertyChanging();
			entity.Character = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Grid")]
	public partial class Grid : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GridID;
		
		private short _ZoneID;
		
		private byte _WanderType;
		
		private byte _PauseType;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGridIDChanging(int value);
    partial void OnGridIDChanged();
    partial void OnZoneIDChanging(short value);
    partial void OnZoneIDChanged();
    partial void OnWanderTypeChanging(byte value);
    partial void OnWanderTypeChanged();
    partial void OnPauseTypeChanging(byte value);
    partial void OnPauseTypeChanged();
    #endregion
		
		public Grid()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GridID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int GridID
		{
			get
			{
				return this._GridID;
			}
			set
			{
				if ((this._GridID != value))
				{
					this.OnGridIDChanging(value);
					this.SendPropertyChanging();
					this._GridID = value;
					this.SendPropertyChanged("GridID");
					this.OnGridIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZoneID", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short ZoneID
		{
			get
			{
				return this._ZoneID;
			}
			set
			{
				if ((this._ZoneID != value))
				{
					this.OnZoneIDChanging(value);
					this.SendPropertyChanging();
					this._ZoneID = value;
					this.SendPropertyChanged("ZoneID");
					this.OnZoneIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WanderType", DbType="TinyInt NOT NULL")]
		public byte WanderType
		{
			get
			{
				return this._WanderType;
			}
			set
			{
				if ((this._WanderType != value))
				{
					this.OnWanderTypeChanging(value);
					this.SendPropertyChanging();
					this._WanderType = value;
					this.SendPropertyChanged("WanderType");
					this.OnWanderTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PauseType", DbType="TinyInt NOT NULL")]
		public byte PauseType
		{
			get
			{
				return this._PauseType;
			}
			set
			{
				if ((this._PauseType != value))
				{
					this.OnPauseTypeChanging(value);
					this.SendPropertyChanging();
					this._PauseType = value;
					this.SendPropertyChanged("PauseType");
					this.OnPauseTypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GridEntries")]
	public partial class GridEntry : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _GridID;
		
		private short _ZoneID;
		
		private short _Ordinal;
		
		private float _X;
		
		private float _Y;
		
		private float _Z;
		
		private float _Heading;
		
		private short _Pause;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnGridIDChanging(int value);
    partial void OnGridIDChanged();
    partial void OnZoneIDChanging(short value);
    partial void OnZoneIDChanged();
    partial void OnOrdinalChanging(short value);
    partial void OnOrdinalChanged();
    partial void OnXChanging(float value);
    partial void OnXChanged();
    partial void OnYChanging(float value);
    partial void OnYChanged();
    partial void OnZChanging(float value);
    partial void OnZChanged();
    partial void OnHeadingChanging(float value);
    partial void OnHeadingChanged();
    partial void OnPauseChanging(short value);
    partial void OnPauseChanged();
    #endregion
		
		public GridEntry()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GridID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int GridID
		{
			get
			{
				return this._GridID;
			}
			set
			{
				if ((this._GridID != value))
				{
					this.OnGridIDChanging(value);
					this.SendPropertyChanging();
					this._GridID = value;
					this.SendPropertyChanged("GridID");
					this.OnGridIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZoneID", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short ZoneID
		{
			get
			{
				return this._ZoneID;
			}
			set
			{
				if ((this._ZoneID != value))
				{
					this.OnZoneIDChanging(value);
					this.SendPropertyChanging();
					this._ZoneID = value;
					this.SendPropertyChanged("ZoneID");
					this.OnZoneIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ordinal", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public short Ordinal
		{
			get
			{
				return this._Ordinal;
			}
			set
			{
				if ((this._Ordinal != value))
				{
					this.OnOrdinalChanging(value);
					this.SendPropertyChanging();
					this._Ordinal = value;
					this.SendPropertyChanged("Ordinal");
					this.OnOrdinalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_X", DbType="Float NOT NULL")]
		public float X
		{
			get
			{
				return this._X;
			}
			set
			{
				if ((this._X != value))
				{
					this.OnXChanging(value);
					this.SendPropertyChanging();
					this._X = value;
					this.SendPropertyChanged("X");
					this.OnXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Y", DbType="Float NOT NULL")]
		public float Y
		{
			get
			{
				return this._Y;
			}
			set
			{
				if ((this._Y != value))
				{
					this.OnYChanging(value);
					this.SendPropertyChanging();
					this._Y = value;
					this.SendPropertyChanged("Y");
					this.OnYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Z", DbType="Float NOT NULL")]
		public float Z
		{
			get
			{
				return this._Z;
			}
			set
			{
				if ((this._Z != value))
				{
					this.OnZChanging(value);
					this.SendPropertyChanging();
					this._Z = value;
					this.SendPropertyChanged("Z");
					this.OnZChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Heading", DbType="Float NOT NULL")]
		public float Heading
		{
			get
			{
				return this._Heading;
			}
			set
			{
				if ((this._Heading != value))
				{
					this.OnHeadingChanging(value);
					this.SendPropertyChanging();
					this._Heading = value;
					this.SendPropertyChanged("Heading");
					this.OnHeadingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pause", DbType="SmallInt NOT NULL")]
		public short Pause
		{
			get
			{
				return this._Pause;
			}
			set
			{
				if ((this._Pause != value))
				{
					this.OnPauseChanging(value);
					this.SendPropertyChanging();
					this._Pause = value;
					this.SendPropertyChanged("Pause");
					this.OnPauseChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Door")]
	internal partial class Door : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _DoorID;
		
		private short _Ordinal;
		
		private ushort _ZoneID;
		
		private string _DoorName;
		
		private float _X;
		
		private float _Y;
		
		private float _Z;
		
		private float _Heading;
		
		private short _OpenType;
		
		private System.Nullable<short> _GuildID;
		
		private short _LockPick;
		
		private System.Nullable<int> _KeyItemID;
		
		private System.Nullable<short> _TriggerDoor;
		
		private System.Nullable<short> _TriggerType;
		
		private int _DoorParam;
		
		private System.Nullable<short> _DestZoneID;
		
		private System.Nullable<float> _DestX;
		
		private System.Nullable<float> _DestY;
		
		private System.Nullable<float> _DestZ;
		
		private System.Nullable<float> _DestHeading;
		
		private bool _InvertState;
		
		private int _Incline;
		
		private short _Size;
		
		private EntityRef<Zone> _Zone;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDoorIDChanging(int value);
    partial void OnDoorIDChanged();
    partial void OnOrdinalChanging(short value);
    partial void OnOrdinalChanged();
    partial void OnZoneIDChanging(ushort value);
    partial void OnZoneIDChanged();
    partial void OnDoorNameChanging(string value);
    partial void OnDoorNameChanged();
    partial void OnXChanging(float value);
    partial void OnXChanged();
    partial void OnYChanging(float value);
    partial void OnYChanged();
    partial void OnZChanging(float value);
    partial void OnZChanged();
    partial void OnHeadingChanging(float value);
    partial void OnHeadingChanged();
    partial void OnOpenTypeChanging(short value);
    partial void OnOpenTypeChanged();
    partial void OnGuildIDChanging(System.Nullable<short> value);
    partial void OnGuildIDChanged();
    partial void OnLockPickChanging(short value);
    partial void OnLockPickChanged();
    partial void OnKeyItemIDChanging(System.Nullable<int> value);
    partial void OnKeyItemIDChanged();
    partial void OnTriggerDoorChanging(System.Nullable<short> value);
    partial void OnTriggerDoorChanged();
    partial void OnTriggerTypeChanging(System.Nullable<short> value);
    partial void OnTriggerTypeChanged();
    partial void OnDoorParamChanging(int value);
    partial void OnDoorParamChanged();
    partial void OnDestZoneIDChanging(System.Nullable<short> value);
    partial void OnDestZoneIDChanged();
    partial void OnDestXChanging(System.Nullable<float> value);
    partial void OnDestXChanged();
    partial void OnDestYChanging(System.Nullable<float> value);
    partial void OnDestYChanged();
    partial void OnDestZChanging(System.Nullable<float> value);
    partial void OnDestZChanged();
    partial void OnDestHeadingChanging(System.Nullable<float> value);
    partial void OnDestHeadingChanged();
    partial void OnInvertStateChanging(bool value);
    partial void OnInvertStateChanged();
    partial void OnInclineChanging(int value);
    partial void OnInclineChanged();
    partial void OnSizeChanging(short value);
    partial void OnSizeChanged();
    #endregion
		
		public Door()
		{
			this._Zone = default(EntityRef<Zone>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoorID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int DoorID
		{
			get
			{
				return this._DoorID;
			}
			set
			{
				if ((this._DoorID != value))
				{
					this.OnDoorIDChanging(value);
					this.SendPropertyChanging();
					this._DoorID = value;
					this.SendPropertyChanged("DoorID");
					this.OnDoorIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ordinal", DbType="SmallInt NOT NULL")]
		public short Ordinal
		{
			get
			{
				return this._Ordinal;
			}
			set
			{
				if ((this._Ordinal != value))
				{
					this.OnOrdinalChanging(value);
					this.SendPropertyChanging();
					this._Ordinal = value;
					this.SendPropertyChanged("Ordinal");
					this.OnOrdinalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZoneID", DbType="SmallInt NOT NULL")]
		public ushort ZoneID
		{
			get
			{
				return this._ZoneID;
			}
			set
			{
				if ((this._ZoneID != value))
				{
					if (this._Zone.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnZoneIDChanging(value);
					this.SendPropertyChanging();
					this._ZoneID = value;
					this.SendPropertyChanged("ZoneID");
					this.OnZoneIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoorName", DbType="VarChar(32) NOT NULL", CanBeNull=false)]
		public string DoorName
		{
			get
			{
				return this._DoorName;
			}
			set
			{
				if ((this._DoorName != value))
				{
					this.OnDoorNameChanging(value);
					this.SendPropertyChanging();
					this._DoorName = value;
					this.SendPropertyChanged("DoorName");
					this.OnDoorNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_X", DbType="Float NOT NULL")]
		public float X
		{
			get
			{
				return this._X;
			}
			set
			{
				if ((this._X != value))
				{
					this.OnXChanging(value);
					this.SendPropertyChanging();
					this._X = value;
					this.SendPropertyChanged("X");
					this.OnXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Y", DbType="Float NOT NULL")]
		public float Y
		{
			get
			{
				return this._Y;
			}
			set
			{
				if ((this._Y != value))
				{
					this.OnYChanging(value);
					this.SendPropertyChanging();
					this._Y = value;
					this.SendPropertyChanged("Y");
					this.OnYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Z", DbType="Float NOT NULL")]
		public float Z
		{
			get
			{
				return this._Z;
			}
			set
			{
				if ((this._Z != value))
				{
					this.OnZChanging(value);
					this.SendPropertyChanging();
					this._Z = value;
					this.SendPropertyChanged("Z");
					this.OnZChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Heading", DbType="Float NOT NULL")]
		public float Heading
		{
			get
			{
				return this._Heading;
			}
			set
			{
				if ((this._Heading != value))
				{
					this.OnHeadingChanging(value);
					this.SendPropertyChanging();
					this._Heading = value;
					this.SendPropertyChanged("Heading");
					this.OnHeadingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OpenType", DbType="SmallInt NOT NULL")]
		public short OpenType
		{
			get
			{
				return this._OpenType;
			}
			set
			{
				if ((this._OpenType != value))
				{
					this.OnOpenTypeChanging(value);
					this.SendPropertyChanging();
					this._OpenType = value;
					this.SendPropertyChanged("OpenType");
					this.OnOpenTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GuildID", DbType="SmallInt")]
		public System.Nullable<short> GuildID
		{
			get
			{
				return this._GuildID;
			}
			set
			{
				if ((this._GuildID != value))
				{
					this.OnGuildIDChanging(value);
					this.SendPropertyChanging();
					this._GuildID = value;
					this.SendPropertyChanged("GuildID");
					this.OnGuildIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LockPick", DbType="SmallInt NOT NULL")]
		public short LockPick
		{
			get
			{
				return this._LockPick;
			}
			set
			{
				if ((this._LockPick != value))
				{
					this.OnLockPickChanging(value);
					this.SendPropertyChanging();
					this._LockPick = value;
					this.SendPropertyChanged("LockPick");
					this.OnLockPickChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KeyItemID", DbType="Int")]
		public System.Nullable<int> KeyItemID
		{
			get
			{
				return this._KeyItemID;
			}
			set
			{
				if ((this._KeyItemID != value))
				{
					this.OnKeyItemIDChanging(value);
					this.SendPropertyChanging();
					this._KeyItemID = value;
					this.SendPropertyChanged("KeyItemID");
					this.OnKeyItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TriggerDoor", DbType="SmallInt")]
		public System.Nullable<short> TriggerDoor
		{
			get
			{
				return this._TriggerDoor;
			}
			set
			{
				if ((this._TriggerDoor != value))
				{
					this.OnTriggerDoorChanging(value);
					this.SendPropertyChanging();
					this._TriggerDoor = value;
					this.SendPropertyChanged("TriggerDoor");
					this.OnTriggerDoorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TriggerType", DbType="SmallInt")]
		public System.Nullable<short> TriggerType
		{
			get
			{
				return this._TriggerType;
			}
			set
			{
				if ((this._TriggerType != value))
				{
					this.OnTriggerTypeChanging(value);
					this.SendPropertyChanging();
					this._TriggerType = value;
					this.SendPropertyChanged("TriggerType");
					this.OnTriggerTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoorParam", DbType="Int NOT NULL")]
		public int DoorParam
		{
			get
			{
				return this._DoorParam;
			}
			set
			{
				if ((this._DoorParam != value))
				{
					this.OnDoorParamChanging(value);
					this.SendPropertyChanging();
					this._DoorParam = value;
					this.SendPropertyChanged("DoorParam");
					this.OnDoorParamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DestZoneID", DbType="SmallInt")]
		public System.Nullable<short> DestZoneID
		{
			get
			{
				return this._DestZoneID;
			}
			set
			{
				if ((this._DestZoneID != value))
				{
					this.OnDestZoneIDChanging(value);
					this.SendPropertyChanging();
					this._DestZoneID = value;
					this.SendPropertyChanged("DestZoneID");
					this.OnDestZoneIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DestX", DbType="Float")]
		public System.Nullable<float> DestX
		{
			get
			{
				return this._DestX;
			}
			set
			{
				if ((this._DestX != value))
				{
					this.OnDestXChanging(value);
					this.SendPropertyChanging();
					this._DestX = value;
					this.SendPropertyChanged("DestX");
					this.OnDestXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DestY", DbType="Float")]
		public System.Nullable<float> DestY
		{
			get
			{
				return this._DestY;
			}
			set
			{
				if ((this._DestY != value))
				{
					this.OnDestYChanging(value);
					this.SendPropertyChanging();
					this._DestY = value;
					this.SendPropertyChanged("DestY");
					this.OnDestYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DestZ", DbType="Float")]
		public System.Nullable<float> DestZ
		{
			get
			{
				return this._DestZ;
			}
			set
			{
				if ((this._DestZ != value))
				{
					this.OnDestZChanging(value);
					this.SendPropertyChanging();
					this._DestZ = value;
					this.SendPropertyChanged("DestZ");
					this.OnDestZChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DestHeading", DbType="Float")]
		public System.Nullable<float> DestHeading
		{
			get
			{
				return this._DestHeading;
			}
			set
			{
				if ((this._DestHeading != value))
				{
					this.OnDestHeadingChanging(value);
					this.SendPropertyChanging();
					this._DestHeading = value;
					this.SendPropertyChanged("DestHeading");
					this.OnDestHeadingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InvertState", DbType="Bit NOT NULL")]
		public bool InvertState
		{
			get
			{
				return this._InvertState;
			}
			set
			{
				if ((this._InvertState != value))
				{
					this.OnInvertStateChanging(value);
					this.SendPropertyChanging();
					this._InvertState = value;
					this.SendPropertyChanged("InvertState");
					this.OnInvertStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Incline", DbType="Int NOT NULL")]
		public int Incline
		{
			get
			{
				return this._Incline;
			}
			set
			{
				if ((this._Incline != value))
				{
					this.OnInclineChanging(value);
					this.SendPropertyChanging();
					this._Incline = value;
					this.SendPropertyChanged("Incline");
					this.OnInclineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Size", DbType="SmallInt NOT NULL")]
		public short Size
		{
			get
			{
				return this._Size;
			}
			set
			{
				if ((this._Size != value))
				{
					this.OnSizeChanging(value);
					this.SendPropertyChanging();
					this._Size = value;
					this.SendPropertyChanged("Size");
					this.OnSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Zone_Door", Storage="_Zone", ThisKey="ZoneID", OtherKey="ZoneID", IsForeignKey=true)]
		public Zone Zone
		{
			get
			{
				return this._Zone.Entity;
			}
			set
			{
				Zone previousValue = this._Zone.Entity;
				if (((previousValue != value) 
							|| (this._Zone.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Zone.Entity = null;
						previousValue.Doors.Remove(this);
					}
					this._Zone.Entity = value;
					if ((value != null))
					{
						value.Doors.Add(this);
						this._ZoneID = value.ZoneID;
					}
					else
					{
						this._ZoneID = default(ushort);
					}
					this.SendPropertyChanged("Zone");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StartZone")]
	internal partial class StartZone : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StartZoneID;
		
		private float _X;
		
		private float _Y;
		
		private float _Z;
		
		private ushort _ZoneID;
		
		private System.Nullable<ushort> _BindZoneID;
		
		private System.Nullable<float> _BindX;
		
		private System.Nullable<float> _BindY;
		
		private System.Nullable<float> _BindZ;
		
		private byte _PlayerChoice;
		
		private byte _PlayerClass;
		
		private short _PlayerDeity;
		
		private short _PlayerRace;
		
		private EntityRef<Zone> _Zone;
		
		private EntityRef<Zone> _BindZone;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStartZoneIDChanging(int value);
    partial void OnStartZoneIDChanged();
    partial void OnXChanging(float value);
    partial void OnXChanged();
    partial void OnYChanging(float value);
    partial void OnYChanged();
    partial void OnZChanging(float value);
    partial void OnZChanged();
    partial void OnZoneIDChanging(ushort value);
    partial void OnZoneIDChanged();
    partial void OnBindZoneIDChanging(System.Nullable<ushort> value);
    partial void OnBindZoneIDChanged();
    partial void OnBindXChanging(System.Nullable<float> value);
    partial void OnBindXChanged();
    partial void OnBindYChanging(System.Nullable<float> value);
    partial void OnBindYChanged();
    partial void OnBindZChanging(System.Nullable<float> value);
    partial void OnBindZChanged();
    partial void OnPlayerChoiceChanging(byte value);
    partial void OnPlayerChoiceChanged();
    partial void OnPlayerClassChanging(byte value);
    partial void OnPlayerClassChanged();
    partial void OnPlayerDeityChanging(short value);
    partial void OnPlayerDeityChanged();
    partial void OnPlayerRaceChanging(short value);
    partial void OnPlayerRaceChanged();
    #endregion
		
		public StartZone()
		{
			this._Zone = default(EntityRef<Zone>);
			this._BindZone = default(EntityRef<Zone>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartZoneID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int StartZoneID
		{
			get
			{
				return this._StartZoneID;
			}
			set
			{
				if ((this._StartZoneID != value))
				{
					this.OnStartZoneIDChanging(value);
					this.SendPropertyChanging();
					this._StartZoneID = value;
					this.SendPropertyChanged("StartZoneID");
					this.OnStartZoneIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_X", DbType="Float NOT NULL")]
		public float X
		{
			get
			{
				return this._X;
			}
			set
			{
				if ((this._X != value))
				{
					this.OnXChanging(value);
					this.SendPropertyChanging();
					this._X = value;
					this.SendPropertyChanged("X");
					this.OnXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Y", DbType="Float NOT NULL")]
		public float Y
		{
			get
			{
				return this._Y;
			}
			set
			{
				if ((this._Y != value))
				{
					this.OnYChanging(value);
					this.SendPropertyChanging();
					this._Y = value;
					this.SendPropertyChanged("Y");
					this.OnYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Z", DbType="Float NOT NULL")]
		public float Z
		{
			get
			{
				return this._Z;
			}
			set
			{
				if ((this._Z != value))
				{
					this.OnZChanging(value);
					this.SendPropertyChanging();
					this._Z = value;
					this.SendPropertyChanged("Z");
					this.OnZChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZoneID", DbType="SmallInt NOT NULL")]
		public ushort ZoneID
		{
			get
			{
				return this._ZoneID;
			}
			set
			{
				if ((this._ZoneID != value))
				{
					if (this._Zone.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnZoneIDChanging(value);
					this.SendPropertyChanging();
					this._ZoneID = value;
					this.SendPropertyChanged("ZoneID");
					this.OnZoneIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BindZoneID", DbType="SmallInt")]
		public System.Nullable<ushort> BindZoneID
		{
			get
			{
				return this._BindZoneID;
			}
			set
			{
				if ((this._BindZoneID != value))
				{
					if (this._BindZone.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnBindZoneIDChanging(value);
					this.SendPropertyChanging();
					this._BindZoneID = value;
					this.SendPropertyChanged("BindZoneID");
					this.OnBindZoneIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BindX", DbType="Float")]
		public System.Nullable<float> BindX
		{
			get
			{
				return this._BindX;
			}
			set
			{
				if ((this._BindX != value))
				{
					this.OnBindXChanging(value);
					this.SendPropertyChanging();
					this._BindX = value;
					this.SendPropertyChanged("BindX");
					this.OnBindXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BindY", DbType="Float")]
		public System.Nullable<float> BindY
		{
			get
			{
				return this._BindY;
			}
			set
			{
				if ((this._BindY != value))
				{
					this.OnBindYChanging(value);
					this.SendPropertyChanging();
					this._BindY = value;
					this.SendPropertyChanged("BindY");
					this.OnBindYChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BindZ", DbType="Float")]
		public System.Nullable<float> BindZ
		{
			get
			{
				return this._BindZ;
			}
			set
			{
				if ((this._BindZ != value))
				{
					this.OnBindZChanging(value);
					this.SendPropertyChanging();
					this._BindZ = value;
					this.SendPropertyChanged("BindZ");
					this.OnBindZChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlayerChoice", DbType="TinyInt NOT NULL")]
		public byte PlayerChoice
		{
			get
			{
				return this._PlayerChoice;
			}
			set
			{
				if ((this._PlayerChoice != value))
				{
					this.OnPlayerChoiceChanging(value);
					this.SendPropertyChanging();
					this._PlayerChoice = value;
					this.SendPropertyChanged("PlayerChoice");
					this.OnPlayerChoiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlayerClass", DbType="TinyInt NOT NULL")]
		public byte PlayerClass
		{
			get
			{
				return this._PlayerClass;
			}
			set
			{
				if ((this._PlayerClass != value))
				{
					this.OnPlayerClassChanging(value);
					this.SendPropertyChanging();
					this._PlayerClass = value;
					this.SendPropertyChanged("PlayerClass");
					this.OnPlayerClassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlayerDeity", DbType="SmallInt NOT NULL")]
		public short PlayerDeity
		{
			get
			{
				return this._PlayerDeity;
			}
			set
			{
				if ((this._PlayerDeity != value))
				{
					this.OnPlayerDeityChanging(value);
					this.SendPropertyChanging();
					this._PlayerDeity = value;
					this.SendPropertyChanged("PlayerDeity");
					this.OnPlayerDeityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PlayerRace", DbType="SmallInt NOT NULL")]
		public short PlayerRace
		{
			get
			{
				return this._PlayerRace;
			}
			set
			{
				if ((this._PlayerRace != value))
				{
					this.OnPlayerRaceChanging(value);
					this.SendPropertyChanging();
					this._PlayerRace = value;
					this.SendPropertyChanged("PlayerRace");
					this.OnPlayerRaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Zone_StartZone", Storage="_Zone", ThisKey="ZoneID", OtherKey="ZoneID", IsForeignKey=true)]
		public Zone Zone
		{
			get
			{
				return this._Zone.Entity;
			}
			set
			{
				Zone previousValue = this._Zone.Entity;
				if (((previousValue != value) 
							|| (this._Zone.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Zone.Entity = null;
						previousValue.StartZones.Remove(this);
					}
					this._Zone.Entity = value;
					if ((value != null))
					{
						value.StartZones.Add(this);
						this._ZoneID = value.ZoneID;
					}
					else
					{
						this._ZoneID = default(ushort);
					}
					this.SendPropertyChanged("Zone");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Zone_StartZone1", Storage="_BindZone", ThisKey="BindZoneID", OtherKey="ZoneID", IsForeignKey=true)]
		public Zone BindZone
		{
			get
			{
				return this._BindZone.Entity;
			}
			set
			{
				Zone previousValue = this._BindZone.Entity;
				if (((previousValue != value) 
							|| (this._BindZone.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BindZone.Entity = null;
						previousValue.StartZones1.Remove(this);
					}
					this._BindZone.Entity = value;
					if ((value != null))
					{
						value.StartZones1.Add(this);
						this._BindZoneID = value.ZoneID;
					}
					else
					{
						this._BindZoneID = default(Nullable<ushort>);
					}
					this.SendPropertyChanged("BindZone");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Items")]
	internal partial class Item : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private uint _ItemID;
		
		private byte _MinStatus;
		
		private string _Name;
		
		private short _ChaBonus;
		
		private short _DexBonus;
		
		private short _IntBonus;
		
		private short _WisBonus;
		
		private short _AgiBonus;
		
		private short _StaBonus;
		
		private short _StrBonus;
		
		private short _AttackBonus;
		
		private short _ACBonus;
		
		private short _Accuracy;
		
		private bool _IsArtifact;
		
		private int _AugRestrict;
		
		private byte _AugSlot1Type;
		
		private byte _AugSlot1Vis;
		
		private byte _AugSlot2Type;
		
		private byte _AugSlot2Vis;
		
		private byte _AugSlot3Type;
		
		private byte _AugSlot3Vis;
		
		private byte _AugSlot4Type;
		
		private byte _AugSlot4Vis;
		
		private byte _AugSlot5Type;
		
		private byte _AugSlot5Vis;
		
		private int _AugType;
		
		private short _Avoidance;
		
		private byte _BagSize;
		
		private byte _BagSlots;
		
		private byte _BagType;
		
		private byte _BagWeightReduc;
		
		private short _BaneDmgBodyAmt;
		
		private short _BaneDmgRaceAmt;
		
		private short _BaneDmgBody;
		
		private short _BaneDmgRace;
		
		private int _BardType;
		
		private int _BardValue;
		
		private byte _Book;
		
		private int _EffectCastTime;
		
		private int _ClickEffectCastTime;
		
		private string _CharmFile;
		
		private int _CharmFileID;
		
		private int _Classes;
		
		private System.Nullable<uint> _Color;
		
		private byte _CombatEffects;
		
		private int _ExtraDmgSkill;
		
		private int _ExtraDmgAmt;
		
		private int _Price;
		
		private short _CRBonus;
		
		private short _DRBonus;
		
		private short _FRBonus;
		
		private short _MRBonus;
		
		private short _PRBonus;
		
		private short _Damage;
		
		private short _DamageShield;
		
		private int _Deity;
		
		private int _Delay;
		
		private int _AugDistiller;
		
		private int _DotShielding;
		
		private int _ClickType;
		
		private short _ClickLevelReq;
		
		private short _ClickLevelMax;
		
		private byte _ElemDmgType;
		
		private short _ElemDmgAmt;
		
		private int _EnduranceBonus;
		
		private int _FactionAmt1;
		
		private int _FactionAmt2;
		
		private int _FactionAmt3;
		
		private int _FactionAmt4;
		
		private int _FactionMod1;
		
		private int _FactionMod2;
		
		private int _FactionMod3;
		
		private int _FactionMod4;
		
		private string _BookName;
		
		private int _FocusEffectSpellID;
		
		private bool _FVNoDrop;
		
		private byte _HastePct;
		
		private int _HPBonus;
		
		private int _Regen;
		
		private int _Icon;
		
		private string _IDFile;
		
		private byte _ItemClass;
		
		private byte _ItemType;
		
		private int _LdonPrice;
		
		private int _LdonTheme;
		
		private int _Ldonsold;
		
		private byte _Light;
		
		private string _Lore;
		
		private int _LoreGroup;
		
		private bool _Magic;
		
		private int _ManaBonus;
		
		private int _ManaRegen;
		
		private int _EnduranceRegen;
		
		private int _Material;
		
		private short _MaxCharges;
		
		private byte _NoDrop;
		
		private byte _NoRent;
		
		private bool _PendingLoreFlag;
		
		private int _ProcRate;
		
		private int _Races;
		
		private int _Range;
		
		private int _RecLevel;
		
		private int _RecSkill;
		
		private int _ReqLevel;
		
		private double _SellRate;
		
		private int _Shielding;
		
		private byte _Size;
		
		private int _skillmodtype;
		
		private int _skillmodvalue;
		
		private int _slots;
		
		private int _clickeffect;
		
		private int _spellshield;
		
		private int _strikethrough;
		
		private int _stunresist;
		
		private bool _summonedflag;
		
		private int _tradeskills;
		
		private int _favor;
		
		private int _weight;
		
		private byte _benefitflag;
		
		private int _booktype;
		
		private int _recastdelay;
		
		private int _recasttype;
		
		private int _guildfavor;
		
		private bool _attuneable;
		
		private bool _nopet;
		
		private int _pointtype;
		
		private int _potionbelt;
		
		private int _potionbeltslots;
		
		private int _stacksize;
		
		private bool _notransfer;
		
		private bool _stackable;
		
		private int _proceffect;
		
		private int _proctype;
		
		private int _proclevel2;
		
		private int _proclevel;
		
		private int _worneffect;
		
		private int _worntype;
		
		private int _wornlevel2;
		
		private int _wornlevel;
		
		private int _focustype;
		
		private int _focuslevel2;
		
		private int _focuslevel;
		
		private int _scrolleffect;
		
		private int _scrolltype;
		
		private int _scrolllevel2;
		
		private int _scrolllevel;
		
		private string _lorefile;
		
		private int _svcorruption;
		
		private int _augslot1unk2;
		
		private int _augslot2unk2;
		
		private int _augslot3unk2;
		
		private int _augslot4unk2;
		
		private int _augslot5unk2;
		
		private int _questitemflag;
		
		private int _clickunk5;
		
		private string _clickunk6;
		
		private int _clickunk7;
		
		private int _procunk1;
		
		private int _procunk2;
		
		private int _procunk3;
		
		private int _procunk4;
		
		private string _procunk6;
		
		private int _procunk7;
		
		private int _wornunk1;
		
		private int _wornunk2;
		
		private int _wornunk3;
		
		private int _wornunk4;
		
		private int _wornunk5;
		
		private string _wornunk6;
		
		private int _wornunk7;
		
		private int _focusunk1;
		
		private int _focusunk2;
		
		private int _focusunk3;
		
		private int _focusunk4;
		
		private int _focusunk5;
		
		private string _focusunk6;
		
		private int _focusunk7;
		
		private int _scrollunk1;
		
		private int _scrollunk2;
		
		private int _scrollunk3;
		
		private int _scrollunk4;
		
		private int _scrollunk5;
		
		private string _scrollunk6;
		
		private int _scrollunk7;
		
		private int _purity;
		
		private int _evolvinglevel;
		
		private EntitySet<InventoryItem> _InventoryItems;
		
		private EntitySet<StartingItem> _StartingItems;
		
		private EntitySet<LootDrop> _LootDrops;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItemIDChanging(uint value);
    partial void OnItemIDChanged();
    partial void OnMinStatusChanging(byte value);
    partial void OnMinStatusChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnChaBonusChanging(short value);
    partial void OnChaBonusChanged();
    partial void OnDexBonusChanging(short value);
    partial void OnDexBonusChanged();
    partial void OnIntBonusChanging(short value);
    partial void OnIntBonusChanged();
    partial void OnWisBonusChanging(short value);
    partial void OnWisBonusChanged();
    partial void OnAgiBonusChanging(short value);
    partial void OnAgiBonusChanged();
    partial void OnStaBonusChanging(short value);
    partial void OnStaBonusChanged();
    partial void OnStrBonusChanging(short value);
    partial void OnStrBonusChanged();
    partial void OnAttackBonusChanging(short value);
    partial void OnAttackBonusChanged();
    partial void OnACBonusChanging(short value);
    partial void OnACBonusChanged();
    partial void OnAccuracyChanging(short value);
    partial void OnAccuracyChanged();
    partial void OnIsArtifactChanging(bool value);
    partial void OnIsArtifactChanged();
    partial void OnAugRestrictChanging(int value);
    partial void OnAugRestrictChanged();
    partial void OnAugSlot1TypeChanging(byte value);
    partial void OnAugSlot1TypeChanged();
    partial void OnAugSlot1VisChanging(byte value);
    partial void OnAugSlot1VisChanged();
    partial void OnAugSlot2TypeChanging(byte value);
    partial void OnAugSlot2TypeChanged();
    partial void OnAugSlot2VisChanging(byte value);
    partial void OnAugSlot2VisChanged();
    partial void OnAugSlot3TypeChanging(byte value);
    partial void OnAugSlot3TypeChanged();
    partial void OnAugSlot3VisChanging(byte value);
    partial void OnAugSlot3VisChanged();
    partial void OnAugSlot4TypeChanging(byte value);
    partial void OnAugSlot4TypeChanged();
    partial void OnAugSlot4VisChanging(byte value);
    partial void OnAugSlot4VisChanged();
    partial void OnAugSlot5TypeChanging(byte value);
    partial void OnAugSlot5TypeChanged();
    partial void OnAugSlot5VisChanging(byte value);
    partial void OnAugSlot5VisChanged();
    partial void OnAugTypeChanging(int value);
    partial void OnAugTypeChanged();
    partial void OnAvoidanceChanging(short value);
    partial void OnAvoidanceChanged();
    partial void OnBagSizeChanging(byte value);
    partial void OnBagSizeChanged();
    partial void OnBagSlotsChanging(byte value);
    partial void OnBagSlotsChanged();
    partial void OnBagTypeChanging(byte value);
    partial void OnBagTypeChanged();
    partial void OnBagWeightReducChanging(byte value);
    partial void OnBagWeightReducChanged();
    partial void OnBaneDmgBodyAmtChanging(short value);
    partial void OnBaneDmgBodyAmtChanged();
    partial void OnBaneDmgRaceAmtChanging(short value);
    partial void OnBaneDmgRaceAmtChanged();
    partial void OnBaneDmgBodyChanging(short value);
    partial void OnBaneDmgBodyChanged();
    partial void OnBaneDmgRaceChanging(short value);
    partial void OnBaneDmgRaceChanged();
    partial void OnBardTypeChanging(int value);
    partial void OnBardTypeChanged();
    partial void OnBardValueChanging(int value);
    partial void OnBardValueChanged();
    partial void OnBookChanging(byte value);
    partial void OnBookChanged();
    partial void OnEffectCastTimeChanging(int value);
    partial void OnEffectCastTimeChanged();
    partial void OnClickEffectCastTimeChanging(int value);
    partial void OnClickEffectCastTimeChanged();
    partial void OnCharmFileChanging(string value);
    partial void OnCharmFileChanged();
    partial void OnCharmFileIDChanging(int value);
    partial void OnCharmFileIDChanged();
    partial void OnClassesChanging(int value);
    partial void OnClassesChanged();
    partial void OnColorChanging(System.Nullable<uint> value);
    partial void OnColorChanged();
    partial void OnCombatEffectsChanging(byte value);
    partial void OnCombatEffectsChanged();
    partial void OnExtraDmgSkillChanging(int value);
    partial void OnExtraDmgSkillChanged();
    partial void OnExtraDmgAmtChanging(int value);
    partial void OnExtraDmgAmtChanged();
    partial void OnPriceChanging(int value);
    partial void OnPriceChanged();
    partial void OnCRBonusChanging(short value);
    partial void OnCRBonusChanged();
    partial void OnDRBonusChanging(short value);
    partial void OnDRBonusChanged();
    partial void OnFRBonusChanging(short value);
    partial void OnFRBonusChanged();
    partial void OnMRBonusChanging(short value);
    partial void OnMRBonusChanged();
    partial void OnPRBonusChanging(short value);
    partial void OnPRBonusChanged();
    partial void OnDamageChanging(short value);
    partial void OnDamageChanged();
    partial void OnDamageShieldChanging(short value);
    partial void OnDamageShieldChanged();
    partial void OnDeityChanging(int value);
    partial void OnDeityChanged();
    partial void OnDelayChanging(int value);
    partial void OnDelayChanged();
    partial void OnAugDistillerChanging(int value);
    partial void OnAugDistillerChanged();
    partial void OnDotShieldingChanging(int value);
    partial void OnDotShieldingChanged();
    partial void OnClickTypeChanging(int value);
    partial void OnClickTypeChanged();
    partial void OnClickLevelReqChanging(short value);
    partial void OnClickLevelReqChanged();
    partial void OnClickLevelMaxChanging(short value);
    partial void OnClickLevelMaxChanged();
    partial void OnElemDmgTypeChanging(byte value);
    partial void OnElemDmgTypeChanged();
    partial void OnElemDmgAmtChanging(short value);
    partial void OnElemDmgAmtChanged();
    partial void OnEnduranceBonusChanging(int value);
    partial void OnEnduranceBonusChanged();
    partial void OnFactionAmt1Changing(int value);
    partial void OnFactionAmt1Changed();
    partial void OnFactionAmt2Changing(int value);
    partial void OnFactionAmt2Changed();
    partial void OnFactionAmt3Changing(int value);
    partial void OnFactionAmt3Changed();
    partial void OnFactionAmt4Changing(int value);
    partial void OnFactionAmt4Changed();
    partial void OnFactionMod1Changing(int value);
    partial void OnFactionMod1Changed();
    partial void OnFactionMod2Changing(int value);
    partial void OnFactionMod2Changed();
    partial void OnFactionMod3Changing(int value);
    partial void OnFactionMod3Changed();
    partial void OnFactionMod4Changing(int value);
    partial void OnFactionMod4Changed();
    partial void OnBookFileNameChanging(string value);
    partial void OnBookFileNameChanged();
    partial void OnFocusEffectSpellIDChanging(int value);
    partial void OnFocusEffectSpellIDChanged();
    partial void OnFVNoDropChanging(bool value);
    partial void OnFVNoDropChanged();
    partial void OnHastePctChanging(byte value);
    partial void OnHastePctChanged();
    partial void OnHPBonusChanging(int value);
    partial void OnHPBonusChanged();
    partial void OnRegenChanging(int value);
    partial void OnRegenChanged();
    partial void OnIconChanging(int value);
    partial void OnIconChanged();
    partial void OnIDFileChanging(string value);
    partial void OnIDFileChanged();
    partial void OnItemClassChanging(byte value);
    partial void OnItemClassChanged();
    partial void OnItemTypeChanging(byte value);
    partial void OnItemTypeChanged();
    partial void OnLdonPriceChanging(int value);
    partial void OnLdonPriceChanged();
    partial void OnLdonThemeChanging(int value);
    partial void OnLdonThemeChanged();
    partial void OnLdonsoldChanging(int value);
    partial void OnLdonsoldChanged();
    partial void OnLightChanging(byte value);
    partial void OnLightChanged();
    partial void OnLoreChanging(string value);
    partial void OnLoreChanged();
    partial void OnLoreGroupChanging(int value);
    partial void OnLoreGroupChanged();
    partial void OnIsMagicChanging(bool value);
    partial void OnIsMagicChanged();
    partial void OnManaBonusChanging(int value);
    partial void OnManaBonusChanged();
    partial void OnManaRegenChanging(int value);
    partial void OnManaRegenChanged();
    partial void OnEnduranceRegenChanging(int value);
    partial void OnEnduranceRegenChanged();
    partial void OnMaterialChanging(int value);
    partial void OnMaterialChanged();
    partial void OnMaxChargesChanging(short value);
    partial void OnMaxChargesChanged();
    partial void OnNoDropChanging(byte value);
    partial void OnNoDropChanged();
    partial void OnNoRentChanging(byte value);
    partial void OnNoRentChanged();
    partial void OnHasPendingLoreFlagChanging(bool value);
    partial void OnHasPendingLoreFlagChanged();
    partial void OnProcRateChanging(int value);
    partial void OnProcRateChanged();
    partial void OnRacesChanging(int value);
    partial void OnRacesChanged();
    partial void OnRangeChanging(int value);
    partial void OnRangeChanged();
    partial void OnRecLevelChanging(int value);
    partial void OnRecLevelChanged();
    partial void OnRecSkillChanging(int value);
    partial void OnRecSkillChanged();
    partial void OnReqLevelChanging(int value);
    partial void OnReqLevelChanged();
    partial void OnSellRateChanging(double value);
    partial void OnSellRateChanged();
    partial void OnShieldingChanging(int value);
    partial void OnShieldingChanged();
    partial void OnSizeChanging(byte value);
    partial void OnSizeChanged();
    partial void OnskillmodtypeChanging(int value);
    partial void OnskillmodtypeChanged();
    partial void OnskillmodvalueChanging(int value);
    partial void OnskillmodvalueChanged();
    partial void OnslotsChanging(int value);
    partial void OnslotsChanged();
    partial void OnclickeffectChanging(int value);
    partial void OnclickeffectChanged();
    partial void OnspellshieldChanging(int value);
    partial void OnspellshieldChanged();
    partial void OnstrikethroughChanging(int value);
    partial void OnstrikethroughChanged();
    partial void OnstunresistChanging(int value);
    partial void OnstunresistChanged();
    partial void OnIsSummonedChanging(bool value);
    partial void OnIsSummonedChanged();
    partial void OntradeskillsChanging(int value);
    partial void OntradeskillsChanged();
    partial void OnfavorChanging(int value);
    partial void OnfavorChanged();
    partial void OnweightChanging(int value);
    partial void OnweightChanged();
    partial void OnBenefitChanging(byte value);
    partial void OnBenefitChanged();
    partial void OnbooktypeChanging(int value);
    partial void OnbooktypeChanged();
    partial void OnrecastdelayChanging(int value);
    partial void OnrecastdelayChanged();
    partial void OnrecasttypeChanging(int value);
    partial void OnrecasttypeChanged();
    partial void OnguildfavorChanging(int value);
    partial void OnguildfavorChanged();
    partial void OnIsAttuneableChanging(bool value);
    partial void OnIsAttuneableChanged();
    partial void OnnopetChanging(bool value);
    partial void OnnopetChanged();
    partial void OnpointtypeChanging(int value);
    partial void OnpointtypeChanged();
    partial void OnpotionbeltChanging(int value);
    partial void OnpotionbeltChanged();
    partial void OnpotionbeltslotsChanging(int value);
    partial void OnpotionbeltslotsChanged();
    partial void OnstacksizeChanging(int value);
    partial void OnstacksizeChanged();
    partial void OnnotransferChanging(bool value);
    partial void OnnotransferChanged();
    partial void OnstackableChanging(bool value);
    partial void OnstackableChanged();
    partial void OnproceffectChanging(int value);
    partial void OnproceffectChanged();
    partial void OnproctypeChanging(int value);
    partial void OnproctypeChanged();
    partial void Onproclevel2Changing(int value);
    partial void Onproclevel2Changed();
    partial void OnproclevelChanging(int value);
    partial void OnproclevelChanged();
    partial void OnworneffectChanging(int value);
    partial void OnworneffectChanged();
    partial void OnworntypeChanging(int value);
    partial void OnworntypeChanged();
    partial void Onwornlevel2Changing(int value);
    partial void Onwornlevel2Changed();
    partial void OnwornlevelChanging(int value);
    partial void OnwornlevelChanged();
    partial void OnfocustypeChanging(int value);
    partial void OnfocustypeChanged();
    partial void Onfocuslevel2Changing(int value);
    partial void Onfocuslevel2Changed();
    partial void OnfocuslevelChanging(int value);
    partial void OnfocuslevelChanged();
    partial void OnscrolleffectChanging(int value);
    partial void OnscrolleffectChanged();
    partial void OnscrolltypeChanging(int value);
    partial void OnscrolltypeChanged();
    partial void Onscrolllevel2Changing(int value);
    partial void Onscrolllevel2Changed();
    partial void OnscrolllevelChanging(int value);
    partial void OnscrolllevelChanged();
    partial void OnlorefileChanging(string value);
    partial void OnlorefileChanged();
    partial void OnsvcorruptionChanging(int value);
    partial void OnsvcorruptionChanged();
    partial void Onaugslot1unk2Changing(int value);
    partial void Onaugslot1unk2Changed();
    partial void Onaugslot2unk2Changing(int value);
    partial void Onaugslot2unk2Changed();
    partial void Onaugslot3unk2Changing(int value);
    partial void Onaugslot3unk2Changed();
    partial void Onaugslot4unk2Changing(int value);
    partial void Onaugslot4unk2Changed();
    partial void Onaugslot5unk2Changing(int value);
    partial void Onaugslot5unk2Changed();
    partial void OnquestitemflagChanging(int value);
    partial void OnquestitemflagChanged();
    partial void Onclickunk5Changing(int value);
    partial void Onclickunk5Changed();
    partial void Onclickunk6Changing(string value);
    partial void Onclickunk6Changed();
    partial void Onclickunk7Changing(int value);
    partial void Onclickunk7Changed();
    partial void Onprocunk1Changing(int value);
    partial void Onprocunk1Changed();
    partial void Onprocunk2Changing(int value);
    partial void Onprocunk2Changed();
    partial void Onprocunk3Changing(int value);
    partial void Onprocunk3Changed();
    partial void Onprocunk4Changing(int value);
    partial void Onprocunk4Changed();
    partial void Onprocunk6Changing(string value);
    partial void Onprocunk6Changed();
    partial void Onprocunk7Changing(int value);
    partial void Onprocunk7Changed();
    partial void Onwornunk1Changing(int value);
    partial void Onwornunk1Changed();
    partial void Onwornunk2Changing(int value);
    partial void Onwornunk2Changed();
    partial void Onwornunk3Changing(int value);
    partial void Onwornunk3Changed();
    partial void Onwornunk4Changing(int value);
    partial void Onwornunk4Changed();
    partial void Onwornunk5Changing(int value);
    partial void Onwornunk5Changed();
    partial void Onwornunk6Changing(string value);
    partial void Onwornunk6Changed();
    partial void Onwornunk7Changing(int value);
    partial void Onwornunk7Changed();
    partial void Onfocusunk1Changing(int value);
    partial void Onfocusunk1Changed();
    partial void Onfocusunk2Changing(int value);
    partial void Onfocusunk2Changed();
    partial void Onfocusunk3Changing(int value);
    partial void Onfocusunk3Changed();
    partial void Onfocusunk4Changing(int value);
    partial void Onfocusunk4Changed();
    partial void Onfocusunk5Changing(int value);
    partial void Onfocusunk5Changed();
    partial void Onfocusunk6Changing(string value);
    partial void Onfocusunk6Changed();
    partial void Onfocusunk7Changing(int value);
    partial void Onfocusunk7Changed();
    partial void Onscrollunk1Changing(int value);
    partial void Onscrollunk1Changed();
    partial void Onscrollunk2Changing(int value);
    partial void Onscrollunk2Changed();
    partial void Onscrollunk3Changing(int value);
    partial void Onscrollunk3Changed();
    partial void Onscrollunk4Changing(int value);
    partial void Onscrollunk4Changed();
    partial void Onscrollunk5Changing(int value);
    partial void Onscrollunk5Changed();
    partial void Onscrollunk6Changing(string value);
    partial void Onscrollunk6Changed();
    partial void Onscrollunk7Changing(int value);
    partial void Onscrollunk7Changed();
    partial void OnpurityChanging(int value);
    partial void OnpurityChanged();
    partial void OnevolvinglevelChanging(int value);
    partial void OnevolvinglevelChanged();
    #endregion
		
		public Item()
		{
			this._InventoryItems = new EntitySet<InventoryItem>(new Action<InventoryItem>(this.attach_InventoryItems), new Action<InventoryItem>(this.detach_InventoryItems));
			this._StartingItems = new EntitySet<StartingItem>(new Action<StartingItem>(this.attach_StartingItems), new Action<StartingItem>(this.detach_StartingItems));
			this._LootDrops = new EntitySet<LootDrop>(new Action<LootDrop>(this.attach_LootDrops), new Action<LootDrop>(this.detach_LootDrops));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemID", DbType="Int NOT NULL", IsPrimaryKey=true, IsDbGenerated=true)]
		public uint ItemID
		{
			get
			{
				return this._ItemID;
			}
			set
			{
				if ((this._ItemID != value))
				{
					this.OnItemIDChanging(value);
					this.SendPropertyChanging();
					this._ItemID = value;
					this.SendPropertyChanged("ItemID");
					this.OnItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinStatus", DbType="TinyInt NOT NULL")]
		public byte MinStatus
		{
			get
			{
				return this._MinStatus;
			}
			set
			{
				if ((this._MinStatus != value))
				{
					this.OnMinStatusChanging(value);
					this.SendPropertyChanging();
					this._MinStatus = value;
					this.SendPropertyChanged("MinStatus");
					this.OnMinStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChaBonus", DbType="SmallInt NOT NULL")]
		public short ChaBonus
		{
			get
			{
				return this._ChaBonus;
			}
			set
			{
				if ((this._ChaBonus != value))
				{
					this.OnChaBonusChanging(value);
					this.SendPropertyChanging();
					this._ChaBonus = value;
					this.SendPropertyChanged("ChaBonus");
					this.OnChaBonusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DexBonus", DbType="SmallInt NOT NULL")]
		public short DexBonus
		{
			get
			{
				return this._DexBonus;
			}
			set
			{
				if ((this._DexBonus != value))
				{
					this.OnDexBonusChanging(value);
					this.SendPropertyChanging();
					this._DexBonus = value;
					this.SendPropertyChanged("DexBonus");
					this.OnDexBonusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IntBonus", DbType="SmallInt NOT NULL")]
		public short IntBonus
		{
			get
			{
				return this._IntBonus;
			}
			set
			{
				if ((this._IntBonus != value))
				{
					this.OnIntBonusChanging(value);
					this.SendPropertyChanging();
					this._IntBonus = value;
					this.SendPropertyChanged("IntBonus");
					this.OnIntBonusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WisBonus", DbType="SmallInt NOT NULL")]
		public short WisBonus
		{
			get
			{
				return this._WisBonus;
			}
			set
			{
				if ((this._WisBonus != value))
				{
					this.OnWisBonusChanging(value);
					this.SendPropertyChanging();
					this._WisBonus = value;
					this.SendPropertyChanged("WisBonus");
					this.OnWisBonusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AgiBonus", DbType="SmallInt NOT NULL")]
		public short AgiBonus
		{
			get
			{
				return this._AgiBonus;
			}
			set
			{
				if ((this._AgiBonus != value))
				{
					this.OnAgiBonusChanging(value);
					this.SendPropertyChanging();
					this._AgiBonus = value;
					this.SendPropertyChanged("AgiBonus");
					this.OnAgiBonusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StaBonus", DbType="SmallInt NOT NULL")]
		public short StaBonus
		{
			get
			{
				return this._StaBonus;
			}
			set
			{
				if ((this._StaBonus != value))
				{
					this.OnStaBonusChanging(value);
					this.SendPropertyChanging();
					this._StaBonus = value;
					this.SendPropertyChanged("StaBonus");
					this.OnStaBonusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StrBonus", DbType="SmallInt NOT NULL")]
		public short StrBonus
		{
			get
			{
				return this._StrBonus;
			}
			set
			{
				if ((this._StrBonus != value))
				{
					this.OnStrBonusChanging(value);
					this.SendPropertyChanging();
					this._StrBonus = value;
					this.SendPropertyChanged("StrBonus");
					this.OnStrBonusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttackBonus", DbType="SmallInt NOT NULL")]
		public short AttackBonus
		{
			get
			{
				return this._AttackBonus;
			}
			set
			{
				if ((this._AttackBonus != value))
				{
					this.OnAttackBonusChanging(value);
					this.SendPropertyChanging();
					this._AttackBonus = value;
					this.SendPropertyChanged("AttackBonus");
					this.OnAttackBonusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ACBonus", DbType="SmallInt NOT NULL")]
		public short ACBonus
		{
			get
			{
				return this._ACBonus;
			}
			set
			{
				if ((this._ACBonus != value))
				{
					this.OnACBonusChanging(value);
					this.SendPropertyChanging();
					this._ACBonus = value;
					this.SendPropertyChanged("ACBonus");
					this.OnACBonusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Accuracy", DbType="SmallInt NOT NULL")]
		public short Accuracy
		{
			get
			{
				return this._Accuracy;
			}
			set
			{
				if ((this._Accuracy != value))
				{
					this.OnAccuracyChanging(value);
					this.SendPropertyChanging();
					this._Accuracy = value;
					this.SendPropertyChanged("Accuracy");
					this.OnAccuracyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsArtifact", DbType="Bit NOT NULL")]
		public bool IsArtifact
		{
			get
			{
				return this._IsArtifact;
			}
			set
			{
				if ((this._IsArtifact != value))
				{
					this.OnIsArtifactChanging(value);
					this.SendPropertyChanging();
					this._IsArtifact = value;
					this.SendPropertyChanged("IsArtifact");
					this.OnIsArtifactChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AugRestrict", DbType="Int NOT NULL")]
		public int AugRestrict
		{
			get
			{
				return this._AugRestrict;
			}
			set
			{
				if ((this._AugRestrict != value))
				{
					this.OnAugRestrictChanging(value);
					this.SendPropertyChanging();
					this._AugRestrict = value;
					this.SendPropertyChanged("AugRestrict");
					this.OnAugRestrictChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AugSlot1Type", DbType="TinyInt NOT NULL")]
		public byte AugSlot1Type
		{
			get
			{
				return this._AugSlot1Type;
			}
			set
			{
				if ((this._AugSlot1Type != value))
				{
					this.OnAugSlot1TypeChanging(value);
					this.SendPropertyChanging();
					this._AugSlot1Type = value;
					this.SendPropertyChanged("AugSlot1Type");
					this.OnAugSlot1TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AugSlot1Vis", DbType="TinyInt NOT NULL")]
		public byte AugSlot1Vis
		{
			get
			{
				return this._AugSlot1Vis;
			}
			set
			{
				if ((this._AugSlot1Vis != value))
				{
					this.OnAugSlot1VisChanging(value);
					this.SendPropertyChanging();
					this._AugSlot1Vis = value;
					this.SendPropertyChanged("AugSlot1Vis");
					this.OnAugSlot1VisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AugSlot2Type", DbType="TinyInt NOT NULL")]
		public byte AugSlot2Type
		{
			get
			{
				return this._AugSlot2Type;
			}
			set
			{
				if ((this._AugSlot2Type != value))
				{
					this.OnAugSlot2TypeChanging(value);
					this.SendPropertyChanging();
					this._AugSlot2Type = value;
					this.SendPropertyChanged("AugSlot2Type");
					this.OnAugSlot2TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AugSlot2Vis", DbType="TinyInt NOT NULL")]
		public byte AugSlot2Vis
		{
			get
			{
				return this._AugSlot2Vis;
			}
			set
			{
				if ((this._AugSlot2Vis != value))
				{
					this.OnAugSlot2VisChanging(value);
					this.SendPropertyChanging();
					this._AugSlot2Vis = value;
					this.SendPropertyChanged("AugSlot2Vis");
					this.OnAugSlot2VisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AugSlot3Type", DbType="TinyInt NOT NULL")]
		public byte AugSlot3Type
		{
			get
			{
				return this._AugSlot3Type;
			}
			set
			{
				if ((this._AugSlot3Type != value))
				{
					this.OnAugSlot3TypeChanging(value);
					this.SendPropertyChanging();
					this._AugSlot3Type = value;
					this.SendPropertyChanged("AugSlot3Type");
					this.OnAugSlot3TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AugSlot3Vis", DbType="TinyInt NOT NULL")]
		public byte AugSlot3Vis
		{
			get
			{
				return this._AugSlot3Vis;
			}
			set
			{
				if ((this._AugSlot3Vis != value))
				{
					this.OnAugSlot3VisChanging(value);
					this.SendPropertyChanging();
					this._AugSlot3Vis = value;
					this.SendPropertyChanged("AugSlot3Vis");
					this.OnAugSlot3VisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AugSlot4Type", DbType="TinyInt NOT NULL")]
		public byte AugSlot4Type
		{
			get
			{
				return this._AugSlot4Type;
			}
			set
			{
				if ((this._AugSlot4Type != value))
				{
					this.OnAugSlot4TypeChanging(value);
					this.SendPropertyChanging();
					this._AugSlot4Type = value;
					this.SendPropertyChanged("AugSlot4Type");
					this.OnAugSlot4TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AugSlot4Vis", DbType="TinyInt NOT NULL")]
		public byte AugSlot4Vis
		{
			get
			{
				return this._AugSlot4Vis;
			}
			set
			{
				if ((this._AugSlot4Vis != value))
				{
					this.OnAugSlot4VisChanging(value);
					this.SendPropertyChanging();
					this._AugSlot4Vis = value;
					this.SendPropertyChanged("AugSlot4Vis");
					this.OnAugSlot4VisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AugSlot5Type", DbType="TinyInt NOT NULL")]
		public byte AugSlot5Type
		{
			get
			{
				return this._AugSlot5Type;
			}
			set
			{
				if ((this._AugSlot5Type != value))
				{
					this.OnAugSlot5TypeChanging(value);
					this.SendPropertyChanging();
					this._AugSlot5Type = value;
					this.SendPropertyChanged("AugSlot5Type");
					this.OnAugSlot5TypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AugSlot5Vis", DbType="TinyInt NOT NULL")]
		public byte AugSlot5Vis
		{
			get
			{
				return this._AugSlot5Vis;
			}
			set
			{
				if ((this._AugSlot5Vis != value))
				{
					this.OnAugSlot5VisChanging(value);
					this.SendPropertyChanging();
					this._AugSlot5Vis = value;
					this.SendPropertyChanged("AugSlot5Vis");
					this.OnAugSlot5VisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AugType", DbType="Int NOT NULL")]
		public int AugType
		{
			get
			{
				return this._AugType;
			}
			set
			{
				if ((this._AugType != value))
				{
					this.OnAugTypeChanging(value);
					this.SendPropertyChanging();
					this._AugType = value;
					this.SendPropertyChanged("AugType");
					this.OnAugTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Avoidance", DbType="SmallInt NOT NULL")]
		public short Avoidance
		{
			get
			{
				return this._Avoidance;
			}
			set
			{
				if ((this._Avoidance != value))
				{
					this.OnAvoidanceChanging(value);
					this.SendPropertyChanging();
					this._Avoidance = value;
					this.SendPropertyChanged("Avoidance");
					this.OnAvoidanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BagSize", DbType="TinyInt NOT NULL")]
		public byte BagSize
		{
			get
			{
				return this._BagSize;
			}
			set
			{
				if ((this._BagSize != value))
				{
					this.OnBagSizeChanging(value);
					this.SendPropertyChanging();
					this._BagSize = value;
					this.SendPropertyChanged("BagSize");
					this.OnBagSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BagSlots", DbType="TinyInt NOT NULL")]
		public byte BagSlots
		{
			get
			{
				return this._BagSlots;
			}
			set
			{
				if ((this._BagSlots != value))
				{
					this.OnBagSlotsChanging(value);
					this.SendPropertyChanging();
					this._BagSlots = value;
					this.SendPropertyChanged("BagSlots");
					this.OnBagSlotsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BagType", DbType="TinyInt NOT NULL")]
		public byte BagType
		{
			get
			{
				return this._BagType;
			}
			set
			{
				if ((this._BagType != value))
				{
					this.OnBagTypeChanging(value);
					this.SendPropertyChanging();
					this._BagType = value;
					this.SendPropertyChanged("BagType");
					this.OnBagTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BagWeightReduc", DbType="TinyInt NOT NULL")]
		public byte BagWeightReduc
		{
			get
			{
				return this._BagWeightReduc;
			}
			set
			{
				if ((this._BagWeightReduc != value))
				{
					this.OnBagWeightReducChanging(value);
					this.SendPropertyChanging();
					this._BagWeightReduc = value;
					this.SendPropertyChanged("BagWeightReduc");
					this.OnBagWeightReducChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaneDmgBodyAmt", DbType="SmallInt NOT NULL")]
		public short BaneDmgBodyAmt
		{
			get
			{
				return this._BaneDmgBodyAmt;
			}
			set
			{
				if ((this._BaneDmgBodyAmt != value))
				{
					this.OnBaneDmgBodyAmtChanging(value);
					this.SendPropertyChanging();
					this._BaneDmgBodyAmt = value;
					this.SendPropertyChanged("BaneDmgBodyAmt");
					this.OnBaneDmgBodyAmtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaneDmgRaceAmt", DbType="SmallInt NOT NULL")]
		public short BaneDmgRaceAmt
		{
			get
			{
				return this._BaneDmgRaceAmt;
			}
			set
			{
				if ((this._BaneDmgRaceAmt != value))
				{
					this.OnBaneDmgRaceAmtChanging(value);
					this.SendPropertyChanging();
					this._BaneDmgRaceAmt = value;
					this.SendPropertyChanged("BaneDmgRaceAmt");
					this.OnBaneDmgRaceAmtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaneDmgBody", DbType="SmallInt NOT NULL")]
		public short BaneDmgBody
		{
			get
			{
				return this._BaneDmgBody;
			}
			set
			{
				if ((this._BaneDmgBody != value))
				{
					this.OnBaneDmgBodyChanging(value);
					this.SendPropertyChanging();
					this._BaneDmgBody = value;
					this.SendPropertyChanged("BaneDmgBody");
					this.OnBaneDmgBodyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaneDmgRace", DbType="SmallInt NOT NULL")]
		public short BaneDmgRace
		{
			get
			{
				return this._BaneDmgRace;
			}
			set
			{
				if ((this._BaneDmgRace != value))
				{
					this.OnBaneDmgRaceChanging(value);
					this.SendPropertyChanging();
					this._BaneDmgRace = value;
					this.SendPropertyChanged("BaneDmgRace");
					this.OnBaneDmgRaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BardType", DbType="Int NOT NULL")]
		public int BardType
		{
			get
			{
				return this._BardType;
			}
			set
			{
				if ((this._BardType != value))
				{
					this.OnBardTypeChanging(value);
					this.SendPropertyChanging();
					this._BardType = value;
					this.SendPropertyChanged("BardType");
					this.OnBardTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BardValue", DbType="Int NOT NULL")]
		public int BardValue
		{
			get
			{
				return this._BardValue;
			}
			set
			{
				if ((this._BardValue != value))
				{
					this.OnBardValueChanging(value);
					this.SendPropertyChanging();
					this._BardValue = value;
					this.SendPropertyChanged("BardValue");
					this.OnBardValueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Book", DbType="TinyInt NOT NULL")]
		public byte Book
		{
			get
			{
				return this._Book;
			}
			set
			{
				if ((this._Book != value))
				{
					this.OnBookChanging(value);
					this.SendPropertyChanging();
					this._Book = value;
					this.SendPropertyChanged("Book");
					this.OnBookChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectCastTime", DbType="Int NOT NULL")]
		public int EffectCastTime
		{
			get
			{
				return this._EffectCastTime;
			}
			set
			{
				if ((this._EffectCastTime != value))
				{
					this.OnEffectCastTimeChanging(value);
					this.SendPropertyChanging();
					this._EffectCastTime = value;
					this.SendPropertyChanged("EffectCastTime");
					this.OnEffectCastTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClickEffectCastTime", DbType="Int NOT NULL")]
		public int ClickEffectCastTime
		{
			get
			{
				return this._ClickEffectCastTime;
			}
			set
			{
				if ((this._ClickEffectCastTime != value))
				{
					this.OnClickEffectCastTimeChanging(value);
					this.SendPropertyChanging();
					this._ClickEffectCastTime = value;
					this.SendPropertyChanged("ClickEffectCastTime");
					this.OnClickEffectCastTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CharmFile", DbType="VarChar(32) NOT NULL", CanBeNull=false)]
		public string CharmFile
		{
			get
			{
				return this._CharmFile;
			}
			set
			{
				if ((this._CharmFile != value))
				{
					this.OnCharmFileChanging(value);
					this.SendPropertyChanging();
					this._CharmFile = value;
					this.SendPropertyChanged("CharmFile");
					this.OnCharmFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CharmFileID", DbType="Int NOT NULL")]
		public int CharmFileID
		{
			get
			{
				return this._CharmFileID;
			}
			set
			{
				if ((this._CharmFileID != value))
				{
					this.OnCharmFileIDChanging(value);
					this.SendPropertyChanging();
					this._CharmFileID = value;
					this.SendPropertyChanged("CharmFileID");
					this.OnCharmFileIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Classes", DbType="Int NOT NULL")]
		public int Classes
		{
			get
			{
				return this._Classes;
			}
			set
			{
				if ((this._Classes != value))
				{
					this.OnClassesChanging(value);
					this.SendPropertyChanging();
					this._Classes = value;
					this.SendPropertyChanged("Classes");
					this.OnClassesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Color", DbType="BigInt")]
		public System.Nullable<uint> Color
		{
			get
			{
				return this._Color;
			}
			set
			{
				if ((this._Color != value))
				{
					this.OnColorChanging(value);
					this.SendPropertyChanging();
					this._Color = value;
					this.SendPropertyChanged("Color");
					this.OnColorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CombatEffects", DbType="TinyInt NOT NULL")]
		public byte CombatEffects
		{
			get
			{
				return this._CombatEffects;
			}
			set
			{
				if ((this._CombatEffects != value))
				{
					this.OnCombatEffectsChanging(value);
					this.SendPropertyChanging();
					this._CombatEffects = value;
					this.SendPropertyChanged("CombatEffects");
					this.OnCombatEffectsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtraDmgSkill", DbType="Int NOT NULL")]
		public int ExtraDmgSkill
		{
			get
			{
				return this._ExtraDmgSkill;
			}
			set
			{
				if ((this._ExtraDmgSkill != value))
				{
					this.OnExtraDmgSkillChanging(value);
					this.SendPropertyChanging();
					this._ExtraDmgSkill = value;
					this.SendPropertyChanged("ExtraDmgSkill");
					this.OnExtraDmgSkillChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExtraDmgAmt", DbType="Int NOT NULL")]
		public int ExtraDmgAmt
		{
			get
			{
				return this._ExtraDmgAmt;
			}
			set
			{
				if ((this._ExtraDmgAmt != value))
				{
					this.OnExtraDmgAmtChanging(value);
					this.SendPropertyChanging();
					this._ExtraDmgAmt = value;
					this.SendPropertyChanged("ExtraDmgAmt");
					this.OnExtraDmgAmtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Int NOT NULL")]
		public int Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CRBonus", DbType="SmallInt NOT NULL")]
		public short CRBonus
		{
			get
			{
				return this._CRBonus;
			}
			set
			{
				if ((this._CRBonus != value))
				{
					this.OnCRBonusChanging(value);
					this.SendPropertyChanging();
					this._CRBonus = value;
					this.SendPropertyChanged("CRBonus");
					this.OnCRBonusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DRBonus", DbType="SmallInt NOT NULL")]
		public short DRBonus
		{
			get
			{
				return this._DRBonus;
			}
			set
			{
				if ((this._DRBonus != value))
				{
					this.OnDRBonusChanging(value);
					this.SendPropertyChanging();
					this._DRBonus = value;
					this.SendPropertyChanged("DRBonus");
					this.OnDRBonusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FRBonus", DbType="SmallInt NOT NULL")]
		public short FRBonus
		{
			get
			{
				return this._FRBonus;
			}
			set
			{
				if ((this._FRBonus != value))
				{
					this.OnFRBonusChanging(value);
					this.SendPropertyChanging();
					this._FRBonus = value;
					this.SendPropertyChanged("FRBonus");
					this.OnFRBonusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MRBonus", DbType="SmallInt NOT NULL")]
		public short MRBonus
		{
			get
			{
				return this._MRBonus;
			}
			set
			{
				if ((this._MRBonus != value))
				{
					this.OnMRBonusChanging(value);
					this.SendPropertyChanging();
					this._MRBonus = value;
					this.SendPropertyChanged("MRBonus");
					this.OnMRBonusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PRBonus", DbType="SmallInt NOT NULL")]
		public short PRBonus
		{
			get
			{
				return this._PRBonus;
			}
			set
			{
				if ((this._PRBonus != value))
				{
					this.OnPRBonusChanging(value);
					this.SendPropertyChanging();
					this._PRBonus = value;
					this.SendPropertyChanged("PRBonus");
					this.OnPRBonusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Damage", DbType="SmallInt NOT NULL")]
		public short Damage
		{
			get
			{
				return this._Damage;
			}
			set
			{
				if ((this._Damage != value))
				{
					this.OnDamageChanging(value);
					this.SendPropertyChanging();
					this._Damage = value;
					this.SendPropertyChanged("Damage");
					this.OnDamageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DamageShield", DbType="SmallInt NOT NULL")]
		public short DamageShield
		{
			get
			{
				return this._DamageShield;
			}
			set
			{
				if ((this._DamageShield != value))
				{
					this.OnDamageShieldChanging(value);
					this.SendPropertyChanging();
					this._DamageShield = value;
					this.SendPropertyChanged("DamageShield");
					this.OnDamageShieldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deity", DbType="Int NOT NULL")]
		public int Deity
		{
			get
			{
				return this._Deity;
			}
			set
			{
				if ((this._Deity != value))
				{
					this.OnDeityChanging(value);
					this.SendPropertyChanging();
					this._Deity = value;
					this.SendPropertyChanged("Deity");
					this.OnDeityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Delay", DbType="Int NOT NULL")]
		public int Delay
		{
			get
			{
				return this._Delay;
			}
			set
			{
				if ((this._Delay != value))
				{
					this.OnDelayChanging(value);
					this.SendPropertyChanging();
					this._Delay = value;
					this.SendPropertyChanged("Delay");
					this.OnDelayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AugDistiller", DbType="Int NOT NULL")]
		public int AugDistiller
		{
			get
			{
				return this._AugDistiller;
			}
			set
			{
				if ((this._AugDistiller != value))
				{
					this.OnAugDistillerChanging(value);
					this.SendPropertyChanging();
					this._AugDistiller = value;
					this.SendPropertyChanged("AugDistiller");
					this.OnAugDistillerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DotShielding", DbType="Int NOT NULL")]
		public int DotShielding
		{
			get
			{
				return this._DotShielding;
			}
			set
			{
				if ((this._DotShielding != value))
				{
					this.OnDotShieldingChanging(value);
					this.SendPropertyChanging();
					this._DotShielding = value;
					this.SendPropertyChanged("DotShielding");
					this.OnDotShieldingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClickType", DbType="Int NOT NULL")]
		public int ClickType
		{
			get
			{
				return this._ClickType;
			}
			set
			{
				if ((this._ClickType != value))
				{
					this.OnClickTypeChanging(value);
					this.SendPropertyChanging();
					this._ClickType = value;
					this.SendPropertyChanged("ClickType");
					this.OnClickTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClickLevelReq", DbType="SmallInt NOT NULL")]
		public short ClickLevelReq
		{
			get
			{
				return this._ClickLevelReq;
			}
			set
			{
				if ((this._ClickLevelReq != value))
				{
					this.OnClickLevelReqChanging(value);
					this.SendPropertyChanging();
					this._ClickLevelReq = value;
					this.SendPropertyChanged("ClickLevelReq");
					this.OnClickLevelReqChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClickLevelMax", DbType="SmallInt NOT NULL")]
		public short ClickLevelMax
		{
			get
			{
				return this._ClickLevelMax;
			}
			set
			{
				if ((this._ClickLevelMax != value))
				{
					this.OnClickLevelMaxChanging(value);
					this.SendPropertyChanging();
					this._ClickLevelMax = value;
					this.SendPropertyChanged("ClickLevelMax");
					this.OnClickLevelMaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ElemDmgType", DbType="TinyInt NOT NULL")]
		public byte ElemDmgType
		{
			get
			{
				return this._ElemDmgType;
			}
			set
			{
				if ((this._ElemDmgType != value))
				{
					this.OnElemDmgTypeChanging(value);
					this.SendPropertyChanging();
					this._ElemDmgType = value;
					this.SendPropertyChanged("ElemDmgType");
					this.OnElemDmgTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ElemDmgAmt", DbType="SmallInt NOT NULL")]
		public short ElemDmgAmt
		{
			get
			{
				return this._ElemDmgAmt;
			}
			set
			{
				if ((this._ElemDmgAmt != value))
				{
					this.OnElemDmgAmtChanging(value);
					this.SendPropertyChanging();
					this._ElemDmgAmt = value;
					this.SendPropertyChanged("ElemDmgAmt");
					this.OnElemDmgAmtChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnduranceBonus", DbType="Int NOT NULL")]
		public int EnduranceBonus
		{
			get
			{
				return this._EnduranceBonus;
			}
			set
			{
				if ((this._EnduranceBonus != value))
				{
					this.OnEnduranceBonusChanging(value);
					this.SendPropertyChanging();
					this._EnduranceBonus = value;
					this.SendPropertyChanged("EnduranceBonus");
					this.OnEnduranceBonusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FactionAmt1", DbType="Int NOT NULL")]
		public int FactionAmt1
		{
			get
			{
				return this._FactionAmt1;
			}
			set
			{
				if ((this._FactionAmt1 != value))
				{
					this.OnFactionAmt1Changing(value);
					this.SendPropertyChanging();
					this._FactionAmt1 = value;
					this.SendPropertyChanged("FactionAmt1");
					this.OnFactionAmt1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FactionAmt2", DbType="Int NOT NULL")]
		public int FactionAmt2
		{
			get
			{
				return this._FactionAmt2;
			}
			set
			{
				if ((this._FactionAmt2 != value))
				{
					this.OnFactionAmt2Changing(value);
					this.SendPropertyChanging();
					this._FactionAmt2 = value;
					this.SendPropertyChanged("FactionAmt2");
					this.OnFactionAmt2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FactionAmt3", DbType="Int NOT NULL")]
		public int FactionAmt3
		{
			get
			{
				return this._FactionAmt3;
			}
			set
			{
				if ((this._FactionAmt3 != value))
				{
					this.OnFactionAmt3Changing(value);
					this.SendPropertyChanging();
					this._FactionAmt3 = value;
					this.SendPropertyChanged("FactionAmt3");
					this.OnFactionAmt3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FactionAmt4", DbType="Int NOT NULL")]
		public int FactionAmt4
		{
			get
			{
				return this._FactionAmt4;
			}
			set
			{
				if ((this._FactionAmt4 != value))
				{
					this.OnFactionAmt4Changing(value);
					this.SendPropertyChanging();
					this._FactionAmt4 = value;
					this.SendPropertyChanged("FactionAmt4");
					this.OnFactionAmt4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FactionMod1", DbType="Int NOT NULL")]
		public int FactionMod1
		{
			get
			{
				return this._FactionMod1;
			}
			set
			{
				if ((this._FactionMod1 != value))
				{
					this.OnFactionMod1Changing(value);
					this.SendPropertyChanging();
					this._FactionMod1 = value;
					this.SendPropertyChanged("FactionMod1");
					this.OnFactionMod1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FactionMod2", DbType="Int NOT NULL")]
		public int FactionMod2
		{
			get
			{
				return this._FactionMod2;
			}
			set
			{
				if ((this._FactionMod2 != value))
				{
					this.OnFactionMod2Changing(value);
					this.SendPropertyChanging();
					this._FactionMod2 = value;
					this.SendPropertyChanged("FactionMod2");
					this.OnFactionMod2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FactionMod3", DbType="Int NOT NULL")]
		public int FactionMod3
		{
			get
			{
				return this._FactionMod3;
			}
			set
			{
				if ((this._FactionMod3 != value))
				{
					this.OnFactionMod3Changing(value);
					this.SendPropertyChanging();
					this._FactionMod3 = value;
					this.SendPropertyChanged("FactionMod3");
					this.OnFactionMod3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FactionMod4", DbType="Int NOT NULL")]
		public int FactionMod4
		{
			get
			{
				return this._FactionMod4;
			}
			set
			{
				if ((this._FactionMod4 != value))
				{
					this.OnFactionMod4Changing(value);
					this.SendPropertyChanging();
					this._FactionMod4 = value;
					this.SendPropertyChanged("FactionMod4");
					this.OnFactionMod4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookName", DbType="VarChar(32) NOT NULL", CanBeNull=false)]
		public string BookFileName
		{
			get
			{
				return this._BookName;
			}
			set
			{
				if ((this._BookName != value))
				{
					this.OnBookFileNameChanging(value);
					this.SendPropertyChanging();
					this._BookName = value;
					this.SendPropertyChanged("BookFileName");
					this.OnBookFileNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FocusEffectSpellID", DbType="Int NOT NULL")]
		public int FocusEffectSpellID
		{
			get
			{
				return this._FocusEffectSpellID;
			}
			set
			{
				if ((this._FocusEffectSpellID != value))
				{
					this.OnFocusEffectSpellIDChanging(value);
					this.SendPropertyChanging();
					this._FocusEffectSpellID = value;
					this.SendPropertyChanged("FocusEffectSpellID");
					this.OnFocusEffectSpellIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FVNoDrop", DbType="Bit NOT NULL")]
		public bool FVNoDrop
		{
			get
			{
				return this._FVNoDrop;
			}
			set
			{
				if ((this._FVNoDrop != value))
				{
					this.OnFVNoDropChanging(value);
					this.SendPropertyChanging();
					this._FVNoDrop = value;
					this.SendPropertyChanged("FVNoDrop");
					this.OnFVNoDropChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HastePct", DbType="TinyInt NOT NULL")]
		public byte HastePct
		{
			get
			{
				return this._HastePct;
			}
			set
			{
				if ((this._HastePct != value))
				{
					this.OnHastePctChanging(value);
					this.SendPropertyChanging();
					this._HastePct = value;
					this.SendPropertyChanged("HastePct");
					this.OnHastePctChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HPBonus", DbType="Int NOT NULL")]
		public int HPBonus
		{
			get
			{
				return this._HPBonus;
			}
			set
			{
				if ((this._HPBonus != value))
				{
					this.OnHPBonusChanging(value);
					this.SendPropertyChanging();
					this._HPBonus = value;
					this.SendPropertyChanged("HPBonus");
					this.OnHPBonusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Regen", DbType="Int NOT NULL")]
		public int Regen
		{
			get
			{
				return this._Regen;
			}
			set
			{
				if ((this._Regen != value))
				{
					this.OnRegenChanging(value);
					this.SendPropertyChanging();
					this._Regen = value;
					this.SendPropertyChanged("Regen");
					this.OnRegenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Icon", DbType="Int NOT NULL")]
		public int Icon
		{
			get
			{
				return this._Icon;
			}
			set
			{
				if ((this._Icon != value))
				{
					this.OnIconChanging(value);
					this.SendPropertyChanging();
					this._Icon = value;
					this.SendPropertyChanged("Icon");
					this.OnIconChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDFile", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string IDFile
		{
			get
			{
				return this._IDFile;
			}
			set
			{
				if ((this._IDFile != value))
				{
					this.OnIDFileChanging(value);
					this.SendPropertyChanging();
					this._IDFile = value;
					this.SendPropertyChanged("IDFile");
					this.OnIDFileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemClass", DbType="TinyInt NOT NULL")]
		public byte ItemClass
		{
			get
			{
				return this._ItemClass;
			}
			set
			{
				if ((this._ItemClass != value))
				{
					this.OnItemClassChanging(value);
					this.SendPropertyChanging();
					this._ItemClass = value;
					this.SendPropertyChanged("ItemClass");
					this.OnItemClassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemType", DbType="TinyInt NOT NULL")]
		public byte ItemType
		{
			get
			{
				return this._ItemType;
			}
			set
			{
				if ((this._ItemType != value))
				{
					this.OnItemTypeChanging(value);
					this.SendPropertyChanging();
					this._ItemType = value;
					this.SendPropertyChanged("ItemType");
					this.OnItemTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LdonPrice", DbType="Int NOT NULL")]
		public int LdonPrice
		{
			get
			{
				return this._LdonPrice;
			}
			set
			{
				if ((this._LdonPrice != value))
				{
					this.OnLdonPriceChanging(value);
					this.SendPropertyChanging();
					this._LdonPrice = value;
					this.SendPropertyChanged("LdonPrice");
					this.OnLdonPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LdonTheme", DbType="Int NOT NULL")]
		public int LdonTheme
		{
			get
			{
				return this._LdonTheme;
			}
			set
			{
				if ((this._LdonTheme != value))
				{
					this.OnLdonThemeChanging(value);
					this.SendPropertyChanging();
					this._LdonTheme = value;
					this.SendPropertyChanged("LdonTheme");
					this.OnLdonThemeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ldonsold", DbType="Int NOT NULL")]
		public int Ldonsold
		{
			get
			{
				return this._Ldonsold;
			}
			set
			{
				if ((this._Ldonsold != value))
				{
					this.OnLdonsoldChanging(value);
					this.SendPropertyChanging();
					this._Ldonsold = value;
					this.SendPropertyChanged("Ldonsold");
					this.OnLdonsoldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Light", DbType="TinyInt NOT NULL")]
		public byte Light
		{
			get
			{
				return this._Light;
			}
			set
			{
				if ((this._Light != value))
				{
					this.OnLightChanging(value);
					this.SendPropertyChanging();
					this._Light = value;
					this.SendPropertyChanged("Light");
					this.OnLightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Lore", DbType="VarChar(80) NOT NULL", CanBeNull=false)]
		public string Lore
		{
			get
			{
				return this._Lore;
			}
			set
			{
				if ((this._Lore != value))
				{
					this.OnLoreChanging(value);
					this.SendPropertyChanging();
					this._Lore = value;
					this.SendPropertyChanged("Lore");
					this.OnLoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoreGroup", DbType="Int NOT NULL")]
		public int LoreGroup
		{
			get
			{
				return this._LoreGroup;
			}
			set
			{
				if ((this._LoreGroup != value))
				{
					this.OnLoreGroupChanging(value);
					this.SendPropertyChanging();
					this._LoreGroup = value;
					this.SendPropertyChanged("LoreGroup");
					this.OnLoreGroupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Magic", DbType="Bit NOT NULL")]
		public bool IsMagic
		{
			get
			{
				return this._Magic;
			}
			set
			{
				if ((this._Magic != value))
				{
					this.OnIsMagicChanging(value);
					this.SendPropertyChanging();
					this._Magic = value;
					this.SendPropertyChanged("IsMagic");
					this.OnIsMagicChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManaBonus", DbType="Int NOT NULL")]
		public int ManaBonus
		{
			get
			{
				return this._ManaBonus;
			}
			set
			{
				if ((this._ManaBonus != value))
				{
					this.OnManaBonusChanging(value);
					this.SendPropertyChanging();
					this._ManaBonus = value;
					this.SendPropertyChanged("ManaBonus");
					this.OnManaBonusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ManaRegen", DbType="Int NOT NULL")]
		public int ManaRegen
		{
			get
			{
				return this._ManaRegen;
			}
			set
			{
				if ((this._ManaRegen != value))
				{
					this.OnManaRegenChanging(value);
					this.SendPropertyChanging();
					this._ManaRegen = value;
					this.SendPropertyChanged("ManaRegen");
					this.OnManaRegenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnduranceRegen", DbType="Int NOT NULL")]
		public int EnduranceRegen
		{
			get
			{
				return this._EnduranceRegen;
			}
			set
			{
				if ((this._EnduranceRegen != value))
				{
					this.OnEnduranceRegenChanging(value);
					this.SendPropertyChanging();
					this._EnduranceRegen = value;
					this.SendPropertyChanged("EnduranceRegen");
					this.OnEnduranceRegenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Material", DbType="Int NOT NULL")]
		public int Material
		{
			get
			{
				return this._Material;
			}
			set
			{
				if ((this._Material != value))
				{
					this.OnMaterialChanging(value);
					this.SendPropertyChanging();
					this._Material = value;
					this.SendPropertyChanged("Material");
					this.OnMaterialChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxCharges", DbType="SmallInt NOT NULL")]
		public short MaxCharges
		{
			get
			{
				return this._MaxCharges;
			}
			set
			{
				if ((this._MaxCharges != value))
				{
					this.OnMaxChargesChanging(value);
					this.SendPropertyChanging();
					this._MaxCharges = value;
					this.SendPropertyChanged("MaxCharges");
					this.OnMaxChargesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoDrop", DbType="TinyInt NOT NULL")]
		public byte NoDrop
		{
			get
			{
				return this._NoDrop;
			}
			set
			{
				if ((this._NoDrop != value))
				{
					this.OnNoDropChanging(value);
					this.SendPropertyChanging();
					this._NoDrop = value;
					this.SendPropertyChanged("NoDrop");
					this.OnNoDropChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoRent", DbType="TinyInt NOT NULL")]
		public byte NoRent
		{
			get
			{
				return this._NoRent;
			}
			set
			{
				if ((this._NoRent != value))
				{
					this.OnNoRentChanging(value);
					this.SendPropertyChanging();
					this._NoRent = value;
					this.SendPropertyChanged("NoRent");
					this.OnNoRentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PendingLoreFlag", DbType="Bit NOT NULL")]
		public bool HasPendingLoreFlag
		{
			get
			{
				return this._PendingLoreFlag;
			}
			set
			{
				if ((this._PendingLoreFlag != value))
				{
					this.OnHasPendingLoreFlagChanging(value);
					this.SendPropertyChanging();
					this._PendingLoreFlag = value;
					this.SendPropertyChanged("HasPendingLoreFlag");
					this.OnHasPendingLoreFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ProcRate", DbType="Int NOT NULL")]
		public int ProcRate
		{
			get
			{
				return this._ProcRate;
			}
			set
			{
				if ((this._ProcRate != value))
				{
					this.OnProcRateChanging(value);
					this.SendPropertyChanging();
					this._ProcRate = value;
					this.SendPropertyChanged("ProcRate");
					this.OnProcRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Races", DbType="Int NOT NULL")]
		public int Races
		{
			get
			{
				return this._Races;
			}
			set
			{
				if ((this._Races != value))
				{
					this.OnRacesChanging(value);
					this.SendPropertyChanging();
					this._Races = value;
					this.SendPropertyChanged("Races");
					this.OnRacesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Range", DbType="Int NOT NULL")]
		public int Range
		{
			get
			{
				return this._Range;
			}
			set
			{
				if ((this._Range != value))
				{
					this.OnRangeChanging(value);
					this.SendPropertyChanging();
					this._Range = value;
					this.SendPropertyChanged("Range");
					this.OnRangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecLevel", DbType="Int NOT NULL")]
		public int RecLevel
		{
			get
			{
				return this._RecLevel;
			}
			set
			{
				if ((this._RecLevel != value))
				{
					this.OnRecLevelChanging(value);
					this.SendPropertyChanging();
					this._RecLevel = value;
					this.SendPropertyChanged("RecLevel");
					this.OnRecLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecSkill", DbType="Int NOT NULL")]
		public int RecSkill
		{
			get
			{
				return this._RecSkill;
			}
			set
			{
				if ((this._RecSkill != value))
				{
					this.OnRecSkillChanging(value);
					this.SendPropertyChanging();
					this._RecSkill = value;
					this.SendPropertyChanged("RecSkill");
					this.OnRecSkillChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReqLevel", DbType="Int NOT NULL")]
		public int ReqLevel
		{
			get
			{
				return this._ReqLevel;
			}
			set
			{
				if ((this._ReqLevel != value))
				{
					this.OnReqLevelChanging(value);
					this.SendPropertyChanging();
					this._ReqLevel = value;
					this.SendPropertyChanged("ReqLevel");
					this.OnReqLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SellRate", DbType="Float NOT NULL")]
		public double SellRate
		{
			get
			{
				return this._SellRate;
			}
			set
			{
				if ((this._SellRate != value))
				{
					this.OnSellRateChanging(value);
					this.SendPropertyChanging();
					this._SellRate = value;
					this.SendPropertyChanged("SellRate");
					this.OnSellRateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Shielding", DbType="Int NOT NULL")]
		public int Shielding
		{
			get
			{
				return this._Shielding;
			}
			set
			{
				if ((this._Shielding != value))
				{
					this.OnShieldingChanging(value);
					this.SendPropertyChanging();
					this._Shielding = value;
					this.SendPropertyChanged("Shielding");
					this.OnShieldingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Size", DbType="TinyInt NOT NULL")]
		public byte Size
		{
			get
			{
				return this._Size;
			}
			set
			{
				if ((this._Size != value))
				{
					this.OnSizeChanging(value);
					this.SendPropertyChanging();
					this._Size = value;
					this.SendPropertyChanged("Size");
					this.OnSizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_skillmodtype", DbType="Int NOT NULL")]
		public int skillmodtype
		{
			get
			{
				return this._skillmodtype;
			}
			set
			{
				if ((this._skillmodtype != value))
				{
					this.OnskillmodtypeChanging(value);
					this.SendPropertyChanging();
					this._skillmodtype = value;
					this.SendPropertyChanged("skillmodtype");
					this.OnskillmodtypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_skillmodvalue", DbType="Int NOT NULL")]
		public int skillmodvalue
		{
			get
			{
				return this._skillmodvalue;
			}
			set
			{
				if ((this._skillmodvalue != value))
				{
					this.OnskillmodvalueChanging(value);
					this.SendPropertyChanging();
					this._skillmodvalue = value;
					this.SendPropertyChanged("skillmodvalue");
					this.OnskillmodvalueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_slots", DbType="Int NOT NULL")]
		public int slots
		{
			get
			{
				return this._slots;
			}
			set
			{
				if ((this._slots != value))
				{
					this.OnslotsChanging(value);
					this.SendPropertyChanging();
					this._slots = value;
					this.SendPropertyChanged("slots");
					this.OnslotsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_clickeffect", DbType="Int NOT NULL")]
		public int clickeffect
		{
			get
			{
				return this._clickeffect;
			}
			set
			{
				if ((this._clickeffect != value))
				{
					this.OnclickeffectChanging(value);
					this.SendPropertyChanging();
					this._clickeffect = value;
					this.SendPropertyChanged("clickeffect");
					this.OnclickeffectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_spellshield", DbType="Int NOT NULL")]
		public int spellshield
		{
			get
			{
				return this._spellshield;
			}
			set
			{
				if ((this._spellshield != value))
				{
					this.OnspellshieldChanging(value);
					this.SendPropertyChanging();
					this._spellshield = value;
					this.SendPropertyChanged("spellshield");
					this.OnspellshieldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_strikethrough", DbType="Int NOT NULL")]
		public int strikethrough
		{
			get
			{
				return this._strikethrough;
			}
			set
			{
				if ((this._strikethrough != value))
				{
					this.OnstrikethroughChanging(value);
					this.SendPropertyChanging();
					this._strikethrough = value;
					this.SendPropertyChanged("strikethrough");
					this.OnstrikethroughChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stunresist", DbType="Int NOT NULL")]
		public int stunresist
		{
			get
			{
				return this._stunresist;
			}
			set
			{
				if ((this._stunresist != value))
				{
					this.OnstunresistChanging(value);
					this.SendPropertyChanging();
					this._stunresist = value;
					this.SendPropertyChanged("stunresist");
					this.OnstunresistChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_summonedflag", DbType="Bit NOT NULL")]
		public bool IsSummoned
		{
			get
			{
				return this._summonedflag;
			}
			set
			{
				if ((this._summonedflag != value))
				{
					this.OnIsSummonedChanging(value);
					this.SendPropertyChanging();
					this._summonedflag = value;
					this.SendPropertyChanged("IsSummoned");
					this.OnIsSummonedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tradeskills", DbType="Int NOT NULL")]
		public int tradeskills
		{
			get
			{
				return this._tradeskills;
			}
			set
			{
				if ((this._tradeskills != value))
				{
					this.OntradeskillsChanging(value);
					this.SendPropertyChanging();
					this._tradeskills = value;
					this.SendPropertyChanged("tradeskills");
					this.OntradeskillsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_favor", DbType="Int NOT NULL")]
		public int favor
		{
			get
			{
				return this._favor;
			}
			set
			{
				if ((this._favor != value))
				{
					this.OnfavorChanging(value);
					this.SendPropertyChanging();
					this._favor = value;
					this.SendPropertyChanged("favor");
					this.OnfavorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_weight", DbType="Int NOT NULL")]
		public int weight
		{
			get
			{
				return this._weight;
			}
			set
			{
				if ((this._weight != value))
				{
					this.OnweightChanging(value);
					this.SendPropertyChanging();
					this._weight = value;
					this.SendPropertyChanged("weight");
					this.OnweightChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_benefitflag", DbType="TinyInt NOT NULL")]
		public byte Benefit
		{
			get
			{
				return this._benefitflag;
			}
			set
			{
				if ((this._benefitflag != value))
				{
					this.OnBenefitChanging(value);
					this.SendPropertyChanging();
					this._benefitflag = value;
					this.SendPropertyChanged("Benefit");
					this.OnBenefitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_booktype", DbType="Int NOT NULL")]
		public int booktype
		{
			get
			{
				return this._booktype;
			}
			set
			{
				if ((this._booktype != value))
				{
					this.OnbooktypeChanging(value);
					this.SendPropertyChanging();
					this._booktype = value;
					this.SendPropertyChanged("booktype");
					this.OnbooktypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_recastdelay", DbType="Int NOT NULL")]
		public int recastdelay
		{
			get
			{
				return this._recastdelay;
			}
			set
			{
				if ((this._recastdelay != value))
				{
					this.OnrecastdelayChanging(value);
					this.SendPropertyChanging();
					this._recastdelay = value;
					this.SendPropertyChanged("recastdelay");
					this.OnrecastdelayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_recasttype", DbType="Int NOT NULL")]
		public int recasttype
		{
			get
			{
				return this._recasttype;
			}
			set
			{
				if ((this._recasttype != value))
				{
					this.OnrecasttypeChanging(value);
					this.SendPropertyChanging();
					this._recasttype = value;
					this.SendPropertyChanged("recasttype");
					this.OnrecasttypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_guildfavor", DbType="Int NOT NULL")]
		public int guildfavor
		{
			get
			{
				return this._guildfavor;
			}
			set
			{
				if ((this._guildfavor != value))
				{
					this.OnguildfavorChanging(value);
					this.SendPropertyChanging();
					this._guildfavor = value;
					this.SendPropertyChanged("guildfavor");
					this.OnguildfavorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_attuneable", DbType="Bit NOT NULL")]
		public bool IsAttuneable
		{
			get
			{
				return this._attuneable;
			}
			set
			{
				if ((this._attuneable != value))
				{
					this.OnIsAttuneableChanging(value);
					this.SendPropertyChanging();
					this._attuneable = value;
					this.SendPropertyChanged("IsAttuneable");
					this.OnIsAttuneableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nopet", DbType="Bit NOT NULL")]
		public bool nopet
		{
			get
			{
				return this._nopet;
			}
			set
			{
				if ((this._nopet != value))
				{
					this.OnnopetChanging(value);
					this.SendPropertyChanging();
					this._nopet = value;
					this.SendPropertyChanged("nopet");
					this.OnnopetChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pointtype", DbType="Int NOT NULL")]
		public int pointtype
		{
			get
			{
				return this._pointtype;
			}
			set
			{
				if ((this._pointtype != value))
				{
					this.OnpointtypeChanging(value);
					this.SendPropertyChanging();
					this._pointtype = value;
					this.SendPropertyChanged("pointtype");
					this.OnpointtypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_potionbelt", DbType="Int NOT NULL")]
		public int potionbelt
		{
			get
			{
				return this._potionbelt;
			}
			set
			{
				if ((this._potionbelt != value))
				{
					this.OnpotionbeltChanging(value);
					this.SendPropertyChanging();
					this._potionbelt = value;
					this.SendPropertyChanged("potionbelt");
					this.OnpotionbeltChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_potionbeltslots", DbType="Int NOT NULL")]
		public int potionbeltslots
		{
			get
			{
				return this._potionbeltslots;
			}
			set
			{
				if ((this._potionbeltslots != value))
				{
					this.OnpotionbeltslotsChanging(value);
					this.SendPropertyChanging();
					this._potionbeltslots = value;
					this.SendPropertyChanged("potionbeltslots");
					this.OnpotionbeltslotsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stacksize", DbType="Int NOT NULL")]
		public int stacksize
		{
			get
			{
				return this._stacksize;
			}
			set
			{
				if ((this._stacksize != value))
				{
					this.OnstacksizeChanging(value);
					this.SendPropertyChanging();
					this._stacksize = value;
					this.SendPropertyChanged("stacksize");
					this.OnstacksizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_notransfer", DbType="Bit NOT NULL")]
		public bool notransfer
		{
			get
			{
				return this._notransfer;
			}
			set
			{
				if ((this._notransfer != value))
				{
					this.OnnotransferChanging(value);
					this.SendPropertyChanging();
					this._notransfer = value;
					this.SendPropertyChanged("notransfer");
					this.OnnotransferChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stackable", DbType="Bit NOT NULL")]
		public bool stackable
		{
			get
			{
				return this._stackable;
			}
			set
			{
				if ((this._stackable != value))
				{
					this.OnstackableChanging(value);
					this.SendPropertyChanging();
					this._stackable = value;
					this.SendPropertyChanged("stackable");
					this.OnstackableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_proceffect", DbType="Int NOT NULL")]
		public int proceffect
		{
			get
			{
				return this._proceffect;
			}
			set
			{
				if ((this._proceffect != value))
				{
					this.OnproceffectChanging(value);
					this.SendPropertyChanging();
					this._proceffect = value;
					this.SendPropertyChanged("proceffect");
					this.OnproceffectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_proctype", DbType="Int NOT NULL")]
		public int proctype
		{
			get
			{
				return this._proctype;
			}
			set
			{
				if ((this._proctype != value))
				{
					this.OnproctypeChanging(value);
					this.SendPropertyChanging();
					this._proctype = value;
					this.SendPropertyChanged("proctype");
					this.OnproctypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_proclevel2", DbType="Int NOT NULL")]
		public int proclevel2
		{
			get
			{
				return this._proclevel2;
			}
			set
			{
				if ((this._proclevel2 != value))
				{
					this.Onproclevel2Changing(value);
					this.SendPropertyChanging();
					this._proclevel2 = value;
					this.SendPropertyChanged("proclevel2");
					this.Onproclevel2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_proclevel", DbType="Int NOT NULL")]
		public int proclevel
		{
			get
			{
				return this._proclevel;
			}
			set
			{
				if ((this._proclevel != value))
				{
					this.OnproclevelChanging(value);
					this.SendPropertyChanging();
					this._proclevel = value;
					this.SendPropertyChanged("proclevel");
					this.OnproclevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_worneffect", DbType="Int NOT NULL")]
		public int worneffect
		{
			get
			{
				return this._worneffect;
			}
			set
			{
				if ((this._worneffect != value))
				{
					this.OnworneffectChanging(value);
					this.SendPropertyChanging();
					this._worneffect = value;
					this.SendPropertyChanged("worneffect");
					this.OnworneffectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_worntype", DbType="Int NOT NULL")]
		public int worntype
		{
			get
			{
				return this._worntype;
			}
			set
			{
				if ((this._worntype != value))
				{
					this.OnworntypeChanging(value);
					this.SendPropertyChanging();
					this._worntype = value;
					this.SendPropertyChanged("worntype");
					this.OnworntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_wornlevel2", DbType="Int NOT NULL")]
		public int wornlevel2
		{
			get
			{
				return this._wornlevel2;
			}
			set
			{
				if ((this._wornlevel2 != value))
				{
					this.Onwornlevel2Changing(value);
					this.SendPropertyChanging();
					this._wornlevel2 = value;
					this.SendPropertyChanged("wornlevel2");
					this.Onwornlevel2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_wornlevel", DbType="Int NOT NULL")]
		public int wornlevel
		{
			get
			{
				return this._wornlevel;
			}
			set
			{
				if ((this._wornlevel != value))
				{
					this.OnwornlevelChanging(value);
					this.SendPropertyChanging();
					this._wornlevel = value;
					this.SendPropertyChanged("wornlevel");
					this.OnwornlevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_focustype", DbType="Int NOT NULL")]
		public int focustype
		{
			get
			{
				return this._focustype;
			}
			set
			{
				if ((this._focustype != value))
				{
					this.OnfocustypeChanging(value);
					this.SendPropertyChanging();
					this._focustype = value;
					this.SendPropertyChanged("focustype");
					this.OnfocustypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_focuslevel2", DbType="Int NOT NULL")]
		public int focuslevel2
		{
			get
			{
				return this._focuslevel2;
			}
			set
			{
				if ((this._focuslevel2 != value))
				{
					this.Onfocuslevel2Changing(value);
					this.SendPropertyChanging();
					this._focuslevel2 = value;
					this.SendPropertyChanged("focuslevel2");
					this.Onfocuslevel2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_focuslevel", DbType="Int NOT NULL")]
		public int focuslevel
		{
			get
			{
				return this._focuslevel;
			}
			set
			{
				if ((this._focuslevel != value))
				{
					this.OnfocuslevelChanging(value);
					this.SendPropertyChanging();
					this._focuslevel = value;
					this.SendPropertyChanged("focuslevel");
					this.OnfocuslevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_scrolleffect", DbType="Int NOT NULL")]
		public int scrolleffect
		{
			get
			{
				return this._scrolleffect;
			}
			set
			{
				if ((this._scrolleffect != value))
				{
					this.OnscrolleffectChanging(value);
					this.SendPropertyChanging();
					this._scrolleffect = value;
					this.SendPropertyChanged("scrolleffect");
					this.OnscrolleffectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_scrolltype", DbType="Int NOT NULL")]
		public int scrolltype
		{
			get
			{
				return this._scrolltype;
			}
			set
			{
				if ((this._scrolltype != value))
				{
					this.OnscrolltypeChanging(value);
					this.SendPropertyChanging();
					this._scrolltype = value;
					this.SendPropertyChanged("scrolltype");
					this.OnscrolltypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_scrolllevel2", DbType="Int NOT NULL")]
		public int scrolllevel2
		{
			get
			{
				return this._scrolllevel2;
			}
			set
			{
				if ((this._scrolllevel2 != value))
				{
					this.Onscrolllevel2Changing(value);
					this.SendPropertyChanging();
					this._scrolllevel2 = value;
					this.SendPropertyChanged("scrolllevel2");
					this.Onscrolllevel2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_scrolllevel", DbType="Int NOT NULL")]
		public int scrolllevel
		{
			get
			{
				return this._scrolllevel;
			}
			set
			{
				if ((this._scrolllevel != value))
				{
					this.OnscrolllevelChanging(value);
					this.SendPropertyChanging();
					this._scrolllevel = value;
					this.SendPropertyChanged("scrolllevel");
					this.OnscrolllevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lorefile", DbType="VarChar(32) NOT NULL", CanBeNull=false)]
		public string lorefile
		{
			get
			{
				return this._lorefile;
			}
			set
			{
				if ((this._lorefile != value))
				{
					this.OnlorefileChanging(value);
					this.SendPropertyChanging();
					this._lorefile = value;
					this.SendPropertyChanged("lorefile");
					this.OnlorefileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_svcorruption", DbType="Int NOT NULL")]
		public int svcorruption
		{
			get
			{
				return this._svcorruption;
			}
			set
			{
				if ((this._svcorruption != value))
				{
					this.OnsvcorruptionChanging(value);
					this.SendPropertyChanging();
					this._svcorruption = value;
					this.SendPropertyChanged("svcorruption");
					this.OnsvcorruptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_augslot1unk2", DbType="Int NOT NULL")]
		public int augslot1unk2
		{
			get
			{
				return this._augslot1unk2;
			}
			set
			{
				if ((this._augslot1unk2 != value))
				{
					this.Onaugslot1unk2Changing(value);
					this.SendPropertyChanging();
					this._augslot1unk2 = value;
					this.SendPropertyChanged("augslot1unk2");
					this.Onaugslot1unk2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_augslot2unk2", DbType="Int NOT NULL")]
		public int augslot2unk2
		{
			get
			{
				return this._augslot2unk2;
			}
			set
			{
				if ((this._augslot2unk2 != value))
				{
					this.Onaugslot2unk2Changing(value);
					this.SendPropertyChanging();
					this._augslot2unk2 = value;
					this.SendPropertyChanged("augslot2unk2");
					this.Onaugslot2unk2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_augslot3unk2", DbType="Int NOT NULL")]
		public int augslot3unk2
		{
			get
			{
				return this._augslot3unk2;
			}
			set
			{
				if ((this._augslot3unk2 != value))
				{
					this.Onaugslot3unk2Changing(value);
					this.SendPropertyChanging();
					this._augslot3unk2 = value;
					this.SendPropertyChanged("augslot3unk2");
					this.Onaugslot3unk2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_augslot4unk2", DbType="Int NOT NULL")]
		public int augslot4unk2
		{
			get
			{
				return this._augslot4unk2;
			}
			set
			{
				if ((this._augslot4unk2 != value))
				{
					this.Onaugslot4unk2Changing(value);
					this.SendPropertyChanging();
					this._augslot4unk2 = value;
					this.SendPropertyChanged("augslot4unk2");
					this.Onaugslot4unk2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_augslot5unk2", DbType="Int NOT NULL")]
		public int augslot5unk2
		{
			get
			{
				return this._augslot5unk2;
			}
			set
			{
				if ((this._augslot5unk2 != value))
				{
					this.Onaugslot5unk2Changing(value);
					this.SendPropertyChanging();
					this._augslot5unk2 = value;
					this.SendPropertyChanged("augslot5unk2");
					this.Onaugslot5unk2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_questitemflag", DbType="Int NOT NULL")]
		public int questitemflag
		{
			get
			{
				return this._questitemflag;
			}
			set
			{
				if ((this._questitemflag != value))
				{
					this.OnquestitemflagChanging(value);
					this.SendPropertyChanging();
					this._questitemflag = value;
					this.SendPropertyChanged("questitemflag");
					this.OnquestitemflagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_clickunk5", DbType="Int NOT NULL")]
		public int clickunk5
		{
			get
			{
				return this._clickunk5;
			}
			set
			{
				if ((this._clickunk5 != value))
				{
					this.Onclickunk5Changing(value);
					this.SendPropertyChanging();
					this._clickunk5 = value;
					this.SendPropertyChanged("clickunk5");
					this.Onclickunk5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_clickunk6", DbType="VarChar(32) NOT NULL", CanBeNull=false)]
		public string clickunk6
		{
			get
			{
				return this._clickunk6;
			}
			set
			{
				if ((this._clickunk6 != value))
				{
					this.Onclickunk6Changing(value);
					this.SendPropertyChanging();
					this._clickunk6 = value;
					this.SendPropertyChanged("clickunk6");
					this.Onclickunk6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_clickunk7", DbType="Int NOT NULL")]
		public int clickunk7
		{
			get
			{
				return this._clickunk7;
			}
			set
			{
				if ((this._clickunk7 != value))
				{
					this.Onclickunk7Changing(value);
					this.SendPropertyChanging();
					this._clickunk7 = value;
					this.SendPropertyChanged("clickunk7");
					this.Onclickunk7Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_procunk1", DbType="Int NOT NULL")]
		public int procunk1
		{
			get
			{
				return this._procunk1;
			}
			set
			{
				if ((this._procunk1 != value))
				{
					this.Onprocunk1Changing(value);
					this.SendPropertyChanging();
					this._procunk1 = value;
					this.SendPropertyChanged("procunk1");
					this.Onprocunk1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_procunk2", DbType="Int NOT NULL")]
		public int procunk2
		{
			get
			{
				return this._procunk2;
			}
			set
			{
				if ((this._procunk2 != value))
				{
					this.Onprocunk2Changing(value);
					this.SendPropertyChanging();
					this._procunk2 = value;
					this.SendPropertyChanged("procunk2");
					this.Onprocunk2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_procunk3", DbType="Int NOT NULL")]
		public int procunk3
		{
			get
			{
				return this._procunk3;
			}
			set
			{
				if ((this._procunk3 != value))
				{
					this.Onprocunk3Changing(value);
					this.SendPropertyChanging();
					this._procunk3 = value;
					this.SendPropertyChanged("procunk3");
					this.Onprocunk3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_procunk4", DbType="Int NOT NULL")]
		public int procunk4
		{
			get
			{
				return this._procunk4;
			}
			set
			{
				if ((this._procunk4 != value))
				{
					this.Onprocunk4Changing(value);
					this.SendPropertyChanging();
					this._procunk4 = value;
					this.SendPropertyChanged("procunk4");
					this.Onprocunk4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_procunk6", DbType="VarChar(32) NOT NULL", CanBeNull=false)]
		public string procunk6
		{
			get
			{
				return this._procunk6;
			}
			set
			{
				if ((this._procunk6 != value))
				{
					this.Onprocunk6Changing(value);
					this.SendPropertyChanging();
					this._procunk6 = value;
					this.SendPropertyChanged("procunk6");
					this.Onprocunk6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_procunk7", DbType="Int NOT NULL")]
		public int procunk7
		{
			get
			{
				return this._procunk7;
			}
			set
			{
				if ((this._procunk7 != value))
				{
					this.Onprocunk7Changing(value);
					this.SendPropertyChanging();
					this._procunk7 = value;
					this.SendPropertyChanged("procunk7");
					this.Onprocunk7Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_wornunk1", DbType="Int NOT NULL")]
		public int wornunk1
		{
			get
			{
				return this._wornunk1;
			}
			set
			{
				if ((this._wornunk1 != value))
				{
					this.Onwornunk1Changing(value);
					this.SendPropertyChanging();
					this._wornunk1 = value;
					this.SendPropertyChanged("wornunk1");
					this.Onwornunk1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_wornunk2", DbType="Int NOT NULL")]
		public int wornunk2
		{
			get
			{
				return this._wornunk2;
			}
			set
			{
				if ((this._wornunk2 != value))
				{
					this.Onwornunk2Changing(value);
					this.SendPropertyChanging();
					this._wornunk2 = value;
					this.SendPropertyChanged("wornunk2");
					this.Onwornunk2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_wornunk3", DbType="Int NOT NULL")]
		public int wornunk3
		{
			get
			{
				return this._wornunk3;
			}
			set
			{
				if ((this._wornunk3 != value))
				{
					this.Onwornunk3Changing(value);
					this.SendPropertyChanging();
					this._wornunk3 = value;
					this.SendPropertyChanged("wornunk3");
					this.Onwornunk3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_wornunk4", DbType="Int NOT NULL")]
		public int wornunk4
		{
			get
			{
				return this._wornunk4;
			}
			set
			{
				if ((this._wornunk4 != value))
				{
					this.Onwornunk4Changing(value);
					this.SendPropertyChanging();
					this._wornunk4 = value;
					this.SendPropertyChanged("wornunk4");
					this.Onwornunk4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_wornunk5", DbType="Int NOT NULL")]
		public int wornunk5
		{
			get
			{
				return this._wornunk5;
			}
			set
			{
				if ((this._wornunk5 != value))
				{
					this.Onwornunk5Changing(value);
					this.SendPropertyChanging();
					this._wornunk5 = value;
					this.SendPropertyChanged("wornunk5");
					this.Onwornunk5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_wornunk6", DbType="VarChar(32) NOT NULL", CanBeNull=false)]
		public string wornunk6
		{
			get
			{
				return this._wornunk6;
			}
			set
			{
				if ((this._wornunk6 != value))
				{
					this.Onwornunk6Changing(value);
					this.SendPropertyChanging();
					this._wornunk6 = value;
					this.SendPropertyChanged("wornunk6");
					this.Onwornunk6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_wornunk7", DbType="Int NOT NULL")]
		public int wornunk7
		{
			get
			{
				return this._wornunk7;
			}
			set
			{
				if ((this._wornunk7 != value))
				{
					this.Onwornunk7Changing(value);
					this.SendPropertyChanging();
					this._wornunk7 = value;
					this.SendPropertyChanged("wornunk7");
					this.Onwornunk7Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_focusunk1", DbType="Int NOT NULL")]
		public int focusunk1
		{
			get
			{
				return this._focusunk1;
			}
			set
			{
				if ((this._focusunk1 != value))
				{
					this.Onfocusunk1Changing(value);
					this.SendPropertyChanging();
					this._focusunk1 = value;
					this.SendPropertyChanged("focusunk1");
					this.Onfocusunk1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_focusunk2", DbType="Int NOT NULL")]
		public int focusunk2
		{
			get
			{
				return this._focusunk2;
			}
			set
			{
				if ((this._focusunk2 != value))
				{
					this.Onfocusunk2Changing(value);
					this.SendPropertyChanging();
					this._focusunk2 = value;
					this.SendPropertyChanged("focusunk2");
					this.Onfocusunk2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_focusunk3", DbType="Int NOT NULL")]
		public int focusunk3
		{
			get
			{
				return this._focusunk3;
			}
			set
			{
				if ((this._focusunk3 != value))
				{
					this.Onfocusunk3Changing(value);
					this.SendPropertyChanging();
					this._focusunk3 = value;
					this.SendPropertyChanged("focusunk3");
					this.Onfocusunk3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_focusunk4", DbType="Int NOT NULL")]
		public int focusunk4
		{
			get
			{
				return this._focusunk4;
			}
			set
			{
				if ((this._focusunk4 != value))
				{
					this.Onfocusunk4Changing(value);
					this.SendPropertyChanging();
					this._focusunk4 = value;
					this.SendPropertyChanged("focusunk4");
					this.Onfocusunk4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_focusunk5", DbType="Int NOT NULL")]
		public int focusunk5
		{
			get
			{
				return this._focusunk5;
			}
			set
			{
				if ((this._focusunk5 != value))
				{
					this.Onfocusunk5Changing(value);
					this.SendPropertyChanging();
					this._focusunk5 = value;
					this.SendPropertyChanged("focusunk5");
					this.Onfocusunk5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_focusunk6", DbType="VarChar(32) NOT NULL", CanBeNull=false)]
		public string focusunk6
		{
			get
			{
				return this._focusunk6;
			}
			set
			{
				if ((this._focusunk6 != value))
				{
					this.Onfocusunk6Changing(value);
					this.SendPropertyChanging();
					this._focusunk6 = value;
					this.SendPropertyChanged("focusunk6");
					this.Onfocusunk6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_focusunk7", DbType="Int NOT NULL")]
		public int focusunk7
		{
			get
			{
				return this._focusunk7;
			}
			set
			{
				if ((this._focusunk7 != value))
				{
					this.Onfocusunk7Changing(value);
					this.SendPropertyChanging();
					this._focusunk7 = value;
					this.SendPropertyChanged("focusunk7");
					this.Onfocusunk7Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_scrollunk1", DbType="Int NOT NULL")]
		public int scrollunk1
		{
			get
			{
				return this._scrollunk1;
			}
			set
			{
				if ((this._scrollunk1 != value))
				{
					this.Onscrollunk1Changing(value);
					this.SendPropertyChanging();
					this._scrollunk1 = value;
					this.SendPropertyChanged("scrollunk1");
					this.Onscrollunk1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_scrollunk2", DbType="Int NOT NULL")]
		public int scrollunk2
		{
			get
			{
				return this._scrollunk2;
			}
			set
			{
				if ((this._scrollunk2 != value))
				{
					this.Onscrollunk2Changing(value);
					this.SendPropertyChanging();
					this._scrollunk2 = value;
					this.SendPropertyChanged("scrollunk2");
					this.Onscrollunk2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_scrollunk3", DbType="Int NOT NULL")]
		public int scrollunk3
		{
			get
			{
				return this._scrollunk3;
			}
			set
			{
				if ((this._scrollunk3 != value))
				{
					this.Onscrollunk3Changing(value);
					this.SendPropertyChanging();
					this._scrollunk3 = value;
					this.SendPropertyChanged("scrollunk3");
					this.Onscrollunk3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_scrollunk4", DbType="Int NOT NULL")]
		public int scrollunk4
		{
			get
			{
				return this._scrollunk4;
			}
			set
			{
				if ((this._scrollunk4 != value))
				{
					this.Onscrollunk4Changing(value);
					this.SendPropertyChanging();
					this._scrollunk4 = value;
					this.SendPropertyChanged("scrollunk4");
					this.Onscrollunk4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_scrollunk5", DbType="Int NOT NULL")]
		public int scrollunk5
		{
			get
			{
				return this._scrollunk5;
			}
			set
			{
				if ((this._scrollunk5 != value))
				{
					this.Onscrollunk5Changing(value);
					this.SendPropertyChanging();
					this._scrollunk5 = value;
					this.SendPropertyChanged("scrollunk5");
					this.Onscrollunk5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_scrollunk6", DbType="VarChar(32) NOT NULL", CanBeNull=false)]
		public string scrollunk6
		{
			get
			{
				return this._scrollunk6;
			}
			set
			{
				if ((this._scrollunk6 != value))
				{
					this.Onscrollunk6Changing(value);
					this.SendPropertyChanging();
					this._scrollunk6 = value;
					this.SendPropertyChanged("scrollunk6");
					this.Onscrollunk6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_scrollunk7", DbType="Int NOT NULL")]
		public int scrollunk7
		{
			get
			{
				return this._scrollunk7;
			}
			set
			{
				if ((this._scrollunk7 != value))
				{
					this.Onscrollunk7Changing(value);
					this.SendPropertyChanging();
					this._scrollunk7 = value;
					this.SendPropertyChanged("scrollunk7");
					this.Onscrollunk7Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_purity", DbType="Int NOT NULL")]
		public int purity
		{
			get
			{
				return this._purity;
			}
			set
			{
				if ((this._purity != value))
				{
					this.OnpurityChanging(value);
					this.SendPropertyChanging();
					this._purity = value;
					this.SendPropertyChanged("purity");
					this.OnpurityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_evolvinglevel", DbType="Int NOT NULL")]
		public int evolvinglevel
		{
			get
			{
				return this._evolvinglevel;
			}
			set
			{
				if ((this._evolvinglevel != value))
				{
					this.OnevolvinglevelChanging(value);
					this.SendPropertyChanging();
					this._evolvinglevel = value;
					this.SendPropertyChanged("evolvinglevel");
					this.OnevolvinglevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Item_InventoryItem", Storage="_InventoryItems", ThisKey="ItemID", OtherKey="ItemID")]
		public EntitySet<InventoryItem> InventoryItems
		{
			get
			{
				return this._InventoryItems;
			}
			set
			{
				this._InventoryItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Item_StartingItem", Storage="_StartingItems", ThisKey="ItemID", OtherKey="ItemID")]
		public EntitySet<StartingItem> StartingItems
		{
			get
			{
				return this._StartingItems;
			}
			set
			{
				this._StartingItems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Item_LootDrop", Storage="_LootDrops", ThisKey="ItemID", OtherKey="ItemID")]
		public EntitySet<LootDrop> LootDrops
		{
			get
			{
				return this._LootDrops;
			}
			set
			{
				this._LootDrops.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_InventoryItems(InventoryItem entity)
		{
			this.SendPropertyChanging();
			entity.Item = this;
		}
		
		private void detach_InventoryItems(InventoryItem entity)
		{
			this.SendPropertyChanging();
			entity.Item = null;
		}
		
		private void attach_StartingItems(StartingItem entity)
		{
			this.SendPropertyChanging();
			entity.Item = this;
		}
		
		private void detach_StartingItems(StartingItem entity)
		{
			this.SendPropertyChanging();
			entity.Item = null;
		}
		
		private void attach_LootDrops(LootDrop entity)
		{
			this.SendPropertyChanging();
			entity.Item = this;
		}
		
		private void detach_LootDrops(LootDrop entity)
		{
			this.SendPropertyChanging();
			entity.Item = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Inventory")]
	internal partial class InventoryItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _InventoryID;
		
		private int _CharacterID;
		
		private int _SlotID;
		
		private uint _ItemID;
		
		private System.Nullable<byte> _Charges;
		
		private uint _Color;
		
		private System.Nullable<int> _AugSlot1;
		
		private System.Nullable<int> _AugSlot2;
		
		private System.Nullable<int> _AugSlot3;
		
		private System.Nullable<int> _AugSlot4;
		
		private System.Nullable<int> _AugSlot5;
		
		private EntityRef<Character> _Character;
		
		private EntityRef<Item> _Item;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnInventoryItemIDChanging(int value);
    partial void OnInventoryItemIDChanged();
    partial void OnCharacterIDChanging(int value);
    partial void OnCharacterIDChanged();
    partial void OnSlotIDChanging(int value);
    partial void OnSlotIDChanged();
    partial void OnItemIDChanging(uint value);
    partial void OnItemIDChanged();
    partial void OnChargesChanging(System.Nullable<byte> value);
    partial void OnChargesChanged();
    partial void OnColorChanging(uint value);
    partial void OnColorChanged();
    partial void OnAugSlot1Changing(System.Nullable<int> value);
    partial void OnAugSlot1Changed();
    partial void OnAugSlot2Changing(System.Nullable<int> value);
    partial void OnAugSlot2Changed();
    partial void OnAugSlot3Changing(System.Nullable<int> value);
    partial void OnAugSlot3Changed();
    partial void OnAugSlot4Changing(System.Nullable<int> value);
    partial void OnAugSlot4Changed();
    partial void OnAugSlot5Changing(System.Nullable<int> value);
    partial void OnAugSlot5Changed();
    #endregion
		
		public InventoryItem()
		{
			this._Character = default(EntityRef<Character>);
			this._Item = default(EntityRef<Item>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="InventoryID", Storage="_InventoryID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int InventoryItemID
		{
			get
			{
				return this._InventoryID;
			}
			set
			{
				if ((this._InventoryID != value))
				{
					this.OnInventoryItemIDChanging(value);
					this.SendPropertyChanging();
					this._InventoryID = value;
					this.SendPropertyChanged("InventoryItemID");
					this.OnInventoryItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CharacterID", DbType="Int NOT NULL")]
		public int CharacterID
		{
			get
			{
				return this._CharacterID;
			}
			set
			{
				if ((this._CharacterID != value))
				{
					if (this._Character.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCharacterIDChanging(value);
					this.SendPropertyChanging();
					this._CharacterID = value;
					this.SendPropertyChanged("CharacterID");
					this.OnCharacterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlotID", DbType="Int NOT NULL")]
		public int SlotID
		{
			get
			{
				return this._SlotID;
			}
			set
			{
				if ((this._SlotID != value))
				{
					this.OnSlotIDChanging(value);
					this.SendPropertyChanging();
					this._SlotID = value;
					this.SendPropertyChanged("SlotID");
					this.OnSlotIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemID", DbType="Int NOT NULL")]
		public uint ItemID
		{
			get
			{
				return this._ItemID;
			}
			set
			{
				if ((this._ItemID != value))
				{
					if (this._Item.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemIDChanging(value);
					this.SendPropertyChanging();
					this._ItemID = value;
					this.SendPropertyChanged("ItemID");
					this.OnItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Charges", DbType="TinyInt")]
		public System.Nullable<byte> Charges
		{
			get
			{
				return this._Charges;
			}
			set
			{
				if ((this._Charges != value))
				{
					this.OnChargesChanging(value);
					this.SendPropertyChanging();
					this._Charges = value;
					this.SendPropertyChanged("Charges");
					this.OnChargesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Color", DbType="BigInt NOT NULL")]
		public uint Color
		{
			get
			{
				return this._Color;
			}
			set
			{
				if ((this._Color != value))
				{
					this.OnColorChanging(value);
					this.SendPropertyChanging();
					this._Color = value;
					this.SendPropertyChanged("Color");
					this.OnColorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AugSlot1", DbType="Int")]
		public System.Nullable<int> AugSlot1
		{
			get
			{
				return this._AugSlot1;
			}
			set
			{
				if ((this._AugSlot1 != value))
				{
					this.OnAugSlot1Changing(value);
					this.SendPropertyChanging();
					this._AugSlot1 = value;
					this.SendPropertyChanged("AugSlot1");
					this.OnAugSlot1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AugSlot2", DbType="Int")]
		public System.Nullable<int> AugSlot2
		{
			get
			{
				return this._AugSlot2;
			}
			set
			{
				if ((this._AugSlot2 != value))
				{
					this.OnAugSlot2Changing(value);
					this.SendPropertyChanging();
					this._AugSlot2 = value;
					this.SendPropertyChanged("AugSlot2");
					this.OnAugSlot2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AugSlot3", DbType="Int")]
		public System.Nullable<int> AugSlot3
		{
			get
			{
				return this._AugSlot3;
			}
			set
			{
				if ((this._AugSlot3 != value))
				{
					this.OnAugSlot3Changing(value);
					this.SendPropertyChanging();
					this._AugSlot3 = value;
					this.SendPropertyChanged("AugSlot3");
					this.OnAugSlot3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AugSlot4", DbType="Int")]
		public System.Nullable<int> AugSlot4
		{
			get
			{
				return this._AugSlot4;
			}
			set
			{
				if ((this._AugSlot4 != value))
				{
					this.OnAugSlot4Changing(value);
					this.SendPropertyChanging();
					this._AugSlot4 = value;
					this.SendPropertyChanged("AugSlot4");
					this.OnAugSlot4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AugSlot5", DbType="Int")]
		public System.Nullable<int> AugSlot5
		{
			get
			{
				return this._AugSlot5;
			}
			set
			{
				if ((this._AugSlot5 != value))
				{
					this.OnAugSlot5Changing(value);
					this.SendPropertyChanging();
					this._AugSlot5 = value;
					this.SendPropertyChanged("AugSlot5");
					this.OnAugSlot5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Character_InventoryItem", Storage="_Character", ThisKey="CharacterID", OtherKey="CharacterID", IsForeignKey=true)]
		public Character Character
		{
			get
			{
				return this._Character.Entity;
			}
			set
			{
				Character previousValue = this._Character.Entity;
				if (((previousValue != value) 
							|| (this._Character.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Character.Entity = null;
						previousValue.InventoryItems.Remove(this);
					}
					this._Character.Entity = value;
					if ((value != null))
					{
						value.InventoryItems.Add(this);
						this._CharacterID = value.CharacterID;
					}
					else
					{
						this._CharacterID = default(int);
					}
					this.SendPropertyChanged("Character");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Item_InventoryItem", Storage="_Item", ThisKey="ItemID", OtherKey="ItemID", IsForeignKey=true)]
		public Item Item
		{
			get
			{
				return this._Item.Entity;
			}
			set
			{
				Item previousValue = this._Item.Entity;
				if (((previousValue != value) 
							|| (this._Item.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Item.Entity = null;
						previousValue.InventoryItems.Remove(this);
					}
					this._Item.Entity = value;
					if ((value != null))
					{
						value.InventoryItems.Add(this);
						this._ItemID = value.ItemID;
					}
					else
					{
						this._ItemID = default(uint);
					}
					this.SendPropertyChanged("Item");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.StartingItems")]
	internal partial class StartingItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _StartingItemID;
		
		private short _Race;
		
		private short _Class;
		
		private short _DeityID;
		
		private System.Nullable<short> _ZoneID;
		
		private uint _ItemID;
		
		private byte _ItemCharges;
		
		private bool _GM;
		
		private short _Slot;
		
		private EntityRef<Item> _Item;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStartingItemIDChanging(int value);
    partial void OnStartingItemIDChanged();
    partial void OnRaceChanging(short value);
    partial void OnRaceChanged();
    partial void OnClassChanging(short value);
    partial void OnClassChanged();
    partial void OnDeityIDChanging(short value);
    partial void OnDeityIDChanged();
    partial void OnZoneIDChanging(System.Nullable<short> value);
    partial void OnZoneIDChanged();
    partial void OnItemIDChanging(uint value);
    partial void OnItemIDChanged();
    partial void OnItemChargesChanging(byte value);
    partial void OnItemChargesChanged();
    partial void OnGMChanging(bool value);
    partial void OnGMChanged();
    partial void OnSlotChanging(short value);
    partial void OnSlotChanged();
    #endregion
		
		public StartingItem()
		{
			this._Item = default(EntityRef<Item>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartingItemID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int StartingItemID
		{
			get
			{
				return this._StartingItemID;
			}
			set
			{
				if ((this._StartingItemID != value))
				{
					this.OnStartingItemIDChanging(value);
					this.SendPropertyChanging();
					this._StartingItemID = value;
					this.SendPropertyChanged("StartingItemID");
					this.OnStartingItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Race", DbType="SmallInt NOT NULL")]
		public short Race
		{
			get
			{
				return this._Race;
			}
			set
			{
				if ((this._Race != value))
				{
					this.OnRaceChanging(value);
					this.SendPropertyChanging();
					this._Race = value;
					this.SendPropertyChanged("Race");
					this.OnRaceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Class", DbType="SmallInt NOT NULL")]
		public short Class
		{
			get
			{
				return this._Class;
			}
			set
			{
				if ((this._Class != value))
				{
					this.OnClassChanging(value);
					this.SendPropertyChanging();
					this._Class = value;
					this.SendPropertyChanged("Class");
					this.OnClassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DeityID", DbType="SmallInt NOT NULL")]
		public short DeityID
		{
			get
			{
				return this._DeityID;
			}
			set
			{
				if ((this._DeityID != value))
				{
					this.OnDeityIDChanging(value);
					this.SendPropertyChanging();
					this._DeityID = value;
					this.SendPropertyChanged("DeityID");
					this.OnDeityIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZoneID", DbType="SmallInt")]
		public System.Nullable<short> ZoneID
		{
			get
			{
				return this._ZoneID;
			}
			set
			{
				if ((this._ZoneID != value))
				{
					this.OnZoneIDChanging(value);
					this.SendPropertyChanging();
					this._ZoneID = value;
					this.SendPropertyChanged("ZoneID");
					this.OnZoneIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemID", DbType="Int NOT NULL")]
		public uint ItemID
		{
			get
			{
				return this._ItemID;
			}
			set
			{
				if ((this._ItemID != value))
				{
					if (this._Item.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemIDChanging(value);
					this.SendPropertyChanging();
					this._ItemID = value;
					this.SendPropertyChanged("ItemID");
					this.OnItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemCharges", DbType="TinyInt NOT NULL")]
		public byte ItemCharges
		{
			get
			{
				return this._ItemCharges;
			}
			set
			{
				if ((this._ItemCharges != value))
				{
					this.OnItemChargesChanging(value);
					this.SendPropertyChanging();
					this._ItemCharges = value;
					this.SendPropertyChanged("ItemCharges");
					this.OnItemChargesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GM", DbType="Bit NOT NULL")]
		public bool GM
		{
			get
			{
				return this._GM;
			}
			set
			{
				if ((this._GM != value))
				{
					this.OnGMChanging(value);
					this.SendPropertyChanging();
					this._GM = value;
					this.SendPropertyChanged("GM");
					this.OnGMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Slot", DbType="SmallInt NOT NULL")]
		public short Slot
		{
			get
			{
				return this._Slot;
			}
			set
			{
				if ((this._Slot != value))
				{
					this.OnSlotChanging(value);
					this.SendPropertyChanging();
					this._Slot = value;
					this.SendPropertyChanged("Slot");
					this.OnSlotChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Item_StartingItem", Storage="_Item", ThisKey="ItemID", OtherKey="ItemID", IsForeignKey=true)]
		public Item Item
		{
			get
			{
				return this._Item.Entity;
			}
			set
			{
				Item previousValue = this._Item.Entity;
				if (((previousValue != value) 
							|| (this._Item.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Item.Entity = null;
						previousValue.StartingItems.Remove(this);
					}
					this._Item.Entity = value;
					if ((value != null))
					{
						value.StartingItems.Add(this);
						this._ItemID = value.ItemID;
					}
					else
					{
						this._ItemID = default(uint);
					}
					this.SendPropertyChanged("Item");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Loot")]
	internal partial class Loot : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LootID;
		
		private uint _MinCash;
		
		private uint _MaxCash;
		
		private EntitySet<Npc> _Npcs;
		
		private EntitySet<LootEntry> _LootEntries;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLootIDChanging(int value);
    partial void OnLootIDChanged();
    partial void OnMinCashChanging(uint value);
    partial void OnMinCashChanged();
    partial void OnMaxCashChanging(uint value);
    partial void OnMaxCashChanged();
    #endregion
		
		public Loot()
		{
			this._Npcs = new EntitySet<Npc>(new Action<Npc>(this.attach_Npcs), new Action<Npc>(this.detach_Npcs));
			this._LootEntries = new EntitySet<LootEntry>(new Action<LootEntry>(this.attach_LootEntries), new Action<LootEntry>(this.detach_LootEntries));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LootID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LootID
		{
			get
			{
				return this._LootID;
			}
			set
			{
				if ((this._LootID != value))
				{
					this.OnLootIDChanging(value);
					this.SendPropertyChanging();
					this._LootID = value;
					this.SendPropertyChanged("LootID");
					this.OnLootIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MinCash", DbType="Int NOT NULL")]
		public uint MinCash
		{
			get
			{
				return this._MinCash;
			}
			set
			{
				if ((this._MinCash != value))
				{
					this.OnMinCashChanging(value);
					this.SendPropertyChanging();
					this._MinCash = value;
					this.SendPropertyChanged("MinCash");
					this.OnMinCashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxCash", DbType="Int NOT NULL")]
		public uint MaxCash
		{
			get
			{
				return this._MaxCash;
			}
			set
			{
				if ((this._MaxCash != value))
				{
					this.OnMaxCashChanging(value);
					this.SendPropertyChanging();
					this._MaxCash = value;
					this.SendPropertyChanged("MaxCash");
					this.OnMaxCashChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Loot_Npc", Storage="_Npcs", ThisKey="LootID", OtherKey="LootId")]
		public EntitySet<Npc> Npcs
		{
			get
			{
				return this._Npcs;
			}
			set
			{
				this._Npcs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Loot_LootEntry", Storage="_LootEntries", ThisKey="LootID", OtherKey="LootID")]
		public EntitySet<LootEntry> LootEntries
		{
			get
			{
				return this._LootEntries;
			}
			set
			{
				this._LootEntries.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Npcs(Npc entity)
		{
			this.SendPropertyChanging();
			entity.Loot = this;
		}
		
		private void detach_Npcs(Npc entity)
		{
			this.SendPropertyChanging();
			entity.Loot = null;
		}
		
		private void attach_LootEntries(LootEntry entity)
		{
			this.SendPropertyChanging();
			entity.Loot = this;
		}
		
		private void detach_LootEntries(LootEntry entity)
		{
			this.SendPropertyChanging();
			entity.Loot = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LootDrops")]
	internal partial class LootDrop : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LootDropID;
		
		private uint _ItemID;
		
		private byte _ItemCharges;
		
		private bool _Equipable;
		
		private byte _Probability;
		
		private EntityRef<Item> _Item;
		
		private EntityRef<LootEntry> _LootEntry;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLootDropIDChanging(int value);
    partial void OnLootDropIDChanged();
    partial void OnItemIDChanging(uint value);
    partial void OnItemIDChanged();
    partial void OnItemChargesChanging(byte value);
    partial void OnItemChargesChanged();
    partial void OnEquipableChanging(bool value);
    partial void OnEquipableChanged();
    partial void OnProbabilityChanging(byte value);
    partial void OnProbabilityChanged();
    #endregion
		
		public LootDrop()
		{
			this._Item = default(EntityRef<Item>);
			this._LootEntry = default(EntityRef<LootEntry>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LootDropID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int LootDropID
		{
			get
			{
				return this._LootDropID;
			}
			set
			{
				if ((this._LootDropID != value))
				{
					if (this._LootEntry.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLootDropIDChanging(value);
					this.SendPropertyChanging();
					this._LootDropID = value;
					this.SendPropertyChanged("LootDropID");
					this.OnLootDropIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public uint ItemID
		{
			get
			{
				return this._ItemID;
			}
			set
			{
				if ((this._ItemID != value))
				{
					if (this._Item.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItemIDChanging(value);
					this.SendPropertyChanging();
					this._ItemID = value;
					this.SendPropertyChanged("ItemID");
					this.OnItemIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ItemCharges", DbType="TinyInt NOT NULL")]
		public byte ItemCharges
		{
			get
			{
				return this._ItemCharges;
			}
			set
			{
				if ((this._ItemCharges != value))
				{
					this.OnItemChargesChanging(value);
					this.SendPropertyChanging();
					this._ItemCharges = value;
					this.SendPropertyChanged("ItemCharges");
					this.OnItemChargesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Equipable", DbType="Bit NOT NULL")]
		public bool Equipable
		{
			get
			{
				return this._Equipable;
			}
			set
			{
				if ((this._Equipable != value))
				{
					this.OnEquipableChanging(value);
					this.SendPropertyChanging();
					this._Equipable = value;
					this.SendPropertyChanged("Equipable");
					this.OnEquipableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Probability", DbType="TinyInt NOT NULL")]
		public byte Probability
		{
			get
			{
				return this._Probability;
			}
			set
			{
				if ((this._Probability != value))
				{
					this.OnProbabilityChanging(value);
					this.SendPropertyChanging();
					this._Probability = value;
					this.SendPropertyChanged("Probability");
					this.OnProbabilityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Item_LootDrop", Storage="_Item", ThisKey="ItemID", OtherKey="ItemID", IsForeignKey=true)]
		public Item Item
		{
			get
			{
				return this._Item.Entity;
			}
			set
			{
				Item previousValue = this._Item.Entity;
				if (((previousValue != value) 
							|| (this._Item.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Item.Entity = null;
						previousValue.LootDrops.Remove(this);
					}
					this._Item.Entity = value;
					if ((value != null))
					{
						value.LootDrops.Add(this);
						this._ItemID = value.ItemID;
					}
					else
					{
						this._ItemID = default(uint);
					}
					this.SendPropertyChanged("Item");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LootEntry_LootDrop", Storage="_LootEntry", ThisKey="LootDropID", OtherKey="LootDropID", IsForeignKey=true)]
		public LootEntry LootEntry
		{
			get
			{
				return this._LootEntry.Entity;
			}
			set
			{
				LootEntry previousValue = this._LootEntry.Entity;
				if (((previousValue != value) 
							|| (this._LootEntry.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LootEntry.Entity = null;
						previousValue.LootDrops.Remove(this);
					}
					this._LootEntry.Entity = value;
					if ((value != null))
					{
						value.LootDrops.Add(this);
						this._LootDropID = value.LootDropID;
					}
					else
					{
						this._LootDropID = default(int);
					}
					this.SendPropertyChanged("LootEntry");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LootEntries")]
	internal partial class LootEntry : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LootID;
		
		private int _LootDropID;
		
		private byte _MaxDrops;
		
		private byte _Probability;
		
		private EntitySet<LootDrop> _LootDrops;
		
		private EntityRef<Loot> _Loot;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLootIDChanging(int value);
    partial void OnLootIDChanged();
    partial void OnLootDropIDChanging(int value);
    partial void OnLootDropIDChanged();
    partial void OnMaxDropsChanging(byte value);
    partial void OnMaxDropsChanged();
    partial void OnProbabilityChanging(byte value);
    partial void OnProbabilityChanged();
    #endregion
		
		public LootEntry()
		{
			this._LootDrops = new EntitySet<LootDrop>(new Action<LootDrop>(this.attach_LootDrops), new Action<LootDrop>(this.detach_LootDrops));
			this._Loot = default(EntityRef<Loot>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LootID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int LootID
		{
			get
			{
				return this._LootID;
			}
			set
			{
				if ((this._LootID != value))
				{
					if (this._Loot.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLootIDChanging(value);
					this.SendPropertyChanging();
					this._LootID = value;
					this.SendPropertyChanged("LootID");
					this.OnLootIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LootDropID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int LootDropID
		{
			get
			{
				return this._LootDropID;
			}
			set
			{
				if ((this._LootDropID != value))
				{
					this.OnLootDropIDChanging(value);
					this.SendPropertyChanging();
					this._LootDropID = value;
					this.SendPropertyChanged("LootDropID");
					this.OnLootDropIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaxDrops", DbType="TinyInt NOT NULL")]
		public byte MaxDrops
		{
			get
			{
				return this._MaxDrops;
			}
			set
			{
				if ((this._MaxDrops != value))
				{
					this.OnMaxDropsChanging(value);
					this.SendPropertyChanging();
					this._MaxDrops = value;
					this.SendPropertyChanged("MaxDrops");
					this.OnMaxDropsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Probability", DbType="TinyInt NOT NULL")]
		public byte Probability
		{
			get
			{
				return this._Probability;
			}
			set
			{
				if ((this._Probability != value))
				{
					this.OnProbabilityChanging(value);
					this.SendPropertyChanging();
					this._Probability = value;
					this.SendPropertyChanged("Probability");
					this.OnProbabilityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LootEntry_LootDrop", Storage="_LootDrops", ThisKey="LootDropID", OtherKey="LootDropID")]
		public EntitySet<LootDrop> LootDrops
		{
			get
			{
				return this._LootDrops;
			}
			set
			{
				this._LootDrops.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Loot_LootEntry", Storage="_Loot", ThisKey="LootID", OtherKey="LootID", IsForeignKey=true)]
		public Loot Loot
		{
			get
			{
				return this._Loot.Entity;
			}
			set
			{
				Loot previousValue = this._Loot.Entity;
				if (((previousValue != value) 
							|| (this._Loot.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Loot.Entity = null;
						previousValue.LootEntries.Remove(this);
					}
					this._Loot.Entity = value;
					if ((value != null))
					{
						value.LootEntries.Add(this);
						this._LootID = value.LootID;
					}
					else
					{
						this._LootID = default(int);
					}
					this.SendPropertyChanged("Loot");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LootDrops(LootDrop entity)
		{
			this.SendPropertyChanging();
			entity.LootEntry = this;
		}
		
		private void detach_LootDrops(LootDrop entity)
		{
			this.SendPropertyChanging();
			entity.LootEntry = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Books")]
	public partial class Book : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Name;
		
		private string _BookText;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnBookTextChanging(string value);
    partial void OnBookTextChanged();
    #endregion
		
		public Book()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(30) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BookText", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string BookText
		{
			get
			{
				return this._BookText;
			}
			set
			{
				if ((this._BookText != value))
				{
					this.OnBookTextChanging(value);
					this.SendPropertyChanging();
					this._BookText = value;
					this.SendPropertyChanged("BookText");
					this.OnBookTextChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SkillCaps")]
	internal partial class SkillCap : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SkillCapID;
		
		private byte _SkillID;
		
		private byte _Class;
		
		private byte _Level;
		
		private short _Cap;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSkillCapIDChanging(int value);
    partial void OnSkillCapIDChanged();
    partial void OnSkillIDChanging(byte value);
    partial void OnSkillIDChanged();
    partial void OnClassChanging(byte value);
    partial void OnClassChanged();
    partial void OnLevelChanging(byte value);
    partial void OnLevelChanged();
    partial void OnCapChanging(short value);
    partial void OnCapChanged();
    #endregion
		
		public SkillCap()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SkillCapID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SkillCapID
		{
			get
			{
				return this._SkillCapID;
			}
			set
			{
				if ((this._SkillCapID != value))
				{
					this.OnSkillCapIDChanging(value);
					this.SendPropertyChanging();
					this._SkillCapID = value;
					this.SendPropertyChanged("SkillCapID");
					this.OnSkillCapIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SkillID", DbType="TinyInt NOT NULL")]
		public byte SkillID
		{
			get
			{
				return this._SkillID;
			}
			set
			{
				if ((this._SkillID != value))
				{
					this.OnSkillIDChanging(value);
					this.SendPropertyChanging();
					this._SkillID = value;
					this.SendPropertyChanged("SkillID");
					this.OnSkillIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Class", DbType="TinyInt NOT NULL")]
		public byte Class
		{
			get
			{
				return this._Class;
			}
			set
			{
				if ((this._Class != value))
				{
					this.OnClassChanging(value);
					this.SendPropertyChanging();
					this._Class = value;
					this.SendPropertyChanged("Class");
					this.OnClassChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Level]", Storage="_Level", DbType="TinyInt NOT NULL")]
		public byte Level
		{
			get
			{
				return this._Level;
			}
			set
			{
				if ((this._Level != value))
				{
					this.OnLevelChanging(value);
					this.SendPropertyChanging();
					this._Level = value;
					this.SendPropertyChanged("Level");
					this.OnLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cap", DbType="SmallInt NOT NULL")]
		public short Cap
		{
			get
			{
				return this._Cap;
			}
			set
			{
				if ((this._Cap != value))
				{
					this.OnCapChanging(value);
					this.SendPropertyChanging();
					this._Cap = value;
					this.SendPropertyChanged("Cap");
					this.OnCapChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ServerConfig")]
	internal partial class ServerConfig
	{
		
		private string _LongName;
		
		private string _ShortName;
		
		private short _NewUserDefaultStatus;
		
		private short _Expansions;
		
		private bool _PVP;
		
		private int _StartZone;
		
		private short _StartingPlat;
		
		private short _StartingGold;
		
		private double _GroupXPBonus;
		
		private string _MOTD;
		
		private string _ZoneAddress;
		
		private string _ZoneLocalAddress;
		
		private short _ZonePortLow;
		
		private short _ZonePortHigh;
		
		private string _ChatHost;
		
		private int _ChatPort;
		
		private string _MailHost;
		
		private int _MailPort;
		
		private byte _InitNumZoneServers;
		
		private int _AutosaveIntervalSec;
		
		private float _BaseHitChance;
		
		private float _NPCBonusHitChance;
		
		private int _HitFallOffMinor;
		
		private int _HitFallOffModerate;
		
		private int _HitFallOffMajor;
		
		private float _HitBonusPerLevel;
		
		private float _XPModifier;
		
		private byte _LevelCap;
		
		private float _PCRegenMultiplier;
		
		private float _XPLossModifier;
		
		private byte _LevelDeathDoesXPLoss;
		
		private byte _LevelDeathLeavesItems;
		
		public ServerConfig()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LongName", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string LongName
		{
			get
			{
				return this._LongName;
			}
			set
			{
				if ((this._LongName != value))
				{
					this._LongName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortName", DbType="VarChar(32) NOT NULL", CanBeNull=false)]
		public string ShortName
		{
			get
			{
				return this._ShortName;
			}
			set
			{
				if ((this._ShortName != value))
				{
					this._ShortName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewUserDefaultStatus", DbType="SmallInt NOT NULL")]
		public short NewUserDefaultStatus
		{
			get
			{
				return this._NewUserDefaultStatus;
			}
			set
			{
				if ((this._NewUserDefaultStatus != value))
				{
					this._NewUserDefaultStatus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Expansions", DbType="SmallInt NOT NULL")]
		public short Expansions
		{
			get
			{
				return this._Expansions;
			}
			set
			{
				if ((this._Expansions != value))
				{
					this._Expansions = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PVP", DbType="Bit NOT NULL")]
		public bool PVP
		{
			get
			{
				return this._PVP;
			}
			set
			{
				if ((this._PVP != value))
				{
					this._PVP = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartZone", DbType="Int NOT NULL")]
		public int StartZone
		{
			get
			{
				return this._StartZone;
			}
			set
			{
				if ((this._StartZone != value))
				{
					this._StartZone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartingPlat", DbType="SmallInt NOT NULL")]
		public short StartingPlat
		{
			get
			{
				return this._StartingPlat;
			}
			set
			{
				if ((this._StartingPlat != value))
				{
					this._StartingPlat = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartingGold", DbType="SmallInt NOT NULL")]
		public short StartingGold
		{
			get
			{
				return this._StartingGold;
			}
			set
			{
				if ((this._StartingGold != value))
				{
					this._StartingGold = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GroupXPBonus", DbType="Float NOT NULL")]
		public double GroupXPBonus
		{
			get
			{
				return this._GroupXPBonus;
			}
			set
			{
				if ((this._GroupXPBonus != value))
				{
					this._GroupXPBonus = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MOTD", DbType="VarChar(100)")]
		public string MOTD
		{
			get
			{
				return this._MOTD;
			}
			set
			{
				if ((this._MOTD != value))
				{
					this._MOTD = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZoneAddress", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string ZoneAddress
		{
			get
			{
				return this._ZoneAddress;
			}
			set
			{
				if ((this._ZoneAddress != value))
				{
					this._ZoneAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZoneLocalAddress", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string ZoneLocalAddress
		{
			get
			{
				return this._ZoneLocalAddress;
			}
			set
			{
				if ((this._ZoneLocalAddress != value))
				{
					this._ZoneLocalAddress = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZonePortLow", DbType="SmallInt NOT NULL")]
		public short ZonePortLow
		{
			get
			{
				return this._ZonePortLow;
			}
			set
			{
				if ((this._ZonePortLow != value))
				{
					this._ZonePortLow = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZonePortHigh", DbType="SmallInt NOT NULL")]
		public short ZonePortHigh
		{
			get
			{
				return this._ZonePortHigh;
			}
			set
			{
				if ((this._ZonePortHigh != value))
				{
					this._ZonePortHigh = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChatHost", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string ChatHost
		{
			get
			{
				return this._ChatHost;
			}
			set
			{
				if ((this._ChatHost != value))
				{
					this._ChatHost = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ChatPort", DbType="Int NOT NULL")]
		public int ChatPort
		{
			get
			{
				return this._ChatPort;
			}
			set
			{
				if ((this._ChatPort != value))
				{
					this._ChatPort = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MailHost", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string MailHost
		{
			get
			{
				return this._MailHost;
			}
			set
			{
				if ((this._MailHost != value))
				{
					this._MailHost = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MailPort", DbType="Int NOT NULL")]
		public int MailPort
		{
			get
			{
				return this._MailPort;
			}
			set
			{
				if ((this._MailPort != value))
				{
					this._MailPort = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InitNumZoneServers", DbType="TinyInt NOT NULL")]
		public byte InitNumZoneServers
		{
			get
			{
				return this._InitNumZoneServers;
			}
			set
			{
				if ((this._InitNumZoneServers != value))
				{
					this._InitNumZoneServers = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AutosaveIntervalSec", DbType="Int NOT NULL")]
		public int AutosaveIntervalSec
		{
			get
			{
				return this._AutosaveIntervalSec;
			}
			set
			{
				if ((this._AutosaveIntervalSec != value))
				{
					this._AutosaveIntervalSec = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseHitChance", DbType="Float NOT NULL")]
		public float BaseHitChance
		{
			get
			{
				return this._BaseHitChance;
			}
			set
			{
				if ((this._BaseHitChance != value))
				{
					this._BaseHitChance = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NPCBonusHitChance", DbType="Float NOT NULL")]
		public float NPCBonusHitChance
		{
			get
			{
				return this._NPCBonusHitChance;
			}
			set
			{
				if ((this._NPCBonusHitChance != value))
				{
					this._NPCBonusHitChance = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HitFallOffMinor", DbType="Int NOT NULL")]
		public int HitFallOffMinor
		{
			get
			{
				return this._HitFallOffMinor;
			}
			set
			{
				if ((this._HitFallOffMinor != value))
				{
					this._HitFallOffMinor = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HitFallOffModerate", DbType="Int NOT NULL")]
		public int HitFallOffModerate
		{
			get
			{
				return this._HitFallOffModerate;
			}
			set
			{
				if ((this._HitFallOffModerate != value))
				{
					this._HitFallOffModerate = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HitFallOffMajor", DbType="Int NOT NULL")]
		public int HitFallOffMajor
		{
			get
			{
				return this._HitFallOffMajor;
			}
			set
			{
				if ((this._HitFallOffMajor != value))
				{
					this._HitFallOffMajor = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HitBonusPerLevel", DbType="Float NOT NULL")]
		public float HitBonusPerLevel
		{
			get
			{
				return this._HitBonusPerLevel;
			}
			set
			{
				if ((this._HitBonusPerLevel != value))
				{
					this._HitBonusPerLevel = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XPModifier", DbType="Float NOT NULL")]
		public float XPModifier
		{
			get
			{
				return this._XPModifier;
			}
			set
			{
				if ((this._XPModifier != value))
				{
					this._XPModifier = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LevelCap", DbType="TinyInt NOT NULL")]
		public byte LevelCap
		{
			get
			{
				return this._LevelCap;
			}
			set
			{
				if ((this._LevelCap != value))
				{
					this._LevelCap = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PCRegenMultiplier", DbType="Float NOT NULL")]
		public float PCRegenMultiplier
		{
			get
			{
				return this._PCRegenMultiplier;
			}
			set
			{
				if ((this._PCRegenMultiplier != value))
				{
					this._PCRegenMultiplier = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XPLossModifier", DbType="Float NOT NULL")]
		public float XPLossModifier
		{
			get
			{
				return this._XPLossModifier;
			}
			set
			{
				if ((this._XPLossModifier != value))
				{
					this._XPLossModifier = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LevelDeathDoesXPLoss", DbType="TinyInt NOT NULL")]
		public byte LevelDeathDoesXPLoss
		{
			get
			{
				return this._LevelDeathDoesXPLoss;
			}
			set
			{
				if ((this._LevelDeathDoesXPLoss != value))
				{
					this._LevelDeathDoesXPLoss = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LevelDeathLeavesItems", DbType="TinyInt NOT NULL")]
		public byte LevelDeathLeavesItems
		{
			get
			{
				return this._LevelDeathLeavesItems;
			}
			set
			{
				if ((this._LevelDeathLeavesItems != value))
				{
					this._LevelDeathLeavesItems = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Spells")]
	public partial class Spell : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private ushort _SpellId;
		
		private string _SpellName;
		
		private string _TeleportZone;
		
		private string _MsgYouCast;
		
		private string _MsgOtherCast;
		
		private string _MsgCastOnYou;
		
		private string _MsgCastOnOther;
		
		private string _MsgSpellFades;
		
		private System.Nullable<float> _Range;
		
		private System.Nullable<float> _AOERange;
		
		private System.Nullable<float> _PushBack;
		
		private System.Nullable<float> _PushUp;
		
		private uint _CastTime;
		
		private System.Nullable<int> _RecoveryTime;
		
		private System.Nullable<int> _RecastTime;
		
		private System.Nullable<int> _BuffDurationFormula;
		
		private System.Nullable<int> _BuffDuration;
		
		private System.Nullable<int> _AEDuration;
		
		private short _Mana;
		
		private System.Nullable<float> _EffectBaseValue1;
		
		private System.Nullable<float> _EffectBaseValue2;
		
		private System.Nullable<float> _EffectBaseValue3;
		
		private System.Nullable<float> _EffectBaseValue4;
		
		private System.Nullable<float> _EffectBaseValue5;
		
		private System.Nullable<float> _EffectBaseValue6;
		
		private System.Nullable<float> _EffectBaseValue7;
		
		private System.Nullable<float> _EffectBaseValue8;
		
		private System.Nullable<float> _EffectBaseValue9;
		
		private System.Nullable<float> _EffectBaseValue10;
		
		private System.Nullable<float> _EffectBaseValue11;
		
		private System.Nullable<float> _EffectBaseValue12;
		
		private System.Nullable<float> _EffectLimitValue1;
		
		private System.Nullable<float> _EffectLimitValue2;
		
		private System.Nullable<float> _EffectLimitValue3;
		
		private System.Nullable<float> _EffectLimitValue4;
		
		private System.Nullable<float> _EffectLimitValue5;
		
		private System.Nullable<float> _EffectLimitValue6;
		
		private System.Nullable<float> _EffectLimitValue7;
		
		private System.Nullable<float> _EffectLimitValue8;
		
		private System.Nullable<float> _EffectLimitValue9;
		
		private System.Nullable<float> _EffectLimitValue10;
		
		private System.Nullable<float> _EffectLimitValue11;
		
		private System.Nullable<float> _EffectLimitValue12;
		
		private System.Nullable<float> _EffectMaxValue1;
		
		private System.Nullable<float> _EffectMaxValue2;
		
		private System.Nullable<float> _EffectMaxValue3;
		
		private System.Nullable<float> _EffectMaxValue4;
		
		private System.Nullable<float> _EffectMaxValue5;
		
		private System.Nullable<float> _EffectMaxValue6;
		
		private System.Nullable<float> _EffectMaxValue7;
		
		private System.Nullable<float> _EffectMaxValue8;
		
		private System.Nullable<float> _EffectMaxValue9;
		
		private System.Nullable<float> _EffectMaxValue10;
		
		private System.Nullable<float> _EffectMaxValue11;
		
		private System.Nullable<float> _EffectMaxValue12;
		
		private System.Nullable<short> _OldSpellIcon;
		
		private System.Nullable<short> _OldMemIcon;
		
		private System.Nullable<int> _Reagent1;
		
		private System.Nullable<int> _Reagent2;
		
		private System.Nullable<int> _Reagent3;
		
		private System.Nullable<int> _Reagent4;
		
		private System.Nullable<int> _ReagentAmount1;
		
		private System.Nullable<int> _ReagentAmount2;
		
		private System.Nullable<int> _ReagentAmount3;
		
		private System.Nullable<int> _ReagentAmount4;
		
		private System.Nullable<int> _NoExpendReagent1;
		
		private System.Nullable<int> _NoExpendReagent2;
		
		private System.Nullable<int> _NoExpendReagent3;
		
		private System.Nullable<int> _NoExpendReagent4;
		
		private System.Nullable<short> _SpellValueFormula1;
		
		private System.Nullable<short> _SpellValueFormula2;
		
		private System.Nullable<short> _SpellValueFormula3;
		
		private System.Nullable<short> _SpellValueFormula4;
		
		private System.Nullable<short> _SpellValueFormula5;
		
		private System.Nullable<short> _SpellValueFormula6;
		
		private System.Nullable<short> _SpellValueFormula7;
		
		private System.Nullable<short> _SpellValueFormula8;
		
		private System.Nullable<short> _SpellValueFormula9;
		
		private System.Nullable<short> _SpellValueFormula10;
		
		private System.Nullable<short> _SpellValueFormula11;
		
		private System.Nullable<short> _SpellValueFormula12;
		
		private System.Nullable<int> _LightType;
		
		private short _GoodEffect;
		
		private System.Nullable<int> _Activated;
		
		private System.Nullable<short> _ResistType;
		
		private System.Nullable<short> _EffectId1;
		
		private System.Nullable<short> _EffectId2;
		
		private System.Nullable<short> _EffectId3;
		
		private System.Nullable<short> _EffectId4;
		
		private System.Nullable<short> _EffectId5;
		
		private System.Nullable<short> _EffectId6;
		
		private System.Nullable<short> _EffectId7;
		
		private System.Nullable<short> _EffectId8;
		
		private System.Nullable<short> _EffectId9;
		
		private System.Nullable<short> _EffectId10;
		
		private System.Nullable<short> _EffectId11;
		
		private System.Nullable<short> _EffectId12;
		
		private short _TargetType;
		
		private byte _BaseFizzle;
		
		private short _Skill;
		
		private System.Nullable<short> _ZoneType;
		
		private System.Nullable<short> _EnvironmentType;
		
		private System.Nullable<int> _TimeOfDay;
		
		private System.Nullable<short> _WarriorReqLevel;
		
		private System.Nullable<short> _ClericReqLevel;
		
		private System.Nullable<short> _PaladinReqLevel;
		
		private System.Nullable<short> _RangerReqLevel;
		
		private System.Nullable<short> _ShadowknightReqLevel;
		
		private System.Nullable<short> _DruidReqLevel;
		
		private System.Nullable<short> _MonkReqLevel;
		
		private System.Nullable<short> _BardReqLevel;
		
		private System.Nullable<short> _RogueReqLevel;
		
		private System.Nullable<short> _ShamanReqLevel;
		
		private System.Nullable<short> _NecromancerReqLevel;
		
		private System.Nullable<short> _WizardReqLevel;
		
		private System.Nullable<short> _MagicianReqLevel;
		
		private System.Nullable<short> _EnchanterReqLevel;
		
		private System.Nullable<short> _BeastlordReqLevel;
		
		private System.Nullable<short> _BeserkerReqLevel;
		
		private System.Nullable<short> _CastingAnimation;
		
		private System.Nullable<short> _TargetAnimation;
		
		private System.Nullable<int> _TravelType;
		
		private System.Nullable<short> _SpellAffectIndex;
		
		private short _BertoxRestrict;
		
		private short _BrellRestrict;
		
		private short _CazicRestrict;
		
		private short _ErollisiRestrict;
		
		private short _BristlebaneRestrict;
		
		private short _InnorukRestrict;
		
		private short _KaranaRestrict;
		
		private short _MithanielRestrict;
		
		private short _PrexusRestrict;
		
		private short _QuelliousRestrict;
		
		private short _RallosRestrict;
		
		private short _RodcetRestrict;
		
		private short _SolusekRestrict;
		
		private short _TribunalRestrict;
		
		private short _TunareRestrict;
		
		private short _VeeshanRestrict;
		
		private System.Nullable<short> _NewIcon;
		
		private System.Nullable<short> _SpellAnimation;
		
		private short _Uninterruptable;
		
		private System.Nullable<short> _ResistDiff;
		
		private System.Nullable<int> _DotStackingExempt;
		
		private System.Nullable<int> _Deletable;
		
		private System.Nullable<short> _RecourseLink;
		
		private System.Nullable<short> _ShortBuffBox;
		
		private System.Nullable<int> _DescriptionID;
		
		private System.Nullable<int> _TypeDescriptionID;
		
		private System.Nullable<int> _EffectDescriptionID;
		
		private System.Nullable<int> _BonusHate;
		
		private System.Nullable<int> _EnduranceCost;
		
		private System.Nullable<int> _EnduranceTimerIdx;
		
		private System.Nullable<short> _HateAdded;
		
		private System.Nullable<int> _EnduranceUpkeep;
		
		private System.Nullable<int> _NumHits;
		
		private System.Nullable<float> _PVPResistBase;
		
		private System.Nullable<float> _PVPResistCalc;
		
		private System.Nullable<float> _PVPResistCap;
		
		private System.Nullable<int> _SpellCategory;
		
		private System.Nullable<short> _CanBeMGB;
		
		private System.Nullable<short> _NoDispell;
		
		private System.Nullable<short> _NPCCategory;
		
		private System.Nullable<int> _NPCUsefulness;
		
		private EntitySet<MemorizedSpell> _MemorizedSpells;
		
		private EntitySet<ScribedSpell> _ScribedSpells;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSpellIDChanging(ushort value);
    partial void OnSpellIDChanged();
    partial void OnSpellNameChanging(string value);
    partial void OnSpellNameChanged();
    partial void OnTeleportZoneChanging(string value);
    partial void OnTeleportZoneChanged();
    partial void OnMsgYouCastChanging(string value);
    partial void OnMsgYouCastChanged();
    partial void OnMsgOtherCastChanging(string value);
    partial void OnMsgOtherCastChanged();
    partial void OnMsgCastOnYouChanging(string value);
    partial void OnMsgCastOnYouChanged();
    partial void OnMsgCastOnOtherChanging(string value);
    partial void OnMsgCastOnOtherChanged();
    partial void OnMsgSpellFadesChanging(string value);
    partial void OnMsgSpellFadesChanged();
    partial void OnRangeChanging(System.Nullable<float> value);
    partial void OnRangeChanged();
    partial void OnAOERangeChanging(System.Nullable<float> value);
    partial void OnAOERangeChanged();
    partial void OnPushBackChanging(System.Nullable<float> value);
    partial void OnPushBackChanged();
    partial void OnPushUpChanging(System.Nullable<float> value);
    partial void OnPushUpChanged();
    partial void OnCastTimeChanging(uint value);
    partial void OnCastTimeChanged();
    partial void OnRecoveryTimeChanging(System.Nullable<int> value);
    partial void OnRecoveryTimeChanged();
    partial void OnRecastTimeChanging(System.Nullable<int> value);
    partial void OnRecastTimeChanged();
    partial void OnBuffDurationFormulaChanging(System.Nullable<int> value);
    partial void OnBuffDurationFormulaChanged();
    partial void OnBuffDurationChanging(System.Nullable<int> value);
    partial void OnBuffDurationChanged();
    partial void OnAEDurationChanging(System.Nullable<int> value);
    partial void OnAEDurationChanged();
    partial void OnManaChanging(short value);
    partial void OnManaChanged();
    partial void OnEffectBaseValue1Changing(System.Nullable<float> value);
    partial void OnEffectBaseValue1Changed();
    partial void OnEffectBaseValue2Changing(System.Nullable<float> value);
    partial void OnEffectBaseValue2Changed();
    partial void OnEffectBaseValue3Changing(System.Nullable<float> value);
    partial void OnEffectBaseValue3Changed();
    partial void OnEffectBaseValue4Changing(System.Nullable<float> value);
    partial void OnEffectBaseValue4Changed();
    partial void OnEffectBaseValue5Changing(System.Nullable<float> value);
    partial void OnEffectBaseValue5Changed();
    partial void OnEffectBaseValue6Changing(System.Nullable<float> value);
    partial void OnEffectBaseValue6Changed();
    partial void OnEffectBaseValue7Changing(System.Nullable<float> value);
    partial void OnEffectBaseValue7Changed();
    partial void OnEffectBaseValue8Changing(System.Nullable<float> value);
    partial void OnEffectBaseValue8Changed();
    partial void OnEffectBaseValue9Changing(System.Nullable<float> value);
    partial void OnEffectBaseValue9Changed();
    partial void OnEffectBaseValue10Changing(System.Nullable<float> value);
    partial void OnEffectBaseValue10Changed();
    partial void OnEffectBaseValue11Changing(System.Nullable<float> value);
    partial void OnEffectBaseValue11Changed();
    partial void OnEffectBaseValue12Changing(System.Nullable<float> value);
    partial void OnEffectBaseValue12Changed();
    partial void OnEffectLimitValue1Changing(System.Nullable<float> value);
    partial void OnEffectLimitValue1Changed();
    partial void OnEffectLimitValue2Changing(System.Nullable<float> value);
    partial void OnEffectLimitValue2Changed();
    partial void OnEffectLimitValue3Changing(System.Nullable<float> value);
    partial void OnEffectLimitValue3Changed();
    partial void OnEffectLimitValue4Changing(System.Nullable<float> value);
    partial void OnEffectLimitValue4Changed();
    partial void OnEffectLimitValue5Changing(System.Nullable<float> value);
    partial void OnEffectLimitValue5Changed();
    partial void OnEffectLimitValue6Changing(System.Nullable<float> value);
    partial void OnEffectLimitValue6Changed();
    partial void OnEffectLimitValue7Changing(System.Nullable<float> value);
    partial void OnEffectLimitValue7Changed();
    partial void OnEffectLimitValue8Changing(System.Nullable<float> value);
    partial void OnEffectLimitValue8Changed();
    partial void OnEffectLimitValue9Changing(System.Nullable<float> value);
    partial void OnEffectLimitValue9Changed();
    partial void OnEffectLimitValue10Changing(System.Nullable<float> value);
    partial void OnEffectLimitValue10Changed();
    partial void OnEffectLimitValue11Changing(System.Nullable<float> value);
    partial void OnEffectLimitValue11Changed();
    partial void OnEffectLimitValue12Changing(System.Nullable<float> value);
    partial void OnEffectLimitValue12Changed();
    partial void OnEffectMaxValue1Changing(System.Nullable<float> value);
    partial void OnEffectMaxValue1Changed();
    partial void OnEffectMaxValue2Changing(System.Nullable<float> value);
    partial void OnEffectMaxValue2Changed();
    partial void OnEffectMaxValue3Changing(System.Nullable<float> value);
    partial void OnEffectMaxValue3Changed();
    partial void OnEffectMaxValue4Changing(System.Nullable<float> value);
    partial void OnEffectMaxValue4Changed();
    partial void OnEffectMaxValue5Changing(System.Nullable<float> value);
    partial void OnEffectMaxValue5Changed();
    partial void OnEffectMaxValue6Changing(System.Nullable<float> value);
    partial void OnEffectMaxValue6Changed();
    partial void OnEffectMaxValue7Changing(System.Nullable<float> value);
    partial void OnEffectMaxValue7Changed();
    partial void OnEffectMaxValue8Changing(System.Nullable<float> value);
    partial void OnEffectMaxValue8Changed();
    partial void OnEffectMaxValue9Changing(System.Nullable<float> value);
    partial void OnEffectMaxValue9Changed();
    partial void OnEffectMaxValue10Changing(System.Nullable<float> value);
    partial void OnEffectMaxValue10Changed();
    partial void OnEffectMaxValue11Changing(System.Nullable<float> value);
    partial void OnEffectMaxValue11Changed();
    partial void OnEffectMaxValue12Changing(System.Nullable<float> value);
    partial void OnEffectMaxValue12Changed();
    partial void OnOldSpellIconChanging(System.Nullable<short> value);
    partial void OnOldSpellIconChanged();
    partial void OnOldMemIconChanging(System.Nullable<short> value);
    partial void OnOldMemIconChanged();
    partial void OnReagent1Changing(System.Nullable<int> value);
    partial void OnReagent1Changed();
    partial void OnReagent2Changing(System.Nullable<int> value);
    partial void OnReagent2Changed();
    partial void OnReagent3Changing(System.Nullable<int> value);
    partial void OnReagent3Changed();
    partial void OnReagent4Changing(System.Nullable<int> value);
    partial void OnReagent4Changed();
    partial void OnReagentAmount1Changing(System.Nullable<int> value);
    partial void OnReagentAmount1Changed();
    partial void OnReagentAmount2Changing(System.Nullable<int> value);
    partial void OnReagentAmount2Changed();
    partial void OnReagentAmount3Changing(System.Nullable<int> value);
    partial void OnReagentAmount3Changed();
    partial void OnReagentAmount4Changing(System.Nullable<int> value);
    partial void OnReagentAmount4Changed();
    partial void OnNoExpendReagent1Changing(System.Nullable<int> value);
    partial void OnNoExpendReagent1Changed();
    partial void OnNoExpendReagent2Changing(System.Nullable<int> value);
    partial void OnNoExpendReagent2Changed();
    partial void OnNoExpendReagent3Changing(System.Nullable<int> value);
    partial void OnNoExpendReagent3Changed();
    partial void OnNoExpendReagent4Changing(System.Nullable<int> value);
    partial void OnNoExpendReagent4Changed();
    partial void OnSpellValueFormula1Changing(System.Nullable<short> value);
    partial void OnSpellValueFormula1Changed();
    partial void OnSpellValueFormula2Changing(System.Nullable<short> value);
    partial void OnSpellValueFormula2Changed();
    partial void OnSpellValueFormula3Changing(System.Nullable<short> value);
    partial void OnSpellValueFormula3Changed();
    partial void OnSpellValueFormula4Changing(System.Nullable<short> value);
    partial void OnSpellValueFormula4Changed();
    partial void OnSpellValueFormula5Changing(System.Nullable<short> value);
    partial void OnSpellValueFormula5Changed();
    partial void OnSpellValueFormula6Changing(System.Nullable<short> value);
    partial void OnSpellValueFormula6Changed();
    partial void OnSpellValueFormula7Changing(System.Nullable<short> value);
    partial void OnSpellValueFormula7Changed();
    partial void OnSpellValueFormula8Changing(System.Nullable<short> value);
    partial void OnSpellValueFormula8Changed();
    partial void OnSpellValueFormula9Changing(System.Nullable<short> value);
    partial void OnSpellValueFormula9Changed();
    partial void OnSpellValueFormula10Changing(System.Nullable<short> value);
    partial void OnSpellValueFormula10Changed();
    partial void OnSpellValueFormula11Changing(System.Nullable<short> value);
    partial void OnSpellValueFormula11Changed();
    partial void OnSpellValueFormula12Changing(System.Nullable<short> value);
    partial void OnSpellValueFormula12Changed();
    partial void OnLightTypeChanging(System.Nullable<int> value);
    partial void OnLightTypeChanged();
    partial void OnGoodEffectChanging(short value);
    partial void OnGoodEffectChanged();
    partial void OnActivatedChanging(System.Nullable<int> value);
    partial void OnActivatedChanged();
    partial void OnResistTypeChanging(System.Nullable<short> value);
    partial void OnResistTypeChanged();
    partial void OnEffectId1Changing(System.Nullable<short> value);
    partial void OnEffectId1Changed();
    partial void OnEffectId2Changing(System.Nullable<short> value);
    partial void OnEffectId2Changed();
    partial void OnEffectId3Changing(System.Nullable<short> value);
    partial void OnEffectId3Changed();
    partial void OnEffectId4Changing(System.Nullable<short> value);
    partial void OnEffectId4Changed();
    partial void OnEffectId5Changing(System.Nullable<short> value);
    partial void OnEffectId5Changed();
    partial void OnEffectId6Changing(System.Nullable<short> value);
    partial void OnEffectId6Changed();
    partial void OnEffectId7Changing(System.Nullable<short> value);
    partial void OnEffectId7Changed();
    partial void OnEffectId8Changing(System.Nullable<short> value);
    partial void OnEffectId8Changed();
    partial void OnEffectId9Changing(System.Nullable<short> value);
    partial void OnEffectId9Changed();
    partial void OnEffectId10Changing(System.Nullable<short> value);
    partial void OnEffectId10Changed();
    partial void OnEffectId11Changing(System.Nullable<short> value);
    partial void OnEffectId11Changed();
    partial void OnEffectId12Changing(System.Nullable<short> value);
    partial void OnEffectId12Changed();
    partial void OnTargetTypeChanging(short value);
    partial void OnTargetTypeChanged();
    partial void OnBaseFizzleChanging(byte value);
    partial void OnBaseFizzleChanged();
    partial void OnSkillChanging(short value);
    partial void OnSkillChanged();
    partial void OnZoneTypeChanging(System.Nullable<short> value);
    partial void OnZoneTypeChanged();
    partial void OnEnvironmentTypeChanging(System.Nullable<short> value);
    partial void OnEnvironmentTypeChanged();
    partial void OnTimeOfDayChanging(System.Nullable<int> value);
    partial void OnTimeOfDayChanged();
    partial void OnWarriorReqLevelChanging(System.Nullable<short> value);
    partial void OnWarriorReqLevelChanged();
    partial void OnClericReqLevelChanging(System.Nullable<short> value);
    partial void OnClericReqLevelChanged();
    partial void OnPaladinReqLevelChanging(System.Nullable<short> value);
    partial void OnPaladinReqLevelChanged();
    partial void OnRangerReqLevelChanging(System.Nullable<short> value);
    partial void OnRangerReqLevelChanged();
    partial void OnShadowknightReqLevelChanging(System.Nullable<short> value);
    partial void OnShadowknightReqLevelChanged();
    partial void OnDruidReqLevelChanging(System.Nullable<short> value);
    partial void OnDruidReqLevelChanged();
    partial void OnMonkReqLevelChanging(System.Nullable<short> value);
    partial void OnMonkReqLevelChanged();
    partial void OnBardReqLevelChanging(System.Nullable<short> value);
    partial void OnBardReqLevelChanged();
    partial void OnRogueReqLevelChanging(System.Nullable<short> value);
    partial void OnRogueReqLevelChanged();
    partial void OnShamanReqLevelChanging(System.Nullable<short> value);
    partial void OnShamanReqLevelChanged();
    partial void OnNecromancerReqLevelChanging(System.Nullable<short> value);
    partial void OnNecromancerReqLevelChanged();
    partial void OnWizardReqLevelChanging(System.Nullable<short> value);
    partial void OnWizardReqLevelChanged();
    partial void OnMagicianReqLevelChanging(System.Nullable<short> value);
    partial void OnMagicianReqLevelChanged();
    partial void OnEnchanterReqLevelChanging(System.Nullable<short> value);
    partial void OnEnchanterReqLevelChanged();
    partial void OnBeastlordReqLevelChanging(System.Nullable<short> value);
    partial void OnBeastlordReqLevelChanged();
    partial void OnBeserkerReqLevelChanging(System.Nullable<short> value);
    partial void OnBeserkerReqLevelChanged();
    partial void OnCastingAnimationChanging(System.Nullable<short> value);
    partial void OnCastingAnimationChanged();
    partial void OnTargetAnimationChanging(System.Nullable<short> value);
    partial void OnTargetAnimationChanged();
    partial void OnTravelTypeChanging(System.Nullable<int> value);
    partial void OnTravelTypeChanged();
    partial void OnSpellAffectIndexChanging(System.Nullable<short> value);
    partial void OnSpellAffectIndexChanged();
    partial void OnBertoxRestrictChanging(short value);
    partial void OnBertoxRestrictChanged();
    partial void OnBrellRestrictChanging(short value);
    partial void OnBrellRestrictChanged();
    partial void OnCazicRestrictChanging(short value);
    partial void OnCazicRestrictChanged();
    partial void OnErollisiRestrictChanging(short value);
    partial void OnErollisiRestrictChanged();
    partial void OnBristlebaneRestrictChanging(short value);
    partial void OnBristlebaneRestrictChanged();
    partial void OnInnorukRestrictChanging(short value);
    partial void OnInnorukRestrictChanged();
    partial void OnKaranaRestrictChanging(short value);
    partial void OnKaranaRestrictChanged();
    partial void OnMithanielRestrictChanging(short value);
    partial void OnMithanielRestrictChanged();
    partial void OnPrexusRestrictChanging(short value);
    partial void OnPrexusRestrictChanged();
    partial void OnQuelliousRestrictChanging(short value);
    partial void OnQuelliousRestrictChanged();
    partial void OnRallosRestrictChanging(short value);
    partial void OnRallosRestrictChanged();
    partial void OnRodcetRestrictChanging(short value);
    partial void OnRodcetRestrictChanged();
    partial void OnSolusekRestrictChanging(short value);
    partial void OnSolusekRestrictChanged();
    partial void OnTribunalRestrictChanging(short value);
    partial void OnTribunalRestrictChanged();
    partial void OnTunareRestrictChanging(short value);
    partial void OnTunareRestrictChanged();
    partial void OnVeeshanRestrictChanging(short value);
    partial void OnVeeshanRestrictChanged();
    partial void OnNewIconChanging(System.Nullable<short> value);
    partial void OnNewIconChanged();
    partial void OnSpellAnimationChanging(System.Nullable<short> value);
    partial void OnSpellAnimationChanged();
    partial void OnUninterruptableChanging(short value);
    partial void OnUninterruptableChanged();
    partial void OnResistDiffChanging(System.Nullable<short> value);
    partial void OnResistDiffChanged();
    partial void OnDotStackingExemptChanging(System.Nullable<int> value);
    partial void OnDotStackingExemptChanged();
    partial void OnDeletableChanging(System.Nullable<int> value);
    partial void OnDeletableChanged();
    partial void OnRecourseLinkChanging(System.Nullable<short> value);
    partial void OnRecourseLinkChanged();
    partial void OnShortBuffBoxChanging(System.Nullable<short> value);
    partial void OnShortBuffBoxChanged();
    partial void OnDescriptionIDChanging(System.Nullable<int> value);
    partial void OnDescriptionIDChanged();
    partial void OnTypeDescriptionIDChanging(System.Nullable<int> value);
    partial void OnTypeDescriptionIDChanged();
    partial void OnEffectDescriptionIDChanging(System.Nullable<int> value);
    partial void OnEffectDescriptionIDChanged();
    partial void OnBonusHateChanging(System.Nullable<int> value);
    partial void OnBonusHateChanged();
    partial void OnEnduranceCostChanging(System.Nullable<int> value);
    partial void OnEnduranceCostChanged();
    partial void OnEnduranceTimerIdxChanging(System.Nullable<int> value);
    partial void OnEnduranceTimerIdxChanged();
    partial void OnHateAddedChanging(System.Nullable<short> value);
    partial void OnHateAddedChanged();
    partial void OnEnduranceUpkeepChanging(System.Nullable<int> value);
    partial void OnEnduranceUpkeepChanged();
    partial void OnNumHitsChanging(System.Nullable<int> value);
    partial void OnNumHitsChanged();
    partial void OnPVPResistBaseChanging(System.Nullable<float> value);
    partial void OnPVPResistBaseChanged();
    partial void OnPVPResistCalcChanging(System.Nullable<float> value);
    partial void OnPVPResistCalcChanged();
    partial void OnPVPResistCapChanging(System.Nullable<float> value);
    partial void OnPVPResistCapChanged();
    partial void OnSpellCategoryChanging(System.Nullable<int> value);
    partial void OnSpellCategoryChanged();
    partial void OnCanBeMGBChanging(System.Nullable<short> value);
    partial void OnCanBeMGBChanged();
    partial void OnNoDispellChanging(System.Nullable<short> value);
    partial void OnNoDispellChanged();
    partial void OnNPCCategoryChanging(System.Nullable<short> value);
    partial void OnNPCCategoryChanged();
    partial void OnNPCUsefulnessChanging(System.Nullable<int> value);
    partial void OnNPCUsefulnessChanged();
    #endregion
		
		public Spell()
		{
			this._MemorizedSpells = new EntitySet<MemorizedSpell>(new Action<MemorizedSpell>(this.attach_MemorizedSpells), new Action<MemorizedSpell>(this.detach_MemorizedSpells));
			this._ScribedSpells = new EntitySet<ScribedSpell>(new Action<ScribedSpell>(this.attach_ScribedSpells), new Action<ScribedSpell>(this.detach_ScribedSpells));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="SpellId", Storage="_SpellId", DbType="SmallInt NOT NULL", IsPrimaryKey=true)]
		public ushort SpellID
		{
			get
			{
				return this._SpellId;
			}
			set
			{
				if ((this._SpellId != value))
				{
					this.OnSpellIDChanging(value);
					this.SendPropertyChanging();
					this._SpellId = value;
					this.SendPropertyChanged("SpellID");
					this.OnSpellIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpellName", DbType="VarChar(46) NOT NULL", CanBeNull=false)]
		public string SpellName
		{
			get
			{
				return this._SpellName;
			}
			set
			{
				if ((this._SpellName != value))
				{
					this.OnSpellNameChanging(value);
					this.SendPropertyChanging();
					this._SpellName = value;
					this.SendPropertyChanged("SpellName");
					this.OnSpellNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TeleportZone", DbType="VarChar(32)")]
		public string TeleportZone
		{
			get
			{
				return this._TeleportZone;
			}
			set
			{
				if ((this._TeleportZone != value))
				{
					this.OnTeleportZoneChanging(value);
					this.SendPropertyChanging();
					this._TeleportZone = value;
					this.SendPropertyChanged("TeleportZone");
					this.OnTeleportZoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MsgYouCast", DbType="VarChar(64)")]
		public string MsgYouCast
		{
			get
			{
				return this._MsgYouCast;
			}
			set
			{
				if ((this._MsgYouCast != value))
				{
					this.OnMsgYouCastChanging(value);
					this.SendPropertyChanging();
					this._MsgYouCast = value;
					this.SendPropertyChanged("MsgYouCast");
					this.OnMsgYouCastChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MsgOtherCast", DbType="VarChar(64)")]
		public string MsgOtherCast
		{
			get
			{
				return this._MsgOtherCast;
			}
			set
			{
				if ((this._MsgOtherCast != value))
				{
					this.OnMsgOtherCastChanging(value);
					this.SendPropertyChanging();
					this._MsgOtherCast = value;
					this.SendPropertyChanged("MsgOtherCast");
					this.OnMsgOtherCastChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MsgCastOnYou", DbType="VarChar(64)")]
		public string MsgCastOnYou
		{
			get
			{
				return this._MsgCastOnYou;
			}
			set
			{
				if ((this._MsgCastOnYou != value))
				{
					this.OnMsgCastOnYouChanging(value);
					this.SendPropertyChanging();
					this._MsgCastOnYou = value;
					this.SendPropertyChanged("MsgCastOnYou");
					this.OnMsgCastOnYouChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MsgCastOnOther", DbType="VarChar(64)")]
		public string MsgCastOnOther
		{
			get
			{
				return this._MsgCastOnOther;
			}
			set
			{
				if ((this._MsgCastOnOther != value))
				{
					this.OnMsgCastOnOtherChanging(value);
					this.SendPropertyChanging();
					this._MsgCastOnOther = value;
					this.SendPropertyChanged("MsgCastOnOther");
					this.OnMsgCastOnOtherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MsgSpellFades", DbType="VarChar(64)")]
		public string MsgSpellFades
		{
			get
			{
				return this._MsgSpellFades;
			}
			set
			{
				if ((this._MsgSpellFades != value))
				{
					this.OnMsgSpellFadesChanging(value);
					this.SendPropertyChanging();
					this._MsgSpellFades = value;
					this.SendPropertyChanged("MsgSpellFades");
					this.OnMsgSpellFadesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Range", DbType="Float")]
		public System.Nullable<float> Range
		{
			get
			{
				return this._Range;
			}
			set
			{
				if ((this._Range != value))
				{
					this.OnRangeChanging(value);
					this.SendPropertyChanging();
					this._Range = value;
					this.SendPropertyChanged("Range");
					this.OnRangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AOERange", DbType="Float")]
		public System.Nullable<float> AOERange
		{
			get
			{
				return this._AOERange;
			}
			set
			{
				if ((this._AOERange != value))
				{
					this.OnAOERangeChanging(value);
					this.SendPropertyChanging();
					this._AOERange = value;
					this.SendPropertyChanged("AOERange");
					this.OnAOERangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PushBack", DbType="Float")]
		public System.Nullable<float> PushBack
		{
			get
			{
				return this._PushBack;
			}
			set
			{
				if ((this._PushBack != value))
				{
					this.OnPushBackChanging(value);
					this.SendPropertyChanging();
					this._PushBack = value;
					this.SendPropertyChanged("PushBack");
					this.OnPushBackChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PushUp", DbType="Float")]
		public System.Nullable<float> PushUp
		{
			get
			{
				return this._PushUp;
			}
			set
			{
				if ((this._PushUp != value))
				{
					this.OnPushUpChanging(value);
					this.SendPropertyChanging();
					this._PushUp = value;
					this.SendPropertyChanged("PushUp");
					this.OnPushUpChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CastTime", DbType="Int NOT NULL")]
		public uint CastTime
		{
			get
			{
				return this._CastTime;
			}
			set
			{
				if ((this._CastTime != value))
				{
					this.OnCastTimeChanging(value);
					this.SendPropertyChanging();
					this._CastTime = value;
					this.SendPropertyChanged("CastTime");
					this.OnCastTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecoveryTime", DbType="Int")]
		public System.Nullable<int> RecoveryTime
		{
			get
			{
				return this._RecoveryTime;
			}
			set
			{
				if ((this._RecoveryTime != value))
				{
					this.OnRecoveryTimeChanging(value);
					this.SendPropertyChanging();
					this._RecoveryTime = value;
					this.SendPropertyChanged("RecoveryTime");
					this.OnRecoveryTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecastTime", DbType="Int")]
		public System.Nullable<int> RecastTime
		{
			get
			{
				return this._RecastTime;
			}
			set
			{
				if ((this._RecastTime != value))
				{
					this.OnRecastTimeChanging(value);
					this.SendPropertyChanging();
					this._RecastTime = value;
					this.SendPropertyChanged("RecastTime");
					this.OnRecastTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuffDurationFormula", DbType="Int")]
		public System.Nullable<int> BuffDurationFormula
		{
			get
			{
				return this._BuffDurationFormula;
			}
			set
			{
				if ((this._BuffDurationFormula != value))
				{
					this.OnBuffDurationFormulaChanging(value);
					this.SendPropertyChanging();
					this._BuffDurationFormula = value;
					this.SendPropertyChanged("BuffDurationFormula");
					this.OnBuffDurationFormulaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BuffDuration", DbType="Int")]
		public System.Nullable<int> BuffDuration
		{
			get
			{
				return this._BuffDuration;
			}
			set
			{
				if ((this._BuffDuration != value))
				{
					this.OnBuffDurationChanging(value);
					this.SendPropertyChanging();
					this._BuffDuration = value;
					this.SendPropertyChanged("BuffDuration");
					this.OnBuffDurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AEDuration", DbType="Int")]
		public System.Nullable<int> AEDuration
		{
			get
			{
				return this._AEDuration;
			}
			set
			{
				if ((this._AEDuration != value))
				{
					this.OnAEDurationChanging(value);
					this.SendPropertyChanging();
					this._AEDuration = value;
					this.SendPropertyChanged("AEDuration");
					this.OnAEDurationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mana", DbType="SmallInt NOT NULL")]
		public short Mana
		{
			get
			{
				return this._Mana;
			}
			set
			{
				if ((this._Mana != value))
				{
					this.OnManaChanging(value);
					this.SendPropertyChanging();
					this._Mana = value;
					this.SendPropertyChanged("Mana");
					this.OnManaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectBaseValue1", DbType="Float")]
		private System.Nullable<float> EffectBaseValue1
		{
			get
			{
				return this._EffectBaseValue1;
			}
			set
			{
				if ((this._EffectBaseValue1 != value))
				{
					this.OnEffectBaseValue1Changing(value);
					this.SendPropertyChanging();
					this._EffectBaseValue1 = value;
					this.SendPropertyChanged("EffectBaseValue1");
					this.OnEffectBaseValue1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectBaseValue2", DbType="Float")]
		private System.Nullable<float> EffectBaseValue2
		{
			get
			{
				return this._EffectBaseValue2;
			}
			set
			{
				if ((this._EffectBaseValue2 != value))
				{
					this.OnEffectBaseValue2Changing(value);
					this.SendPropertyChanging();
					this._EffectBaseValue2 = value;
					this.SendPropertyChanged("EffectBaseValue2");
					this.OnEffectBaseValue2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectBaseValue3", DbType="Float")]
		private System.Nullable<float> EffectBaseValue3
		{
			get
			{
				return this._EffectBaseValue3;
			}
			set
			{
				if ((this._EffectBaseValue3 != value))
				{
					this.OnEffectBaseValue3Changing(value);
					this.SendPropertyChanging();
					this._EffectBaseValue3 = value;
					this.SendPropertyChanged("EffectBaseValue3");
					this.OnEffectBaseValue3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectBaseValue4", DbType="Float")]
		private System.Nullable<float> EffectBaseValue4
		{
			get
			{
				return this._EffectBaseValue4;
			}
			set
			{
				if ((this._EffectBaseValue4 != value))
				{
					this.OnEffectBaseValue4Changing(value);
					this.SendPropertyChanging();
					this._EffectBaseValue4 = value;
					this.SendPropertyChanged("EffectBaseValue4");
					this.OnEffectBaseValue4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectBaseValue5", DbType="Float")]
		private System.Nullable<float> EffectBaseValue5
		{
			get
			{
				return this._EffectBaseValue5;
			}
			set
			{
				if ((this._EffectBaseValue5 != value))
				{
					this.OnEffectBaseValue5Changing(value);
					this.SendPropertyChanging();
					this._EffectBaseValue5 = value;
					this.SendPropertyChanged("EffectBaseValue5");
					this.OnEffectBaseValue5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectBaseValue6", DbType="Float")]
		private System.Nullable<float> EffectBaseValue6
		{
			get
			{
				return this._EffectBaseValue6;
			}
			set
			{
				if ((this._EffectBaseValue6 != value))
				{
					this.OnEffectBaseValue6Changing(value);
					this.SendPropertyChanging();
					this._EffectBaseValue6 = value;
					this.SendPropertyChanged("EffectBaseValue6");
					this.OnEffectBaseValue6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectBaseValue7", DbType="Float")]
		private System.Nullable<float> EffectBaseValue7
		{
			get
			{
				return this._EffectBaseValue7;
			}
			set
			{
				if ((this._EffectBaseValue7 != value))
				{
					this.OnEffectBaseValue7Changing(value);
					this.SendPropertyChanging();
					this._EffectBaseValue7 = value;
					this.SendPropertyChanged("EffectBaseValue7");
					this.OnEffectBaseValue7Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectBaseValue8", DbType="Float")]
		private System.Nullable<float> EffectBaseValue8
		{
			get
			{
				return this._EffectBaseValue8;
			}
			set
			{
				if ((this._EffectBaseValue8 != value))
				{
					this.OnEffectBaseValue8Changing(value);
					this.SendPropertyChanging();
					this._EffectBaseValue8 = value;
					this.SendPropertyChanged("EffectBaseValue8");
					this.OnEffectBaseValue8Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectBaseValue9", DbType="Float")]
		private System.Nullable<float> EffectBaseValue9
		{
			get
			{
				return this._EffectBaseValue9;
			}
			set
			{
				if ((this._EffectBaseValue9 != value))
				{
					this.OnEffectBaseValue9Changing(value);
					this.SendPropertyChanging();
					this._EffectBaseValue9 = value;
					this.SendPropertyChanged("EffectBaseValue9");
					this.OnEffectBaseValue9Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectBaseValue10", DbType="Float")]
		private System.Nullable<float> EffectBaseValue10
		{
			get
			{
				return this._EffectBaseValue10;
			}
			set
			{
				if ((this._EffectBaseValue10 != value))
				{
					this.OnEffectBaseValue10Changing(value);
					this.SendPropertyChanging();
					this._EffectBaseValue10 = value;
					this.SendPropertyChanged("EffectBaseValue10");
					this.OnEffectBaseValue10Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectBaseValue11", DbType="Float")]
		private System.Nullable<float> EffectBaseValue11
		{
			get
			{
				return this._EffectBaseValue11;
			}
			set
			{
				if ((this._EffectBaseValue11 != value))
				{
					this.OnEffectBaseValue11Changing(value);
					this.SendPropertyChanging();
					this._EffectBaseValue11 = value;
					this.SendPropertyChanged("EffectBaseValue11");
					this.OnEffectBaseValue11Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectBaseValue12", DbType="Float")]
		private System.Nullable<float> EffectBaseValue12
		{
			get
			{
				return this._EffectBaseValue12;
			}
			set
			{
				if ((this._EffectBaseValue12 != value))
				{
					this.OnEffectBaseValue12Changing(value);
					this.SendPropertyChanging();
					this._EffectBaseValue12 = value;
					this.SendPropertyChanged("EffectBaseValue12");
					this.OnEffectBaseValue12Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectLimitValue1", DbType="Float")]
		private System.Nullable<float> EffectLimitValue1
		{
			get
			{
				return this._EffectLimitValue1;
			}
			set
			{
				if ((this._EffectLimitValue1 != value))
				{
					this.OnEffectLimitValue1Changing(value);
					this.SendPropertyChanging();
					this._EffectLimitValue1 = value;
					this.SendPropertyChanged("EffectLimitValue1");
					this.OnEffectLimitValue1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectLimitValue2", DbType="Float")]
		private System.Nullable<float> EffectLimitValue2
		{
			get
			{
				return this._EffectLimitValue2;
			}
			set
			{
				if ((this._EffectLimitValue2 != value))
				{
					this.OnEffectLimitValue2Changing(value);
					this.SendPropertyChanging();
					this._EffectLimitValue2 = value;
					this.SendPropertyChanged("EffectLimitValue2");
					this.OnEffectLimitValue2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectLimitValue3", DbType="Float")]
		private System.Nullable<float> EffectLimitValue3
		{
			get
			{
				return this._EffectLimitValue3;
			}
			set
			{
				if ((this._EffectLimitValue3 != value))
				{
					this.OnEffectLimitValue3Changing(value);
					this.SendPropertyChanging();
					this._EffectLimitValue3 = value;
					this.SendPropertyChanged("EffectLimitValue3");
					this.OnEffectLimitValue3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectLimitValue4", DbType="Float")]
		private System.Nullable<float> EffectLimitValue4
		{
			get
			{
				return this._EffectLimitValue4;
			}
			set
			{
				if ((this._EffectLimitValue4 != value))
				{
					this.OnEffectLimitValue4Changing(value);
					this.SendPropertyChanging();
					this._EffectLimitValue4 = value;
					this.SendPropertyChanged("EffectLimitValue4");
					this.OnEffectLimitValue4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectLimitValue5", DbType="Float")]
		private System.Nullable<float> EffectLimitValue5
		{
			get
			{
				return this._EffectLimitValue5;
			}
			set
			{
				if ((this._EffectLimitValue5 != value))
				{
					this.OnEffectLimitValue5Changing(value);
					this.SendPropertyChanging();
					this._EffectLimitValue5 = value;
					this.SendPropertyChanged("EffectLimitValue5");
					this.OnEffectLimitValue5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectLimitValue6", DbType="Float")]
		private System.Nullable<float> EffectLimitValue6
		{
			get
			{
				return this._EffectLimitValue6;
			}
			set
			{
				if ((this._EffectLimitValue6 != value))
				{
					this.OnEffectLimitValue6Changing(value);
					this.SendPropertyChanging();
					this._EffectLimitValue6 = value;
					this.SendPropertyChanged("EffectLimitValue6");
					this.OnEffectLimitValue6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectLimitValue7", DbType="Float")]
		private System.Nullable<float> EffectLimitValue7
		{
			get
			{
				return this._EffectLimitValue7;
			}
			set
			{
				if ((this._EffectLimitValue7 != value))
				{
					this.OnEffectLimitValue7Changing(value);
					this.SendPropertyChanging();
					this._EffectLimitValue7 = value;
					this.SendPropertyChanged("EffectLimitValue7");
					this.OnEffectLimitValue7Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectLimitValue8", DbType="Float")]
		private System.Nullable<float> EffectLimitValue8
		{
			get
			{
				return this._EffectLimitValue8;
			}
			set
			{
				if ((this._EffectLimitValue8 != value))
				{
					this.OnEffectLimitValue8Changing(value);
					this.SendPropertyChanging();
					this._EffectLimitValue8 = value;
					this.SendPropertyChanged("EffectLimitValue8");
					this.OnEffectLimitValue8Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectLimitValue9", DbType="Float")]
		private System.Nullable<float> EffectLimitValue9
		{
			get
			{
				return this._EffectLimitValue9;
			}
			set
			{
				if ((this._EffectLimitValue9 != value))
				{
					this.OnEffectLimitValue9Changing(value);
					this.SendPropertyChanging();
					this._EffectLimitValue9 = value;
					this.SendPropertyChanged("EffectLimitValue9");
					this.OnEffectLimitValue9Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectLimitValue10", DbType="Float")]
		private System.Nullable<float> EffectLimitValue10
		{
			get
			{
				return this._EffectLimitValue10;
			}
			set
			{
				if ((this._EffectLimitValue10 != value))
				{
					this.OnEffectLimitValue10Changing(value);
					this.SendPropertyChanging();
					this._EffectLimitValue10 = value;
					this.SendPropertyChanged("EffectLimitValue10");
					this.OnEffectLimitValue10Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectLimitValue11", DbType="Float")]
		private System.Nullable<float> EffectLimitValue11
		{
			get
			{
				return this._EffectLimitValue11;
			}
			set
			{
				if ((this._EffectLimitValue11 != value))
				{
					this.OnEffectLimitValue11Changing(value);
					this.SendPropertyChanging();
					this._EffectLimitValue11 = value;
					this.SendPropertyChanged("EffectLimitValue11");
					this.OnEffectLimitValue11Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectLimitValue12", DbType="Float")]
		private System.Nullable<float> EffectLimitValue12
		{
			get
			{
				return this._EffectLimitValue12;
			}
			set
			{
				if ((this._EffectLimitValue12 != value))
				{
					this.OnEffectLimitValue12Changing(value);
					this.SendPropertyChanging();
					this._EffectLimitValue12 = value;
					this.SendPropertyChanged("EffectLimitValue12");
					this.OnEffectLimitValue12Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectMaxValue1", DbType="Float")]
		private System.Nullable<float> EffectMaxValue1
		{
			get
			{
				return this._EffectMaxValue1;
			}
			set
			{
				if ((this._EffectMaxValue1 != value))
				{
					this.OnEffectMaxValue1Changing(value);
					this.SendPropertyChanging();
					this._EffectMaxValue1 = value;
					this.SendPropertyChanged("EffectMaxValue1");
					this.OnEffectMaxValue1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectMaxValue2", DbType="Float")]
		private System.Nullable<float> EffectMaxValue2
		{
			get
			{
				return this._EffectMaxValue2;
			}
			set
			{
				if ((this._EffectMaxValue2 != value))
				{
					this.OnEffectMaxValue2Changing(value);
					this.SendPropertyChanging();
					this._EffectMaxValue2 = value;
					this.SendPropertyChanged("EffectMaxValue2");
					this.OnEffectMaxValue2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectMaxValue3", DbType="Float")]
		private System.Nullable<float> EffectMaxValue3
		{
			get
			{
				return this._EffectMaxValue3;
			}
			set
			{
				if ((this._EffectMaxValue3 != value))
				{
					this.OnEffectMaxValue3Changing(value);
					this.SendPropertyChanging();
					this._EffectMaxValue3 = value;
					this.SendPropertyChanged("EffectMaxValue3");
					this.OnEffectMaxValue3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectMaxValue4", DbType="Float")]
		private System.Nullable<float> EffectMaxValue4
		{
			get
			{
				return this._EffectMaxValue4;
			}
			set
			{
				if ((this._EffectMaxValue4 != value))
				{
					this.OnEffectMaxValue4Changing(value);
					this.SendPropertyChanging();
					this._EffectMaxValue4 = value;
					this.SendPropertyChanged("EffectMaxValue4");
					this.OnEffectMaxValue4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectMaxValue5", DbType="Float")]
		private System.Nullable<float> EffectMaxValue5
		{
			get
			{
				return this._EffectMaxValue5;
			}
			set
			{
				if ((this._EffectMaxValue5 != value))
				{
					this.OnEffectMaxValue5Changing(value);
					this.SendPropertyChanging();
					this._EffectMaxValue5 = value;
					this.SendPropertyChanged("EffectMaxValue5");
					this.OnEffectMaxValue5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectMaxValue6", DbType="Float")]
		private System.Nullable<float> EffectMaxValue6
		{
			get
			{
				return this._EffectMaxValue6;
			}
			set
			{
				if ((this._EffectMaxValue6 != value))
				{
					this.OnEffectMaxValue6Changing(value);
					this.SendPropertyChanging();
					this._EffectMaxValue6 = value;
					this.SendPropertyChanged("EffectMaxValue6");
					this.OnEffectMaxValue6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectMaxValue7", DbType="Float")]
		private System.Nullable<float> EffectMaxValue7
		{
			get
			{
				return this._EffectMaxValue7;
			}
			set
			{
				if ((this._EffectMaxValue7 != value))
				{
					this.OnEffectMaxValue7Changing(value);
					this.SendPropertyChanging();
					this._EffectMaxValue7 = value;
					this.SendPropertyChanged("EffectMaxValue7");
					this.OnEffectMaxValue7Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectMaxValue8", DbType="Float")]
		private System.Nullable<float> EffectMaxValue8
		{
			get
			{
				return this._EffectMaxValue8;
			}
			set
			{
				if ((this._EffectMaxValue8 != value))
				{
					this.OnEffectMaxValue8Changing(value);
					this.SendPropertyChanging();
					this._EffectMaxValue8 = value;
					this.SendPropertyChanged("EffectMaxValue8");
					this.OnEffectMaxValue8Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectMaxValue9", DbType="Float")]
		private System.Nullable<float> EffectMaxValue9
		{
			get
			{
				return this._EffectMaxValue9;
			}
			set
			{
				if ((this._EffectMaxValue9 != value))
				{
					this.OnEffectMaxValue9Changing(value);
					this.SendPropertyChanging();
					this._EffectMaxValue9 = value;
					this.SendPropertyChanged("EffectMaxValue9");
					this.OnEffectMaxValue9Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectMaxValue10", DbType="Float")]
		private System.Nullable<float> EffectMaxValue10
		{
			get
			{
				return this._EffectMaxValue10;
			}
			set
			{
				if ((this._EffectMaxValue10 != value))
				{
					this.OnEffectMaxValue10Changing(value);
					this.SendPropertyChanging();
					this._EffectMaxValue10 = value;
					this.SendPropertyChanged("EffectMaxValue10");
					this.OnEffectMaxValue10Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectMaxValue11", DbType="Float")]
		private System.Nullable<float> EffectMaxValue11
		{
			get
			{
				return this._EffectMaxValue11;
			}
			set
			{
				if ((this._EffectMaxValue11 != value))
				{
					this.OnEffectMaxValue11Changing(value);
					this.SendPropertyChanging();
					this._EffectMaxValue11 = value;
					this.SendPropertyChanged("EffectMaxValue11");
					this.OnEffectMaxValue11Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectMaxValue12", DbType="Float")]
		private System.Nullable<float> EffectMaxValue12
		{
			get
			{
				return this._EffectMaxValue12;
			}
			set
			{
				if ((this._EffectMaxValue12 != value))
				{
					this.OnEffectMaxValue12Changing(value);
					this.SendPropertyChanging();
					this._EffectMaxValue12 = value;
					this.SendPropertyChanged("EffectMaxValue12");
					this.OnEffectMaxValue12Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldSpellIcon", DbType="SmallInt")]
		public System.Nullable<short> OldSpellIcon
		{
			get
			{
				return this._OldSpellIcon;
			}
			set
			{
				if ((this._OldSpellIcon != value))
				{
					this.OnOldSpellIconChanging(value);
					this.SendPropertyChanging();
					this._OldSpellIcon = value;
					this.SendPropertyChanged("OldSpellIcon");
					this.OnOldSpellIconChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OldMemIcon", DbType="SmallInt")]
		public System.Nullable<short> OldMemIcon
		{
			get
			{
				return this._OldMemIcon;
			}
			set
			{
				if ((this._OldMemIcon != value))
				{
					this.OnOldMemIconChanging(value);
					this.SendPropertyChanging();
					this._OldMemIcon = value;
					this.SendPropertyChanged("OldMemIcon");
					this.OnOldMemIconChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reagent1", DbType="Int")]
		public System.Nullable<int> Reagent1
		{
			get
			{
				return this._Reagent1;
			}
			set
			{
				if ((this._Reagent1 != value))
				{
					this.OnReagent1Changing(value);
					this.SendPropertyChanging();
					this._Reagent1 = value;
					this.SendPropertyChanged("Reagent1");
					this.OnReagent1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reagent2", DbType="Int")]
		public System.Nullable<int> Reagent2
		{
			get
			{
				return this._Reagent2;
			}
			set
			{
				if ((this._Reagent2 != value))
				{
					this.OnReagent2Changing(value);
					this.SendPropertyChanging();
					this._Reagent2 = value;
					this.SendPropertyChanged("Reagent2");
					this.OnReagent2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reagent3", DbType="Int")]
		public System.Nullable<int> Reagent3
		{
			get
			{
				return this._Reagent3;
			}
			set
			{
				if ((this._Reagent3 != value))
				{
					this.OnReagent3Changing(value);
					this.SendPropertyChanging();
					this._Reagent3 = value;
					this.SendPropertyChanged("Reagent3");
					this.OnReagent3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Reagent4", DbType="Int")]
		public System.Nullable<int> Reagent4
		{
			get
			{
				return this._Reagent4;
			}
			set
			{
				if ((this._Reagent4 != value))
				{
					this.OnReagent4Changing(value);
					this.SendPropertyChanging();
					this._Reagent4 = value;
					this.SendPropertyChanged("Reagent4");
					this.OnReagent4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReagentAmount1", DbType="Int")]
		public System.Nullable<int> ReagentAmount1
		{
			get
			{
				return this._ReagentAmount1;
			}
			set
			{
				if ((this._ReagentAmount1 != value))
				{
					this.OnReagentAmount1Changing(value);
					this.SendPropertyChanging();
					this._ReagentAmount1 = value;
					this.SendPropertyChanged("ReagentAmount1");
					this.OnReagentAmount1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReagentAmount2", DbType="Int")]
		public System.Nullable<int> ReagentAmount2
		{
			get
			{
				return this._ReagentAmount2;
			}
			set
			{
				if ((this._ReagentAmount2 != value))
				{
					this.OnReagentAmount2Changing(value);
					this.SendPropertyChanging();
					this._ReagentAmount2 = value;
					this.SendPropertyChanged("ReagentAmount2");
					this.OnReagentAmount2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReagentAmount3", DbType="Int")]
		public System.Nullable<int> ReagentAmount3
		{
			get
			{
				return this._ReagentAmount3;
			}
			set
			{
				if ((this._ReagentAmount3 != value))
				{
					this.OnReagentAmount3Changing(value);
					this.SendPropertyChanging();
					this._ReagentAmount3 = value;
					this.SendPropertyChanged("ReagentAmount3");
					this.OnReagentAmount3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReagentAmount4", DbType="Int")]
		public System.Nullable<int> ReagentAmount4
		{
			get
			{
				return this._ReagentAmount4;
			}
			set
			{
				if ((this._ReagentAmount4 != value))
				{
					this.OnReagentAmount4Changing(value);
					this.SendPropertyChanging();
					this._ReagentAmount4 = value;
					this.SendPropertyChanged("ReagentAmount4");
					this.OnReagentAmount4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoExpendReagent1", DbType="Int")]
		public System.Nullable<int> NoExpendReagent1
		{
			get
			{
				return this._NoExpendReagent1;
			}
			set
			{
				if ((this._NoExpendReagent1 != value))
				{
					this.OnNoExpendReagent1Changing(value);
					this.SendPropertyChanging();
					this._NoExpendReagent1 = value;
					this.SendPropertyChanged("NoExpendReagent1");
					this.OnNoExpendReagent1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoExpendReagent2", DbType="Int")]
		public System.Nullable<int> NoExpendReagent2
		{
			get
			{
				return this._NoExpendReagent2;
			}
			set
			{
				if ((this._NoExpendReagent2 != value))
				{
					this.OnNoExpendReagent2Changing(value);
					this.SendPropertyChanging();
					this._NoExpendReagent2 = value;
					this.SendPropertyChanged("NoExpendReagent2");
					this.OnNoExpendReagent2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoExpendReagent3", DbType="Int")]
		public System.Nullable<int> NoExpendReagent3
		{
			get
			{
				return this._NoExpendReagent3;
			}
			set
			{
				if ((this._NoExpendReagent3 != value))
				{
					this.OnNoExpendReagent3Changing(value);
					this.SendPropertyChanging();
					this._NoExpendReagent3 = value;
					this.SendPropertyChanged("NoExpendReagent3");
					this.OnNoExpendReagent3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoExpendReagent4", DbType="Int")]
		public System.Nullable<int> NoExpendReagent4
		{
			get
			{
				return this._NoExpendReagent4;
			}
			set
			{
				if ((this._NoExpendReagent4 != value))
				{
					this.OnNoExpendReagent4Changing(value);
					this.SendPropertyChanging();
					this._NoExpendReagent4 = value;
					this.SendPropertyChanged("NoExpendReagent4");
					this.OnNoExpendReagent4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpellValueFormula1", DbType="SmallInt")]
		private System.Nullable<short> SpellValueFormula1
		{
			get
			{
				return this._SpellValueFormula1;
			}
			set
			{
				if ((this._SpellValueFormula1 != value))
				{
					this.OnSpellValueFormula1Changing(value);
					this.SendPropertyChanging();
					this._SpellValueFormula1 = value;
					this.SendPropertyChanged("SpellValueFormula1");
					this.OnSpellValueFormula1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpellValueFormula2", DbType="SmallInt")]
		private System.Nullable<short> SpellValueFormula2
		{
			get
			{
				return this._SpellValueFormula2;
			}
			set
			{
				if ((this._SpellValueFormula2 != value))
				{
					this.OnSpellValueFormula2Changing(value);
					this.SendPropertyChanging();
					this._SpellValueFormula2 = value;
					this.SendPropertyChanged("SpellValueFormula2");
					this.OnSpellValueFormula2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpellValueFormula3", DbType="SmallInt")]
		private System.Nullable<short> SpellValueFormula3
		{
			get
			{
				return this._SpellValueFormula3;
			}
			set
			{
				if ((this._SpellValueFormula3 != value))
				{
					this.OnSpellValueFormula3Changing(value);
					this.SendPropertyChanging();
					this._SpellValueFormula3 = value;
					this.SendPropertyChanged("SpellValueFormula3");
					this.OnSpellValueFormula3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpellValueFormula4", DbType="SmallInt")]
		private System.Nullable<short> SpellValueFormula4
		{
			get
			{
				return this._SpellValueFormula4;
			}
			set
			{
				if ((this._SpellValueFormula4 != value))
				{
					this.OnSpellValueFormula4Changing(value);
					this.SendPropertyChanging();
					this._SpellValueFormula4 = value;
					this.SendPropertyChanged("SpellValueFormula4");
					this.OnSpellValueFormula4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpellValueFormula5", DbType="SmallInt")]
		private System.Nullable<short> SpellValueFormula5
		{
			get
			{
				return this._SpellValueFormula5;
			}
			set
			{
				if ((this._SpellValueFormula5 != value))
				{
					this.OnSpellValueFormula5Changing(value);
					this.SendPropertyChanging();
					this._SpellValueFormula5 = value;
					this.SendPropertyChanged("SpellValueFormula5");
					this.OnSpellValueFormula5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpellValueFormula6", DbType="SmallInt")]
		private System.Nullable<short> SpellValueFormula6
		{
			get
			{
				return this._SpellValueFormula6;
			}
			set
			{
				if ((this._SpellValueFormula6 != value))
				{
					this.OnSpellValueFormula6Changing(value);
					this.SendPropertyChanging();
					this._SpellValueFormula6 = value;
					this.SendPropertyChanged("SpellValueFormula6");
					this.OnSpellValueFormula6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpellValueFormula7", DbType="SmallInt")]
		private System.Nullable<short> SpellValueFormula7
		{
			get
			{
				return this._SpellValueFormula7;
			}
			set
			{
				if ((this._SpellValueFormula7 != value))
				{
					this.OnSpellValueFormula7Changing(value);
					this.SendPropertyChanging();
					this._SpellValueFormula7 = value;
					this.SendPropertyChanged("SpellValueFormula7");
					this.OnSpellValueFormula7Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpellValueFormula8", DbType="SmallInt")]
		private System.Nullable<short> SpellValueFormula8
		{
			get
			{
				return this._SpellValueFormula8;
			}
			set
			{
				if ((this._SpellValueFormula8 != value))
				{
					this.OnSpellValueFormula8Changing(value);
					this.SendPropertyChanging();
					this._SpellValueFormula8 = value;
					this.SendPropertyChanged("SpellValueFormula8");
					this.OnSpellValueFormula8Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpellValueFormula9", DbType="SmallInt")]
		private System.Nullable<short> SpellValueFormula9
		{
			get
			{
				return this._SpellValueFormula9;
			}
			set
			{
				if ((this._SpellValueFormula9 != value))
				{
					this.OnSpellValueFormula9Changing(value);
					this.SendPropertyChanging();
					this._SpellValueFormula9 = value;
					this.SendPropertyChanged("SpellValueFormula9");
					this.OnSpellValueFormula9Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpellValueFormula10", DbType="SmallInt")]
		private System.Nullable<short> SpellValueFormula10
		{
			get
			{
				return this._SpellValueFormula10;
			}
			set
			{
				if ((this._SpellValueFormula10 != value))
				{
					this.OnSpellValueFormula10Changing(value);
					this.SendPropertyChanging();
					this._SpellValueFormula10 = value;
					this.SendPropertyChanged("SpellValueFormula10");
					this.OnSpellValueFormula10Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpellValueFormula11", DbType="SmallInt")]
		private System.Nullable<short> SpellValueFormula11
		{
			get
			{
				return this._SpellValueFormula11;
			}
			set
			{
				if ((this._SpellValueFormula11 != value))
				{
					this.OnSpellValueFormula11Changing(value);
					this.SendPropertyChanging();
					this._SpellValueFormula11 = value;
					this.SendPropertyChanged("SpellValueFormula11");
					this.OnSpellValueFormula11Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpellValueFormula12", DbType="SmallInt")]
		private System.Nullable<short> SpellValueFormula12
		{
			get
			{
				return this._SpellValueFormula12;
			}
			set
			{
				if ((this._SpellValueFormula12 != value))
				{
					this.OnSpellValueFormula12Changing(value);
					this.SendPropertyChanging();
					this._SpellValueFormula12 = value;
					this.SendPropertyChanged("SpellValueFormula12");
					this.OnSpellValueFormula12Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LightType", DbType="Int")]
		public System.Nullable<int> LightType
		{
			get
			{
				return this._LightType;
			}
			set
			{
				if ((this._LightType != value))
				{
					this.OnLightTypeChanging(value);
					this.SendPropertyChanging();
					this._LightType = value;
					this.SendPropertyChanged("LightType");
					this.OnLightTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GoodEffect", DbType="SmallInt NOT NULL")]
		public short GoodEffect
		{
			get
			{
				return this._GoodEffect;
			}
			set
			{
				if ((this._GoodEffect != value))
				{
					this.OnGoodEffectChanging(value);
					this.SendPropertyChanging();
					this._GoodEffect = value;
					this.SendPropertyChanged("GoodEffect");
					this.OnGoodEffectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Activated", DbType="Int")]
		public System.Nullable<int> Activated
		{
			get
			{
				return this._Activated;
			}
			set
			{
				if ((this._Activated != value))
				{
					this.OnActivatedChanging(value);
					this.SendPropertyChanging();
					this._Activated = value;
					this.SendPropertyChanged("Activated");
					this.OnActivatedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResistType", DbType="SmallInt")]
		public System.Nullable<short> ResistType
		{
			get
			{
				return this._ResistType;
			}
			set
			{
				if ((this._ResistType != value))
				{
					this.OnResistTypeChanging(value);
					this.SendPropertyChanging();
					this._ResistType = value;
					this.SendPropertyChanged("ResistType");
					this.OnResistTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectId1", DbType="SmallInt")]
		private System.Nullable<short> EffectId1
		{
			get
			{
				return this._EffectId1;
			}
			set
			{
				if ((this._EffectId1 != value))
				{
					this.OnEffectId1Changing(value);
					this.SendPropertyChanging();
					this._EffectId1 = value;
					this.SendPropertyChanged("EffectId1");
					this.OnEffectId1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectId2", DbType="SmallInt")]
		private System.Nullable<short> EffectId2
		{
			get
			{
				return this._EffectId2;
			}
			set
			{
				if ((this._EffectId2 != value))
				{
					this.OnEffectId2Changing(value);
					this.SendPropertyChanging();
					this._EffectId2 = value;
					this.SendPropertyChanged("EffectId2");
					this.OnEffectId2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectId3", DbType="SmallInt")]
		private System.Nullable<short> EffectId3
		{
			get
			{
				return this._EffectId3;
			}
			set
			{
				if ((this._EffectId3 != value))
				{
					this.OnEffectId3Changing(value);
					this.SendPropertyChanging();
					this._EffectId3 = value;
					this.SendPropertyChanged("EffectId3");
					this.OnEffectId3Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectId4", DbType="SmallInt")]
		private System.Nullable<short> EffectId4
		{
			get
			{
				return this._EffectId4;
			}
			set
			{
				if ((this._EffectId4 != value))
				{
					this.OnEffectId4Changing(value);
					this.SendPropertyChanging();
					this._EffectId4 = value;
					this.SendPropertyChanged("EffectId4");
					this.OnEffectId4Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectId5", DbType="SmallInt")]
		private System.Nullable<short> EffectId5
		{
			get
			{
				return this._EffectId5;
			}
			set
			{
				if ((this._EffectId5 != value))
				{
					this.OnEffectId5Changing(value);
					this.SendPropertyChanging();
					this._EffectId5 = value;
					this.SendPropertyChanged("EffectId5");
					this.OnEffectId5Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectId6", DbType="SmallInt")]
		private System.Nullable<short> EffectId6
		{
			get
			{
				return this._EffectId6;
			}
			set
			{
				if ((this._EffectId6 != value))
				{
					this.OnEffectId6Changing(value);
					this.SendPropertyChanging();
					this._EffectId6 = value;
					this.SendPropertyChanged("EffectId6");
					this.OnEffectId6Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectId7", DbType="SmallInt")]
		private System.Nullable<short> EffectId7
		{
			get
			{
				return this._EffectId7;
			}
			set
			{
				if ((this._EffectId7 != value))
				{
					this.OnEffectId7Changing(value);
					this.SendPropertyChanging();
					this._EffectId7 = value;
					this.SendPropertyChanged("EffectId7");
					this.OnEffectId7Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectId8", DbType="SmallInt")]
		private System.Nullable<short> EffectId8
		{
			get
			{
				return this._EffectId8;
			}
			set
			{
				if ((this._EffectId8 != value))
				{
					this.OnEffectId8Changing(value);
					this.SendPropertyChanging();
					this._EffectId8 = value;
					this.SendPropertyChanged("EffectId8");
					this.OnEffectId8Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectId9", DbType="SmallInt")]
		private System.Nullable<short> EffectId9
		{
			get
			{
				return this._EffectId9;
			}
			set
			{
				if ((this._EffectId9 != value))
				{
					this.OnEffectId9Changing(value);
					this.SendPropertyChanging();
					this._EffectId9 = value;
					this.SendPropertyChanged("EffectId9");
					this.OnEffectId9Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectId10", DbType="SmallInt")]
		private System.Nullable<short> EffectId10
		{
			get
			{
				return this._EffectId10;
			}
			set
			{
				if ((this._EffectId10 != value))
				{
					this.OnEffectId10Changing(value);
					this.SendPropertyChanging();
					this._EffectId10 = value;
					this.SendPropertyChanged("EffectId10");
					this.OnEffectId10Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectId11", DbType="SmallInt")]
		private System.Nullable<short> EffectId11
		{
			get
			{
				return this._EffectId11;
			}
			set
			{
				if ((this._EffectId11 != value))
				{
					this.OnEffectId11Changing(value);
					this.SendPropertyChanging();
					this._EffectId11 = value;
					this.SendPropertyChanged("EffectId11");
					this.OnEffectId11Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectId12", DbType="SmallInt")]
		private System.Nullable<short> EffectId12
		{
			get
			{
				return this._EffectId12;
			}
			set
			{
				if ((this._EffectId12 != value))
				{
					this.OnEffectId12Changing(value);
					this.SendPropertyChanging();
					this._EffectId12 = value;
					this.SendPropertyChanged("EffectId12");
					this.OnEffectId12Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetType", DbType="SmallInt NOT NULL")]
		public short TargetType
		{
			get
			{
				return this._TargetType;
			}
			set
			{
				if ((this._TargetType != value))
				{
					this.OnTargetTypeChanging(value);
					this.SendPropertyChanging();
					this._TargetType = value;
					this.SendPropertyChanged("TargetType");
					this.OnTargetTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BaseFizzle", DbType="TinyInt NOT NULL")]
		public byte BaseFizzle
		{
			get
			{
				return this._BaseFizzle;
			}
			set
			{
				if ((this._BaseFizzle != value))
				{
					this.OnBaseFizzleChanging(value);
					this.SendPropertyChanging();
					this._BaseFizzle = value;
					this.SendPropertyChanged("BaseFizzle");
					this.OnBaseFizzleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Skill", DbType="SmallInt NOT NULL")]
		public short Skill
		{
			get
			{
				return this._Skill;
			}
			set
			{
				if ((this._Skill != value))
				{
					this.OnSkillChanging(value);
					this.SendPropertyChanging();
					this._Skill = value;
					this.SendPropertyChanged("Skill");
					this.OnSkillChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZoneType", DbType="SmallInt")]
		public System.Nullable<short> ZoneType
		{
			get
			{
				return this._ZoneType;
			}
			set
			{
				if ((this._ZoneType != value))
				{
					this.OnZoneTypeChanging(value);
					this.SendPropertyChanging();
					this._ZoneType = value;
					this.SendPropertyChanged("ZoneType");
					this.OnZoneTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnvironmentType", DbType="SmallInt")]
		public System.Nullable<short> EnvironmentType
		{
			get
			{
				return this._EnvironmentType;
			}
			set
			{
				if ((this._EnvironmentType != value))
				{
					this.OnEnvironmentTypeChanging(value);
					this.SendPropertyChanging();
					this._EnvironmentType = value;
					this.SendPropertyChanged("EnvironmentType");
					this.OnEnvironmentTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeOfDay", DbType="Int")]
		public System.Nullable<int> TimeOfDay
		{
			get
			{
				return this._TimeOfDay;
			}
			set
			{
				if ((this._TimeOfDay != value))
				{
					this.OnTimeOfDayChanging(value);
					this.SendPropertyChanging();
					this._TimeOfDay = value;
					this.SendPropertyChanged("TimeOfDay");
					this.OnTimeOfDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WarriorReqLevel", DbType="SmallInt")]
		public System.Nullable<short> WarriorReqLevel
		{
			get
			{
				return this._WarriorReqLevel;
			}
			set
			{
				if ((this._WarriorReqLevel != value))
				{
					this.OnWarriorReqLevelChanging(value);
					this.SendPropertyChanging();
					this._WarriorReqLevel = value;
					this.SendPropertyChanged("WarriorReqLevel");
					this.OnWarriorReqLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClericReqLevel", DbType="SmallInt")]
		public System.Nullable<short> ClericReqLevel
		{
			get
			{
				return this._ClericReqLevel;
			}
			set
			{
				if ((this._ClericReqLevel != value))
				{
					this.OnClericReqLevelChanging(value);
					this.SendPropertyChanging();
					this._ClericReqLevel = value;
					this.SendPropertyChanged("ClericReqLevel");
					this.OnClericReqLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PaladinReqLevel", DbType="SmallInt")]
		public System.Nullable<short> PaladinReqLevel
		{
			get
			{
				return this._PaladinReqLevel;
			}
			set
			{
				if ((this._PaladinReqLevel != value))
				{
					this.OnPaladinReqLevelChanging(value);
					this.SendPropertyChanging();
					this._PaladinReqLevel = value;
					this.SendPropertyChanged("PaladinReqLevel");
					this.OnPaladinReqLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RangerReqLevel", DbType="SmallInt")]
		public System.Nullable<short> RangerReqLevel
		{
			get
			{
				return this._RangerReqLevel;
			}
			set
			{
				if ((this._RangerReqLevel != value))
				{
					this.OnRangerReqLevelChanging(value);
					this.SendPropertyChanging();
					this._RangerReqLevel = value;
					this.SendPropertyChanged("RangerReqLevel");
					this.OnRangerReqLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShadowknightReqLevel", DbType="SmallInt")]
		public System.Nullable<short> ShadowknightReqLevel
		{
			get
			{
				return this._ShadowknightReqLevel;
			}
			set
			{
				if ((this._ShadowknightReqLevel != value))
				{
					this.OnShadowknightReqLevelChanging(value);
					this.SendPropertyChanging();
					this._ShadowknightReqLevel = value;
					this.SendPropertyChanged("ShadowknightReqLevel");
					this.OnShadowknightReqLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DruidReqLevel", DbType="SmallInt")]
		public System.Nullable<short> DruidReqLevel
		{
			get
			{
				return this._DruidReqLevel;
			}
			set
			{
				if ((this._DruidReqLevel != value))
				{
					this.OnDruidReqLevelChanging(value);
					this.SendPropertyChanging();
					this._DruidReqLevel = value;
					this.SendPropertyChanged("DruidReqLevel");
					this.OnDruidReqLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MonkReqLevel", DbType="SmallInt")]
		public System.Nullable<short> MonkReqLevel
		{
			get
			{
				return this._MonkReqLevel;
			}
			set
			{
				if ((this._MonkReqLevel != value))
				{
					this.OnMonkReqLevelChanging(value);
					this.SendPropertyChanging();
					this._MonkReqLevel = value;
					this.SendPropertyChanged("MonkReqLevel");
					this.OnMonkReqLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BardReqLevel", DbType="SmallInt")]
		public System.Nullable<short> BardReqLevel
		{
			get
			{
				return this._BardReqLevel;
			}
			set
			{
				if ((this._BardReqLevel != value))
				{
					this.OnBardReqLevelChanging(value);
					this.SendPropertyChanging();
					this._BardReqLevel = value;
					this.SendPropertyChanged("BardReqLevel");
					this.OnBardReqLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RogueReqLevel", DbType="SmallInt")]
		public System.Nullable<short> RogueReqLevel
		{
			get
			{
				return this._RogueReqLevel;
			}
			set
			{
				if ((this._RogueReqLevel != value))
				{
					this.OnRogueReqLevelChanging(value);
					this.SendPropertyChanging();
					this._RogueReqLevel = value;
					this.SendPropertyChanged("RogueReqLevel");
					this.OnRogueReqLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShamanReqLevel", DbType="SmallInt")]
		public System.Nullable<short> ShamanReqLevel
		{
			get
			{
				return this._ShamanReqLevel;
			}
			set
			{
				if ((this._ShamanReqLevel != value))
				{
					this.OnShamanReqLevelChanging(value);
					this.SendPropertyChanging();
					this._ShamanReqLevel = value;
					this.SendPropertyChanged("ShamanReqLevel");
					this.OnShamanReqLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NecromancerReqLevel", DbType="SmallInt")]
		public System.Nullable<short> NecromancerReqLevel
		{
			get
			{
				return this._NecromancerReqLevel;
			}
			set
			{
				if ((this._NecromancerReqLevel != value))
				{
					this.OnNecromancerReqLevelChanging(value);
					this.SendPropertyChanging();
					this._NecromancerReqLevel = value;
					this.SendPropertyChanged("NecromancerReqLevel");
					this.OnNecromancerReqLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WizardReqLevel", DbType="SmallInt")]
		public System.Nullable<short> WizardReqLevel
		{
			get
			{
				return this._WizardReqLevel;
			}
			set
			{
				if ((this._WizardReqLevel != value))
				{
					this.OnWizardReqLevelChanging(value);
					this.SendPropertyChanging();
					this._WizardReqLevel = value;
					this.SendPropertyChanged("WizardReqLevel");
					this.OnWizardReqLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MagicianReqLevel", DbType="SmallInt")]
		public System.Nullable<short> MagicianReqLevel
		{
			get
			{
				return this._MagicianReqLevel;
			}
			set
			{
				if ((this._MagicianReqLevel != value))
				{
					this.OnMagicianReqLevelChanging(value);
					this.SendPropertyChanging();
					this._MagicianReqLevel = value;
					this.SendPropertyChanged("MagicianReqLevel");
					this.OnMagicianReqLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnchanterReqLevel", DbType="SmallInt")]
		public System.Nullable<short> EnchanterReqLevel
		{
			get
			{
				return this._EnchanterReqLevel;
			}
			set
			{
				if ((this._EnchanterReqLevel != value))
				{
					this.OnEnchanterReqLevelChanging(value);
					this.SendPropertyChanging();
					this._EnchanterReqLevel = value;
					this.SendPropertyChanged("EnchanterReqLevel");
					this.OnEnchanterReqLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeastlordReqLevel", DbType="SmallInt")]
		public System.Nullable<short> BeastlordReqLevel
		{
			get
			{
				return this._BeastlordReqLevel;
			}
			set
			{
				if ((this._BeastlordReqLevel != value))
				{
					this.OnBeastlordReqLevelChanging(value);
					this.SendPropertyChanging();
					this._BeastlordReqLevel = value;
					this.SendPropertyChanged("BeastlordReqLevel");
					this.OnBeastlordReqLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BeserkerReqLevel", DbType="SmallInt")]
		public System.Nullable<short> BeserkerReqLevel
		{
			get
			{
				return this._BeserkerReqLevel;
			}
			set
			{
				if ((this._BeserkerReqLevel != value))
				{
					this.OnBeserkerReqLevelChanging(value);
					this.SendPropertyChanging();
					this._BeserkerReqLevel = value;
					this.SendPropertyChanged("BeserkerReqLevel");
					this.OnBeserkerReqLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CastingAnimation", DbType="SmallInt")]
		public System.Nullable<short> CastingAnimation
		{
			get
			{
				return this._CastingAnimation;
			}
			set
			{
				if ((this._CastingAnimation != value))
				{
					this.OnCastingAnimationChanging(value);
					this.SendPropertyChanging();
					this._CastingAnimation = value;
					this.SendPropertyChanged("CastingAnimation");
					this.OnCastingAnimationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TargetAnimation", DbType="SmallInt")]
		public System.Nullable<short> TargetAnimation
		{
			get
			{
				return this._TargetAnimation;
			}
			set
			{
				if ((this._TargetAnimation != value))
				{
					this.OnTargetAnimationChanging(value);
					this.SendPropertyChanging();
					this._TargetAnimation = value;
					this.SendPropertyChanged("TargetAnimation");
					this.OnTargetAnimationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TravelType", DbType="Int")]
		public System.Nullable<int> TravelType
		{
			get
			{
				return this._TravelType;
			}
			set
			{
				if ((this._TravelType != value))
				{
					this.OnTravelTypeChanging(value);
					this.SendPropertyChanging();
					this._TravelType = value;
					this.SendPropertyChanged("TravelType");
					this.OnTravelTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpellAffectIndex", DbType="SmallInt")]
		public System.Nullable<short> SpellAffectIndex
		{
			get
			{
				return this._SpellAffectIndex;
			}
			set
			{
				if ((this._SpellAffectIndex != value))
				{
					this.OnSpellAffectIndexChanging(value);
					this.SendPropertyChanging();
					this._SpellAffectIndex = value;
					this.SendPropertyChanged("SpellAffectIndex");
					this.OnSpellAffectIndexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BertoxRestrict", DbType="SmallInt NOT NULL")]
		public short BertoxRestrict
		{
			get
			{
				return this._BertoxRestrict;
			}
			set
			{
				if ((this._BertoxRestrict != value))
				{
					this.OnBertoxRestrictChanging(value);
					this.SendPropertyChanging();
					this._BertoxRestrict = value;
					this.SendPropertyChanged("BertoxRestrict");
					this.OnBertoxRestrictChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BrellRestrict", DbType="SmallInt NOT NULL")]
		public short BrellRestrict
		{
			get
			{
				return this._BrellRestrict;
			}
			set
			{
				if ((this._BrellRestrict != value))
				{
					this.OnBrellRestrictChanging(value);
					this.SendPropertyChanging();
					this._BrellRestrict = value;
					this.SendPropertyChanged("BrellRestrict");
					this.OnBrellRestrictChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CazicRestrict", DbType="SmallInt NOT NULL")]
		public short CazicRestrict
		{
			get
			{
				return this._CazicRestrict;
			}
			set
			{
				if ((this._CazicRestrict != value))
				{
					this.OnCazicRestrictChanging(value);
					this.SendPropertyChanging();
					this._CazicRestrict = value;
					this.SendPropertyChanged("CazicRestrict");
					this.OnCazicRestrictChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ErollisiRestrict", DbType="SmallInt NOT NULL")]
		public short ErollisiRestrict
		{
			get
			{
				return this._ErollisiRestrict;
			}
			set
			{
				if ((this._ErollisiRestrict != value))
				{
					this.OnErollisiRestrictChanging(value);
					this.SendPropertyChanging();
					this._ErollisiRestrict = value;
					this.SendPropertyChanged("ErollisiRestrict");
					this.OnErollisiRestrictChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BristlebaneRestrict", DbType="SmallInt NOT NULL")]
		public short BristlebaneRestrict
		{
			get
			{
				return this._BristlebaneRestrict;
			}
			set
			{
				if ((this._BristlebaneRestrict != value))
				{
					this.OnBristlebaneRestrictChanging(value);
					this.SendPropertyChanging();
					this._BristlebaneRestrict = value;
					this.SendPropertyChanged("BristlebaneRestrict");
					this.OnBristlebaneRestrictChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InnorukRestrict", DbType="SmallInt NOT NULL")]
		public short InnorukRestrict
		{
			get
			{
				return this._InnorukRestrict;
			}
			set
			{
				if ((this._InnorukRestrict != value))
				{
					this.OnInnorukRestrictChanging(value);
					this.SendPropertyChanging();
					this._InnorukRestrict = value;
					this.SendPropertyChanged("InnorukRestrict");
					this.OnInnorukRestrictChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_KaranaRestrict", DbType="SmallInt NOT NULL")]
		public short KaranaRestrict
		{
			get
			{
				return this._KaranaRestrict;
			}
			set
			{
				if ((this._KaranaRestrict != value))
				{
					this.OnKaranaRestrictChanging(value);
					this.SendPropertyChanging();
					this._KaranaRestrict = value;
					this.SendPropertyChanged("KaranaRestrict");
					this.OnKaranaRestrictChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MithanielRestrict", DbType="SmallInt NOT NULL")]
		public short MithanielRestrict
		{
			get
			{
				return this._MithanielRestrict;
			}
			set
			{
				if ((this._MithanielRestrict != value))
				{
					this.OnMithanielRestrictChanging(value);
					this.SendPropertyChanging();
					this._MithanielRestrict = value;
					this.SendPropertyChanged("MithanielRestrict");
					this.OnMithanielRestrictChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrexusRestrict", DbType="SmallInt NOT NULL")]
		public short PrexusRestrict
		{
			get
			{
				return this._PrexusRestrict;
			}
			set
			{
				if ((this._PrexusRestrict != value))
				{
					this.OnPrexusRestrictChanging(value);
					this.SendPropertyChanging();
					this._PrexusRestrict = value;
					this.SendPropertyChanged("PrexusRestrict");
					this.OnPrexusRestrictChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QuelliousRestrict", DbType="SmallInt NOT NULL")]
		public short QuelliousRestrict
		{
			get
			{
				return this._QuelliousRestrict;
			}
			set
			{
				if ((this._QuelliousRestrict != value))
				{
					this.OnQuelliousRestrictChanging(value);
					this.SendPropertyChanging();
					this._QuelliousRestrict = value;
					this.SendPropertyChanged("QuelliousRestrict");
					this.OnQuelliousRestrictChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RallosRestrict", DbType="SmallInt NOT NULL")]
		public short RallosRestrict
		{
			get
			{
				return this._RallosRestrict;
			}
			set
			{
				if ((this._RallosRestrict != value))
				{
					this.OnRallosRestrictChanging(value);
					this.SendPropertyChanging();
					this._RallosRestrict = value;
					this.SendPropertyChanged("RallosRestrict");
					this.OnRallosRestrictChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RodcetRestrict", DbType="SmallInt NOT NULL")]
		public short RodcetRestrict
		{
			get
			{
				return this._RodcetRestrict;
			}
			set
			{
				if ((this._RodcetRestrict != value))
				{
					this.OnRodcetRestrictChanging(value);
					this.SendPropertyChanging();
					this._RodcetRestrict = value;
					this.SendPropertyChanged("RodcetRestrict");
					this.OnRodcetRestrictChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SolusekRestrict", DbType="SmallInt NOT NULL")]
		public short SolusekRestrict
		{
			get
			{
				return this._SolusekRestrict;
			}
			set
			{
				if ((this._SolusekRestrict != value))
				{
					this.OnSolusekRestrictChanging(value);
					this.SendPropertyChanging();
					this._SolusekRestrict = value;
					this.SendPropertyChanged("SolusekRestrict");
					this.OnSolusekRestrictChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TribunalRestrict", DbType="SmallInt NOT NULL")]
		public short TribunalRestrict
		{
			get
			{
				return this._TribunalRestrict;
			}
			set
			{
				if ((this._TribunalRestrict != value))
				{
					this.OnTribunalRestrictChanging(value);
					this.SendPropertyChanging();
					this._TribunalRestrict = value;
					this.SendPropertyChanged("TribunalRestrict");
					this.OnTribunalRestrictChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TunareRestrict", DbType="SmallInt NOT NULL")]
		public short TunareRestrict
		{
			get
			{
				return this._TunareRestrict;
			}
			set
			{
				if ((this._TunareRestrict != value))
				{
					this.OnTunareRestrictChanging(value);
					this.SendPropertyChanging();
					this._TunareRestrict = value;
					this.SendPropertyChanged("TunareRestrict");
					this.OnTunareRestrictChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VeeshanRestrict", DbType="SmallInt NOT NULL")]
		public short VeeshanRestrict
		{
			get
			{
				return this._VeeshanRestrict;
			}
			set
			{
				if ((this._VeeshanRestrict != value))
				{
					this.OnVeeshanRestrictChanging(value);
					this.SendPropertyChanging();
					this._VeeshanRestrict = value;
					this.SendPropertyChanged("VeeshanRestrict");
					this.OnVeeshanRestrictChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NewIcon", DbType="SmallInt")]
		public System.Nullable<short> NewIcon
		{
			get
			{
				return this._NewIcon;
			}
			set
			{
				if ((this._NewIcon != value))
				{
					this.OnNewIconChanging(value);
					this.SendPropertyChanging();
					this._NewIcon = value;
					this.SendPropertyChanged("NewIcon");
					this.OnNewIconChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpellAnimation", DbType="SmallInt")]
		public System.Nullable<short> SpellAnimation
		{
			get
			{
				return this._SpellAnimation;
			}
			set
			{
				if ((this._SpellAnimation != value))
				{
					this.OnSpellAnimationChanging(value);
					this.SendPropertyChanging();
					this._SpellAnimation = value;
					this.SendPropertyChanged("SpellAnimation");
					this.OnSpellAnimationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Uninterruptable", DbType="SmallInt NOT NULL")]
		public short Uninterruptable
		{
			get
			{
				return this._Uninterruptable;
			}
			set
			{
				if ((this._Uninterruptable != value))
				{
					this.OnUninterruptableChanging(value);
					this.SendPropertyChanging();
					this._Uninterruptable = value;
					this.SendPropertyChanged("Uninterruptable");
					this.OnUninterruptableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResistDiff", DbType="SmallInt")]
		public System.Nullable<short> ResistDiff
		{
			get
			{
				return this._ResistDiff;
			}
			set
			{
				if ((this._ResistDiff != value))
				{
					this.OnResistDiffChanging(value);
					this.SendPropertyChanging();
					this._ResistDiff = value;
					this.SendPropertyChanged("ResistDiff");
					this.OnResistDiffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DotStackingExempt", DbType="Int")]
		public System.Nullable<int> DotStackingExempt
		{
			get
			{
				return this._DotStackingExempt;
			}
			set
			{
				if ((this._DotStackingExempt != value))
				{
					this.OnDotStackingExemptChanging(value);
					this.SendPropertyChanging();
					this._DotStackingExempt = value;
					this.SendPropertyChanged("DotStackingExempt");
					this.OnDotStackingExemptChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Deletable", DbType="Int")]
		public System.Nullable<int> Deletable
		{
			get
			{
				return this._Deletable;
			}
			set
			{
				if ((this._Deletable != value))
				{
					this.OnDeletableChanging(value);
					this.SendPropertyChanging();
					this._Deletable = value;
					this.SendPropertyChanged("Deletable");
					this.OnDeletableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecourseLink", DbType="SmallInt")]
		public System.Nullable<short> RecourseLink
		{
			get
			{
				return this._RecourseLink;
			}
			set
			{
				if ((this._RecourseLink != value))
				{
					this.OnRecourseLinkChanging(value);
					this.SendPropertyChanging();
					this._RecourseLink = value;
					this.SendPropertyChanged("RecourseLink");
					this.OnRecourseLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ShortBuffBox", DbType="SmallInt")]
		public System.Nullable<short> ShortBuffBox
		{
			get
			{
				return this._ShortBuffBox;
			}
			set
			{
				if ((this._ShortBuffBox != value))
				{
					this.OnShortBuffBoxChanging(value);
					this.SendPropertyChanging();
					this._ShortBuffBox = value;
					this.SendPropertyChanged("ShortBuffBox");
					this.OnShortBuffBoxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DescriptionID", DbType="Int")]
		public System.Nullable<int> DescriptionID
		{
			get
			{
				return this._DescriptionID;
			}
			set
			{
				if ((this._DescriptionID != value))
				{
					this.OnDescriptionIDChanging(value);
					this.SendPropertyChanging();
					this._DescriptionID = value;
					this.SendPropertyChanged("DescriptionID");
					this.OnDescriptionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TypeDescriptionID", DbType="Int")]
		public System.Nullable<int> TypeDescriptionID
		{
			get
			{
				return this._TypeDescriptionID;
			}
			set
			{
				if ((this._TypeDescriptionID != value))
				{
					this.OnTypeDescriptionIDChanging(value);
					this.SendPropertyChanging();
					this._TypeDescriptionID = value;
					this.SendPropertyChanged("TypeDescriptionID");
					this.OnTypeDescriptionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EffectDescriptionID", DbType="Int")]
		public System.Nullable<int> EffectDescriptionID
		{
			get
			{
				return this._EffectDescriptionID;
			}
			set
			{
				if ((this._EffectDescriptionID != value))
				{
					this.OnEffectDescriptionIDChanging(value);
					this.SendPropertyChanging();
					this._EffectDescriptionID = value;
					this.SendPropertyChanged("EffectDescriptionID");
					this.OnEffectDescriptionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_BonusHate", DbType="Int")]
		public System.Nullable<int> BonusHate
		{
			get
			{
				return this._BonusHate;
			}
			set
			{
				if ((this._BonusHate != value))
				{
					this.OnBonusHateChanging(value);
					this.SendPropertyChanging();
					this._BonusHate = value;
					this.SendPropertyChanged("BonusHate");
					this.OnBonusHateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnduranceCost", DbType="Int")]
		public System.Nullable<int> EnduranceCost
		{
			get
			{
				return this._EnduranceCost;
			}
			set
			{
				if ((this._EnduranceCost != value))
				{
					this.OnEnduranceCostChanging(value);
					this.SendPropertyChanging();
					this._EnduranceCost = value;
					this.SendPropertyChanged("EnduranceCost");
					this.OnEnduranceCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnduranceTimerIdx", DbType="Int")]
		public System.Nullable<int> EnduranceTimerIdx
		{
			get
			{
				return this._EnduranceTimerIdx;
			}
			set
			{
				if ((this._EnduranceTimerIdx != value))
				{
					this.OnEnduranceTimerIdxChanging(value);
					this.SendPropertyChanging();
					this._EnduranceTimerIdx = value;
					this.SendPropertyChanged("EnduranceTimerIdx");
					this.OnEnduranceTimerIdxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HateAdded", DbType="SmallInt")]
		public System.Nullable<short> HateAdded
		{
			get
			{
				return this._HateAdded;
			}
			set
			{
				if ((this._HateAdded != value))
				{
					this.OnHateAddedChanging(value);
					this.SendPropertyChanging();
					this._HateAdded = value;
					this.SendPropertyChanged("HateAdded");
					this.OnHateAddedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EnduranceUpkeep", DbType="Int")]
		public System.Nullable<int> EnduranceUpkeep
		{
			get
			{
				return this._EnduranceUpkeep;
			}
			set
			{
				if ((this._EnduranceUpkeep != value))
				{
					this.OnEnduranceUpkeepChanging(value);
					this.SendPropertyChanging();
					this._EnduranceUpkeep = value;
					this.SendPropertyChanged("EnduranceUpkeep");
					this.OnEnduranceUpkeepChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumHits", DbType="Int")]
		public System.Nullable<int> NumHits
		{
			get
			{
				return this._NumHits;
			}
			set
			{
				if ((this._NumHits != value))
				{
					this.OnNumHitsChanging(value);
					this.SendPropertyChanging();
					this._NumHits = value;
					this.SendPropertyChanged("NumHits");
					this.OnNumHitsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PVPResistBase", DbType="Float")]
		public System.Nullable<float> PVPResistBase
		{
			get
			{
				return this._PVPResistBase;
			}
			set
			{
				if ((this._PVPResistBase != value))
				{
					this.OnPVPResistBaseChanging(value);
					this.SendPropertyChanging();
					this._PVPResistBase = value;
					this.SendPropertyChanged("PVPResistBase");
					this.OnPVPResistBaseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PVPResistCalc", DbType="Float")]
		public System.Nullable<float> PVPResistCalc
		{
			get
			{
				return this._PVPResistCalc;
			}
			set
			{
				if ((this._PVPResistCalc != value))
				{
					this.OnPVPResistCalcChanging(value);
					this.SendPropertyChanging();
					this._PVPResistCalc = value;
					this.SendPropertyChanged("PVPResistCalc");
					this.OnPVPResistCalcChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PVPResistCap", DbType="Float")]
		public System.Nullable<float> PVPResistCap
		{
			get
			{
				return this._PVPResistCap;
			}
			set
			{
				if ((this._PVPResistCap != value))
				{
					this.OnPVPResistCapChanging(value);
					this.SendPropertyChanging();
					this._PVPResistCap = value;
					this.SendPropertyChanged("PVPResistCap");
					this.OnPVPResistCapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpellCategory", DbType="Int")]
		public System.Nullable<int> SpellCategory
		{
			get
			{
				return this._SpellCategory;
			}
			set
			{
				if ((this._SpellCategory != value))
				{
					this.OnSpellCategoryChanging(value);
					this.SendPropertyChanging();
					this._SpellCategory = value;
					this.SendPropertyChanged("SpellCategory");
					this.OnSpellCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CanBeMGB", DbType="SmallInt")]
		public System.Nullable<short> CanBeMGB
		{
			get
			{
				return this._CanBeMGB;
			}
			set
			{
				if ((this._CanBeMGB != value))
				{
					this.OnCanBeMGBChanging(value);
					this.SendPropertyChanging();
					this._CanBeMGB = value;
					this.SendPropertyChanged("CanBeMGB");
					this.OnCanBeMGBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NoDispell", DbType="SmallInt")]
		public System.Nullable<short> NoDispell
		{
			get
			{
				return this._NoDispell;
			}
			set
			{
				if ((this._NoDispell != value))
				{
					this.OnNoDispellChanging(value);
					this.SendPropertyChanging();
					this._NoDispell = value;
					this.SendPropertyChanged("NoDispell");
					this.OnNoDispellChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NPCCategory", DbType="SmallInt")]
		public System.Nullable<short> NPCCategory
		{
			get
			{
				return this._NPCCategory;
			}
			set
			{
				if ((this._NPCCategory != value))
				{
					this.OnNPCCategoryChanging(value);
					this.SendPropertyChanging();
					this._NPCCategory = value;
					this.SendPropertyChanged("NPCCategory");
					this.OnNPCCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NPCUsefulness", DbType="Int")]
		public System.Nullable<int> NPCUsefulness
		{
			get
			{
				return this._NPCUsefulness;
			}
			set
			{
				if ((this._NPCUsefulness != value))
				{
					this.OnNPCUsefulnessChanging(value);
					this.SendPropertyChanging();
					this._NPCUsefulness = value;
					this.SendPropertyChanged("NPCUsefulness");
					this.OnNPCUsefulnessChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Spell_MemorizedSpell", Storage="_MemorizedSpells", ThisKey="SpellID", OtherKey="SpellID")]
		public EntitySet<MemorizedSpell> MemorizedSpells
		{
			get
			{
				return this._MemorizedSpells;
			}
			set
			{
				this._MemorizedSpells.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Spell_ScribedSpell", Storage="_ScribedSpells", ThisKey="SpellID", OtherKey="SpellID")]
		public EntitySet<ScribedSpell> ScribedSpells
		{
			get
			{
				return this._ScribedSpells;
			}
			set
			{
				this._ScribedSpells.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MemorizedSpells(MemorizedSpell entity)
		{
			this.SendPropertyChanging();
			entity.Spell = this;
		}
		
		private void detach_MemorizedSpells(MemorizedSpell entity)
		{
			this.SendPropertyChanging();
			entity.Spell = null;
		}
		
		private void attach_ScribedSpells(ScribedSpell entity)
		{
			this.SendPropertyChanging();
			entity.Spell = this;
		}
		
		private void detach_ScribedSpells(ScribedSpell entity)
		{
			this.SendPropertyChanging();
			entity.Spell = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MemorizedSpells")]
	public partial class MemorizedSpell : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MemorizedSpellsID;
		
		private int _CharacterID;
		
		private ushort _SpellID;
		
		private byte _SlotID;
		
		private EntityRef<Character> _Character;
		
		private EntityRef<Spell> _Spell;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMemorizedSpellsIDChanging(int value);
    partial void OnMemorizedSpellsIDChanged();
    partial void OnCharacterIDChanging(int value);
    partial void OnCharacterIDChanged();
    partial void OnSpellIDChanging(ushort value);
    partial void OnSpellIDChanged();
    partial void OnSlotIDChanging(byte value);
    partial void OnSlotIDChanged();
    #endregion
		
		public MemorizedSpell()
		{
			this._Character = default(EntityRef<Character>);
			this._Spell = default(EntityRef<Spell>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MemorizedSpellsID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MemorizedSpellsID
		{
			get
			{
				return this._MemorizedSpellsID;
			}
			set
			{
				if ((this._MemorizedSpellsID != value))
				{
					this.OnMemorizedSpellsIDChanging(value);
					this.SendPropertyChanging();
					this._MemorizedSpellsID = value;
					this.SendPropertyChanged("MemorizedSpellsID");
					this.OnMemorizedSpellsIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CharacterID", DbType="Int NOT NULL")]
		public int CharacterID
		{
			get
			{
				return this._CharacterID;
			}
			set
			{
				if ((this._CharacterID != value))
				{
					if (this._Character.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCharacterIDChanging(value);
					this.SendPropertyChanging();
					this._CharacterID = value;
					this.SendPropertyChanged("CharacterID");
					this.OnCharacterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpellID", DbType="SmallInt NOT NULL")]
		public ushort SpellID
		{
			get
			{
				return this._SpellID;
			}
			set
			{
				if ((this._SpellID != value))
				{
					if (this._Spell.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSpellIDChanging(value);
					this.SendPropertyChanging();
					this._SpellID = value;
					this.SendPropertyChanged("SpellID");
					this.OnSpellIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlotID", DbType="TinyInt NOT NULL")]
		public byte SlotID
		{
			get
			{
				return this._SlotID;
			}
			set
			{
				if ((this._SlotID != value))
				{
					this.OnSlotIDChanging(value);
					this.SendPropertyChanging();
					this._SlotID = value;
					this.SendPropertyChanged("SlotID");
					this.OnSlotIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Character_MemorizedSpell", Storage="_Character", ThisKey="CharacterID", OtherKey="CharacterID", IsForeignKey=true)]
		internal Character Character
		{
			get
			{
				return this._Character.Entity;
			}
			set
			{
				Character previousValue = this._Character.Entity;
				if (((previousValue != value) 
							|| (this._Character.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Character.Entity = null;
						previousValue.MemorizedSpells.Remove(this);
					}
					this._Character.Entity = value;
					if ((value != null))
					{
						value.MemorizedSpells.Add(this);
						this._CharacterID = value.CharacterID;
					}
					else
					{
						this._CharacterID = default(int);
					}
					this.SendPropertyChanged("Character");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Spell_MemorizedSpell", Storage="_Spell", ThisKey="SpellID", OtherKey="SpellID", IsForeignKey=true)]
		public Spell Spell
		{
			get
			{
				return this._Spell.Entity;
			}
			set
			{
				Spell previousValue = this._Spell.Entity;
				if (((previousValue != value) 
							|| (this._Spell.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Spell.Entity = null;
						previousValue.MemorizedSpells.Remove(this);
					}
					this._Spell.Entity = value;
					if ((value != null))
					{
						value.MemorizedSpells.Add(this);
						this._SpellID = value.SpellID;
					}
					else
					{
						this._SpellID = default(ushort);
					}
					this.SendPropertyChanged("Spell");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Spellbook")]
	public partial class ScribedSpell : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _SpellbookID;
		
		private int _CharacterID;
		
		private ushort _SpellID;
		
		private short _SlotID;
		
		private EntityRef<Character> _Character;
		
		private EntityRef<Spell> _Spell;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSpellbookIDChanging(int value);
    partial void OnSpellbookIDChanged();
    partial void OnCharacterIDChanging(int value);
    partial void OnCharacterIDChanged();
    partial void OnSpellIDChanging(ushort value);
    partial void OnSpellIDChanged();
    partial void OnSlotIDChanging(short value);
    partial void OnSlotIDChanged();
    #endregion
		
		public ScribedSpell()
		{
			this._Character = default(EntityRef<Character>);
			this._Spell = default(EntityRef<Spell>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpellbookID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int SpellbookID
		{
			get
			{
				return this._SpellbookID;
			}
			set
			{
				if ((this._SpellbookID != value))
				{
					this.OnSpellbookIDChanging(value);
					this.SendPropertyChanging();
					this._SpellbookID = value;
					this.SendPropertyChanged("SpellbookID");
					this.OnSpellbookIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CharacterID", DbType="Int NOT NULL")]
		public int CharacterID
		{
			get
			{
				return this._CharacterID;
			}
			set
			{
				if ((this._CharacterID != value))
				{
					if (this._Character.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCharacterIDChanging(value);
					this.SendPropertyChanging();
					this._CharacterID = value;
					this.SendPropertyChanged("CharacterID");
					this.OnCharacterIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SpellID", DbType="SmallInt NOT NULL")]
		public ushort SpellID
		{
			get
			{
				return this._SpellID;
			}
			set
			{
				if ((this._SpellID != value))
				{
					if (this._Spell.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnSpellIDChanging(value);
					this.SendPropertyChanging();
					this._SpellID = value;
					this.SendPropertyChanged("SpellID");
					this.OnSpellIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SlotID", DbType="SmallInt NOT NULL")]
		public short SlotID
		{
			get
			{
				return this._SlotID;
			}
			set
			{
				if ((this._SlotID != value))
				{
					this.OnSlotIDChanging(value);
					this.SendPropertyChanging();
					this._SlotID = value;
					this.SendPropertyChanged("SlotID");
					this.OnSlotIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Character_ScribedSpell", Storage="_Character", ThisKey="CharacterID", OtherKey="CharacterID", IsForeignKey=true)]
		internal Character Character
		{
			get
			{
				return this._Character.Entity;
			}
			set
			{
				Character previousValue = this._Character.Entity;
				if (((previousValue != value) 
							|| (this._Character.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Character.Entity = null;
						previousValue.ScribedSpells.Remove(this);
					}
					this._Character.Entity = value;
					if ((value != null))
					{
						value.ScribedSpells.Add(this);
						this._CharacterID = value.CharacterID;
					}
					else
					{
						this._CharacterID = default(int);
					}
					this.SendPropertyChanged("Character");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Spell_ScribedSpell", Storage="_Spell", ThisKey="SpellID", OtherKey="SpellID", IsForeignKey=true)]
		public Spell Spell
		{
			get
			{
				return this._Spell.Entity;
			}
			set
			{
				Spell previousValue = this._Spell.Entity;
				if (((previousValue != value) 
							|| (this._Spell.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Spell.Entity = null;
						previousValue.ScribedSpells.Remove(this);
					}
					this._Spell.Entity = value;
					if ((value != null))
					{
						value.ScribedSpells.Add(this);
						this._SpellID = value.SpellID;
					}
					else
					{
						this._SpellID = default(ushort);
					}
					this.SendPropertyChanged("Spell");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
